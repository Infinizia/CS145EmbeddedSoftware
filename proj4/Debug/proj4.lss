
proj4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f04  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000004c  00800060  00000f04  00000f78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000fc4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001020  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  0000105c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001109  00000000  00000000  00001164  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a07  00000000  00000000  0000226d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008dc  00000000  00000000  00002c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000024c  00000000  00000000  00003550  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000429  00000000  00000000  0000379c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ff  00000000  00000000  00003bc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  000043c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3a       	cpi	r26, 0xAC	; 172
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 91 01 	call	0x322	; 0x322 <main>
  7a:	0c 94 80 07 	jmp	0xf00	; 0xf00 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <wait_avr>:
  WDTCR = 15;
}

void
wait_avr(unsigned short msec)
{
  82:	9c 01       	movw	r18, r24
  TCCR0 = 3;
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	83 bf       	out	0x33, r24	; 51
  while (msec--) {
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  88:	80 ef       	ldi	r24, 0xF0	; 240

void
wait_avr(unsigned short msec)
{
  TCCR0 = 3;
  while (msec--) {
  8a:	08 c0       	rjmp	.+16     	; 0x9c <wait_avr+0x1a>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  8c:	82 bf       	out	0x32, r24	; 50
    SET_BIT(TIFR, TOV0);
  8e:	98 b7       	in	r25, 0x38	; 56
  90:	91 60       	ori	r25, 0x01	; 1
  92:	98 bf       	out	0x38, r25	; 56
    WDR();
  94:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
  96:	08 b6       	in	r0, 0x38	; 56
  98:	00 fe       	sbrs	r0, 0
  9a:	fd cf       	rjmp	.-6      	; 0x96 <wait_avr+0x14>

void
wait_avr(unsigned short msec)
{
  TCCR0 = 3;
  while (msec--) {
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	31 09       	sbc	r19, r1
  a0:	a8 f7       	brcc	.-22     	; 0x8c <wait_avr+0xa>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
  a2:	13 be       	out	0x33, r1	; 51
  a4:	08 95       	ret

000000a6 <is_pressed>:
			if (is_pressed(r,c))
			return r * 4 + c + 1;
		}
	}
	return 0;
}
  a6:	14 ba       	out	0x14, r1	; 20
  a8:	15 ba       	out	0x15, r1	; 21
  aa:	95 b3       	in	r25, 0x15	; 21
  ac:	6c 5f       	subi	r22, 0xFC	; 252
  ae:	7f 4f       	sbci	r23, 0xFF	; 255
  b0:	21 e0       	ldi	r18, 0x01	; 1
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	a9 01       	movw	r20, r18
  b6:	06 2e       	mov	r0, r22
  b8:	02 c0       	rjmp	.+4      	; 0xbe <is_pressed+0x18>
  ba:	44 0f       	add	r20, r20
  bc:	55 1f       	adc	r21, r21
  be:	0a 94       	dec	r0
  c0:	e2 f7       	brpl	.-8      	; 0xba <is_pressed+0x14>
  c2:	49 2b       	or	r20, r25
  c4:	45 bb       	out	0x15, r20	; 21
  c6:	94 b3       	in	r25, 0x14	; 20
  c8:	02 c0       	rjmp	.+4      	; 0xce <is_pressed+0x28>
  ca:	22 0f       	add	r18, r18
  cc:	33 1f       	adc	r19, r19
  ce:	8a 95       	dec	r24
  d0:	e2 f7       	brpl	.-8      	; 0xca <is_pressed+0x24>
  d2:	92 2b       	or	r25, r18
  d4:	94 bb       	out	0x14, r25	; 20
  d6:	85 b3       	in	r24, 0x15	; 21
  d8:	20 95       	com	r18
  da:	28 23       	and	r18, r24
  dc:	25 bb       	out	0x15, r18	; 21
  de:	23 b3       	in	r18, 0x13	; 19
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <is_pressed+0x42>
  e4:	35 95       	asr	r19
  e6:	27 95       	ror	r18
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <is_pressed+0x3e>
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	20 ff       	sbrs	r18, 0
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <is_pressed+0x52>
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	08 95       	ret

000000fa <get_key_value>:
unsigned int get_key_value()
{
  fa:	af 92       	push	r10
  fc:	bf 92       	push	r11
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	0f 93       	push	r16
 108:	1f 93       	push	r17
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	c0 e0       	ldi	r28, 0x00	; 0
 110:	d0 e0       	ldi	r29, 0x00	; 0
	unsigned char r;
	unsigned char c;
	// If A to D pressed
	for(r = 0; r < 4; ++r){
		if(is_pressed(r,3))
 112:	63 e0       	ldi	r22, 0x03	; 3
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	ce 01       	movw	r24, r28
 118:	0e 94 53 00 	call	0xa6	; 0xa6 <is_pressed>
 11c:	89 2b       	or	r24, r25
 11e:	21 f0       	breq	.+8      	; 0x128 <get_key_value+0x2e>
		{
			return 65+r;
 120:	ce 01       	movw	r24, r28
 122:	8f 5b       	subi	r24, 0xBF	; 191
 124:	9f 4f       	sbci	r25, 0xFF	; 255
 126:	4d c0       	rjmp	.+154    	; 0x1c2 <get_key_value+0xc8>
 128:	21 96       	adiw	r28, 0x01	; 1
unsigned int get_key_value()
{
	unsigned char r;
	unsigned char c;
	// If A to D pressed
	for(r = 0; r < 4; ++r){
 12a:	c4 30       	cpi	r28, 0x04	; 4
 12c:	d1 05       	cpc	r29, r1
 12e:	89 f7       	brne	.-30     	; 0x112 <get_key_value+0x18>
 130:	a1 2c       	mov	r10, r1
 132:	b1 2c       	mov	r11, r1
 134:	1e c0       	rjmp	.+60     	; 0x172 <get_key_value+0x78>
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
			if(is_pressed(r,c)){
 136:	0e 2d       	mov	r16, r14
 138:	1f 2d       	mov	r17, r15
 13a:	be 01       	movw	r22, r28
 13c:	8e 2d       	mov	r24, r14
 13e:	9f 2d       	mov	r25, r15
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <is_pressed>
 144:	89 2b       	or	r24, r25
 146:	51 f0       	breq	.+20     	; 0x15c <get_key_value+0x62>
				return ((r*3)+c+1)+48;
 148:	c8 01       	movw	r24, r16
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	08 0f       	add	r16, r24
 150:	19 1f       	adc	r17, r25
 152:	0c 0f       	add	r16, r28
 154:	1d 1f       	adc	r17, r29
 156:	c8 01       	movw	r24, r16
 158:	c1 96       	adiw	r24, 0x31	; 49
 15a:	33 c0       	rjmp	.+102    	; 0x1c2 <get_key_value+0xc8>
 15c:	21 96       	adiw	r28, 0x01	; 1
		}
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
 15e:	c3 30       	cpi	r28, 0x03	; 3
 160:	d1 05       	cpc	r29, r1
 162:	49 f7       	brne	.-46     	; 0x136 <get_key_value+0x3c>
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	a8 1a       	sub	r10, r24
 168:	b8 0a       	sbc	r11, r24
			return 65+r;
		}
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
 16a:	83 e0       	ldi	r24, 0x03	; 3
 16c:	a8 16       	cp	r10, r24
 16e:	b1 04       	cpc	r11, r1
 170:	29 f0       	breq	.+10     	; 0x17c <get_key_value+0x82>
		}
	}
	return 0;
}
unsigned int get_key_value()
{
 172:	c0 e0       	ldi	r28, 0x00	; 0
 174:	d0 e0       	ldi	r29, 0x00	; 0
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
			if(is_pressed(r,c)){
 176:	ea 2c       	mov	r14, r10
 178:	fb 2c       	mov	r15, r11
 17a:	dd cf       	rjmp	.-70     	; 0x136 <get_key_value+0x3c>
				return ((r*3)+c+1)+48;
			}
		}
	}
	//If zero pressed
	if(is_pressed(3,1)){
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	83 e0       	ldi	r24, 0x03	; 3
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 53 00 	call	0xa6	; 0xa6 <is_pressed>
 188:	89 2b       	or	r24, r25
 18a:	99 f4       	brne	.+38     	; 0x1b2 <get_key_value+0xb8>
		return '0';
	}
	// If * pressed
	else if(is_pressed(3,0)){
 18c:	60 e0       	ldi	r22, 0x00	; 0
 18e:	70 e0       	ldi	r23, 0x00	; 0
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	0e 94 53 00 	call	0xa6	; 0xa6 <is_pressed>
 198:	89 2b       	or	r24, r25
 19a:	71 f4       	brne	.+28     	; 0x1b8 <get_key_value+0xbe>
		return 42;
	}
	// If # pressed
	else if(is_pressed(3,2)){
 19c:	62 e0       	ldi	r22, 0x02	; 2
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	83 e0       	ldi	r24, 0x03	; 3
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	0e 94 53 00 	call	0xa6	; 0xa6 <is_pressed>
 1a8:	89 2b       	or	r24, r25
 1aa:	49 f4       	brne	.+18     	; 0x1be <get_key_value+0xc4>
		return 35;
	}
	//otherwise just return some random char for not pressed
	return 'Z';
 1ac:	8a e5       	ldi	r24, 0x5A	; 90
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	08 c0       	rjmp	.+16     	; 0x1c2 <get_key_value+0xc8>
			}
		}
	}
	//If zero pressed
	if(is_pressed(3,1)){
		return '0';
 1b2:	80 e3       	ldi	r24, 0x30	; 48
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <get_key_value+0xc8>
	}
	// If * pressed
	else if(is_pressed(3,0)){
		return 42;
 1b8:	8a e2       	ldi	r24, 0x2A	; 42
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <get_key_value+0xc8>
	}
	// If # pressed
	else if(is_pressed(3,2)){
		return 35;
 1be:	83 e2       	ldi	r24, 0x23	; 35
 1c0:	90 e0       	ldi	r25, 0x00	; 0
	}
	//otherwise just return some random char for not pressed
	return 'Z';
}
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	ff 90       	pop	r15
 1cc:	ef 90       	pop	r14
 1ce:	df 90       	pop	r13
 1d0:	cf 90       	pop	r12
 1d2:	bf 90       	pop	r11
 1d4:	af 90       	pop	r10
 1d6:	08 95       	ret

000001d8 <output>:
{
  char c;
  while ((c = pgm_read_byte(s++)) != 0) {
    write(c, 1);
  }
}
 1d8:	66 23       	and	r22, r22
 1da:	11 f0       	breq	.+4      	; 0x1e0 <output+0x8>
 1dc:	c0 9a       	sbi	0x18, 0	; 24
 1de:	01 c0       	rjmp	.+2      	; 0x1e2 <output+0xa>
 1e0:	c0 98       	cbi	0x18, 0	; 24
 1e2:	c1 98       	cbi	0x18, 1	; 24
 1e4:	82 bb       	out	0x12, r24	; 18
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	81 bb       	out	0x11, r24	; 17
 1ea:	c2 9a       	sbi	0x18, 2	; 24
 1ec:	00 00       	nop
 1ee:	00 00       	nop
 1f0:	00 00       	nop
 1f2:	c2 98       	cbi	0x18, 2	; 24
 1f4:	08 95       	ret

000001f6 <write>:
 1f6:	c0 98       	cbi	0x18, 0	; 24
 1f8:	c1 9a       	sbi	0x18, 1	; 24
 1fa:	11 ba       	out	0x11, r1	; 17
 1fc:	90 b3       	in	r25, 0x10	; 16
 1fe:	c2 9a       	sbi	0x18, 2	; 24
 200:	00 00       	nop
 202:	00 00       	nop
 204:	00 00       	nop
 206:	11 ba       	out	0x11, r1	; 17
 208:	90 b3       	in	r25, 0x10	; 16
 20a:	c2 98       	cbi	0x18, 2	; 24
 20c:	99 23       	and	r25, r25
 20e:	9c f3       	brlt	.-26     	; 0x1f6 <write>
 210:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <output>
 214:	08 95       	ret

00000216 <ini_lcd>:
 216:	b8 9a       	sbi	0x17, 0	; 23
 218:	b9 9a       	sbi	0x17, 1	; 23
 21a:	ba 9a       	sbi	0x17, 2	; 23
 21c:	80 e1       	ldi	r24, 0x10	; 16
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	80 e3       	ldi	r24, 0x30	; 48
 228:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <output>
 22c:	85 e0       	ldi	r24, 0x05	; 5
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>
 234:	60 e0       	ldi	r22, 0x00	; 0
 236:	80 e3       	ldi	r24, 0x30	; 48
 238:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <output>
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	8c e3       	ldi	r24, 0x3C	; 60
 248:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	8c e0       	ldi	r24, 0x0C	; 12
 250:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 254:	60 e0       	ldi	r22, 0x00	; 0
 256:	86 e0       	ldi	r24, 0x06	; 6
 258:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 25c:	60 e0       	ldi	r22, 0x00	; 0
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 264:	08 95       	ret

00000266 <pos_lcd>:
 266:	cf 93       	push	r28
 268:	c6 2f       	mov	r28, r22
 26a:	98 e2       	ldi	r25, 0x28	; 40
 26c:	89 9f       	mul	r24, r25
 26e:	c0 0d       	add	r28, r0
 270:	11 24       	eor	r1, r1
 272:	60 e0       	ldi	r22, 0x00	; 0
 274:	82 e0       	ldi	r24, 0x02	; 2
 276:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 27a:	cc 23       	and	r28, r28
 27c:	31 f0       	breq	.+12     	; 0x28a <pos_lcd+0x24>
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	84 e1       	ldi	r24, 0x14	; 20
 282:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>
 286:	c1 50       	subi	r28, 0x01	; 1
 288:	d1 f7       	brne	.-12     	; 0x27e <pos_lcd+0x18>
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <puts_lcd2>:

void
puts_lcd2(const char *s)
{
 28e:	cf 93       	push	r28
 290:	df 93       	push	r29
  char c;
  while ((c = *(s++)) != 0) {
 292:	ec 01       	movw	r28, r24
 294:	21 96       	adiw	r28, 0x01	; 1
 296:	fc 01       	movw	r30, r24
 298:	80 81       	ld	r24, Z
 29a:	88 23       	and	r24, r24
 29c:	31 f0       	breq	.+12     	; 0x2aa <puts_lcd2+0x1c>
    write(c, 1);
 29e:	61 e0       	ldi	r22, 0x01	; 1
 2a0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <write>

void
puts_lcd2(const char *s)
{
  char c;
  while ((c = *(s++)) != 0) {
 2a4:	89 91       	ld	r24, Y+
 2a6:	81 11       	cpse	r24, r1
 2a8:	fa cf       	rjmp	.-12     	; 0x29e <puts_lcd2+0x10>
    write(c, 1);
  }
}
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <mainMenu>:
#include "keypad.h"
#include "voltmeter.h"
#include <stdbool.h>

void mainMenu()
{
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62
 2b8:	61 97       	sbiw	r28, 0x11	; 17
 2ba:	0f b6       	in	r0, 0x3f	; 63
 2bc:	f8 94       	cli
 2be:	de bf       	out	0x3e, r29	; 62
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	cd bf       	out	0x3d, r28	; 61
	char buf2[17];
	sprintf(buf2, "C:---- A:----"); //Current and Avg
 2c4:	8e e0       	ldi	r24, 0x0E	; 14
 2c6:	e0 e6       	ldi	r30, 0x60	; 96
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	de 01       	movw	r26, r28
 2cc:	11 96       	adiw	r26, 0x01	; 1
 2ce:	01 90       	ld	r0, Z+
 2d0:	0d 92       	st	X+, r0
 2d2:	8a 95       	dec	r24
 2d4:	e1 f7       	brne	.-8      	; 0x2ce <mainMenu+0x1e>
	pos_lcd(0, 0);
 2d6:	60 e0       	ldi	r22, 0x00	; 0
 2d8:	70 e0       	ldi	r23, 0x00	; 0
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	0e 94 33 01 	call	0x266	; 0x266 <pos_lcd>
	puts_lcd2(buf2);
 2e2:	ce 01       	movw	r24, r28
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	0e 94 47 01 	call	0x28e	; 0x28e <puts_lcd2>
	sprintf(buf2, "M:---- m:----"); // Max and Min
 2ea:	8e e0       	ldi	r24, 0x0E	; 14
 2ec:	ee e6       	ldi	r30, 0x6E	; 110
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	de 01       	movw	r26, r28
 2f2:	11 96       	adiw	r26, 0x01	; 1
 2f4:	01 90       	ld	r0, Z+
 2f6:	0d 92       	st	X+, r0
 2f8:	8a 95       	dec	r24
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <mainMenu+0x44>
	pos_lcd(1, 0);
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	0e 94 33 01 	call	0x266	; 0x266 <pos_lcd>
	puts_lcd2(buf2);
 308:	ce 01       	movw	r24, r28
 30a:	01 96       	adiw	r24, 0x01	; 1
 30c:	0e 94 47 01 	call	0x28e	; 0x28e <puts_lcd2>
}
 310:	61 96       	adiw	r28, 0x11	; 17
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	f8 94       	cli
 316:	de bf       	out	0x3e, r29	; 62
 318:	0f be       	out	0x3f, r0	; 63
 31a:	cd bf       	out	0x3d, r28	; 61
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	08 95       	ret

00000322 <main>:

int main(void)
{
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	cd b7       	in	r28, 0x3d	; 61
 328:	de b7       	in	r29, 0x3e	; 62
 32a:	2c 97       	sbiw	r28, 0x0c	; 12
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	f8 94       	cli
 330:	de bf       	out	0x3e, r29	; 62
 332:	0f be       	out	0x3f, r0	; 63
 334:	cd bf       	out	0x3d, r28	; 61
	ini_lcd();
 336:	0e 94 0b 01 	call	0x216	; 0x216 <ini_lcd>
	//ini_avr();
	// set PA0 to input
	//SET_BIT(DDRA,0);
	//CLR_BIT(PORTA,0);
    
	ADMUX |= (1 << REFS0);
 33a:	3e 9a       	sbi	0x07, 6	; 7
	while(1)
	{
		myVoltage.total = 0;
		myVoltage.count = 0;
		myVoltage.avg = 0;
		myVoltage.min = 999;
 33c:	0f 2e       	mov	r0, r31
 33e:	f7 ee       	ldi	r31, 0xE7	; 231
 340:	cf 2e       	mov	r12, r31
 342:	f3 e0       	ldi	r31, 0x03	; 3
 344:	df 2e       	mov	r13, r31
 346:	f0 2d       	mov	r31, r0

	bool sampling = false;

	while(1)
	{
		myVoltage.total = 0;
 348:	1a 86       	std	Y+10, r1	; 0x0a
 34a:	19 86       	std	Y+9, r1	; 0x09
		myVoltage.count = 0;
 34c:	1c 86       	std	Y+12, r1	; 0x0c
 34e:	1b 86       	std	Y+11, r1	; 0x0b
		myVoltage.avg = 0;
 350:	18 86       	std	Y+8, r1	; 0x08
 352:	1f 82       	std	Y+7, r1	; 0x07
		myVoltage.min = 999;
 354:	da 82       	std	Y+2, r13	; 0x02
 356:	c9 82       	std	Y+1, r12	; 0x01
		myVoltage.max = 0;
 358:	1c 82       	std	Y+4, r1	; 0x04
 35a:	1b 82       	std	Y+3, r1	; 0x03

		mainMenu();
 35c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <mainMenu>
		int key = get_key_value();
 360:	0e 94 7d 00 	call	0xfa	; 0xfa <get_key_value>
		if (key == '1')
 364:	c1 97       	sbiw	r24, 0x31	; 49
 366:	81 f7       	brne	.-32     	; 0x348 <main+0x26>

			while(sampling)
			{
				//unsigned int voltage = get_a2c();
				//myVoltage.curr = voltage;
				updateStats(&myVoltage);
 368:	ce 01       	movw	r24, r28
 36a:	01 96       	adiw	r24, 0x01	; 1
 36c:	0e 94 e7 01 	call	0x3ce	; 0x3ce <updateStats>
				displayVoltage(myVoltage);
 370:	e9 80       	ldd	r14, Y+1	; 0x01
 372:	fa 80       	ldd	r15, Y+2	; 0x02
 374:	0b 81       	ldd	r16, Y+3	; 0x03
 376:	1c 81       	ldd	r17, Y+4	; 0x04
 378:	2d 81       	ldd	r18, Y+5	; 0x05
 37a:	3e 81       	ldd	r19, Y+6	; 0x06
 37c:	4f 81       	ldd	r20, Y+7	; 0x07
 37e:	58 85       	ldd	r21, Y+8	; 0x08
 380:	69 85       	ldd	r22, Y+9	; 0x09
 382:	7a 85       	ldd	r23, Y+10	; 0x0a
 384:	8b 85       	ldd	r24, Y+11	; 0x0b
 386:	9c 85       	ldd	r25, Y+12	; 0x0c
 388:	0e 94 10 02 	call	0x420	; 0x420 <displayVoltage>
				wait_avr(500);
 38c:	84 ef       	ldi	r24, 0xF4	; 244
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>

				key = get_key_value();
 394:	0e 94 7d 00 	call	0xfa	; 0xfa <get_key_value>
				if (key == '2')
 398:	c2 97       	sbiw	r24, 0x32	; 50
 39a:	31 f7       	brne	.-52     	; 0x368 <main+0x46>
 39c:	d5 cf       	rjmp	.-86     	; 0x348 <main+0x26>

0000039e <get_a2c>:
#include "avr.h"
#include "lcd.h"
//This function get voltage sample readings from avr
unsigned int get_a2c()
{
	ADCSRA = (1 << ADEN) | (1<<ADSC);
 39e:	80 ec       	ldi	r24, 0xC0	; 192
 3a0:	86 b9       	out	0x06, r24	; 6
	return 5 * ( (ADC) / 10.23 ) ;	  // volt = raw/1024 * 5
 3a2:	64 b1       	in	r22, 0x04	; 4
 3a4:	75 b1       	in	r23, 0x05	; 5
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__floatunsisf>
 3ae:	24 e1       	ldi	r18, 0x14	; 20
 3b0:	3e ea       	ldi	r19, 0xAE	; 174
 3b2:	43 e2       	ldi	r20, 0x23	; 35
 3b4:	51 e4       	ldi	r21, 0x41	; 65
 3b6:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__divsf3>
 3ba:	20 e0       	ldi	r18, 0x00	; 0
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	40 ea       	ldi	r20, 0xA0	; 160
 3c0:	50 e4       	ldi	r21, 0x40	; 64
 3c2:	0e 94 06 04 	call	0x80c	; 0x80c <__mulsf3>
 3c6:	0e 94 49 03 	call	0x692	; 0x692 <__fixunssfsi>
	// we want 500, so 1023/10.23=500 *5=500
	//return ADC;

}
 3ca:	cb 01       	movw	r24, r22
 3cc:	08 95       	ret

000003ce <updateStats>:
//This function update the current voltage stats
void updateStats(struct Voltage *stats)
{
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	ec 01       	movw	r28, r24
	unsigned int voltage = get_a2c();
 3d4:	0e 94 cf 01 	call	0x39e	; 0x39e <get_a2c>
 3d8:	9c 01       	movw	r18, r24
	stats->curr = voltage;
 3da:	9d 83       	std	Y+5, r25	; 0x05
 3dc:	8c 83       	std	Y+4, r24	; 0x04
	stats->total += stats->curr;
 3de:	88 85       	ldd	r24, Y+8	; 0x08
 3e0:	99 85       	ldd	r25, Y+9	; 0x09
 3e2:	82 0f       	add	r24, r18
 3e4:	93 1f       	adc	r25, r19
 3e6:	99 87       	std	Y+9, r25	; 0x09
 3e8:	88 87       	std	Y+8, r24	; 0x08
	stats->count++;
 3ea:	6a 85       	ldd	r22, Y+10	; 0x0a
 3ec:	7b 85       	ldd	r23, Y+11	; 0x0b
 3ee:	6f 5f       	subi	r22, 0xFF	; 255
 3f0:	7f 4f       	sbci	r23, 0xFF	; 255
 3f2:	7b 87       	std	Y+11, r23	; 0x0b
 3f4:	6a 87       	std	Y+10, r22	; 0x0a
	stats->avg = stats->total / stats->count;
 3f6:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__udivmodhi4>
 3fa:	7f 83       	std	Y+7, r23	; 0x07
 3fc:	6e 83       	std	Y+6, r22	; 0x06

	
	if (stats->curr > stats->max)
 3fe:	8a 81       	ldd	r24, Y+2	; 0x02
 400:	9b 81       	ldd	r25, Y+3	; 0x03
 402:	82 17       	cp	r24, r18
 404:	93 07       	cpc	r25, r19
 406:	10 f4       	brcc	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
	{
		stats->max = stats->curr;
 408:	3b 83       	std	Y+3, r19	; 0x03
 40a:	2a 83       	std	Y+2, r18	; 0x02
	}
	if (stats->curr < stats->min)
 40c:	88 81       	ld	r24, Y
 40e:	99 81       	ldd	r25, Y+1	; 0x01
 410:	28 17       	cp	r18, r24
 412:	39 07       	cpc	r19, r25
 414:	10 f4       	brcc	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
	{
		stats->min = stats->curr;
 416:	39 83       	std	Y+1, r19	; 0x01
 418:	28 83       	st	Y, r18
	}
}
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <displayVoltage>:

void displayVoltage(struct Voltage stats)
{
 420:	af 92       	push	r10
 422:	bf 92       	push	r11
 424:	df 92       	push	r13
 426:	ef 92       	push	r14
 428:	ff 92       	push	r15
 42a:	0f 93       	push	r16
 42c:	1f 93       	push	r17
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	cd b7       	in	r28, 0x3d	; 61
 434:	de b7       	in	r29, 0x3e	; 62
 436:	6d 97       	sbiw	r28, 0x1d	; 29
 438:	0f b6       	in	r0, 0x3f	; 63
 43a:	f8 94       	cli
 43c:	de bf       	out	0x3e, r29	; 62
 43e:	0f be       	out	0x3f, r0	; 63
 440:	cd bf       	out	0x3d, r28	; 61
 442:	ea 8a       	std	Y+18, r14	; 0x12
 444:	fb 8a       	std	Y+19, r15	; 0x13
 446:	0c 8b       	std	Y+20, r16	; 0x14
 448:	1d 8b       	std	Y+21, r17	; 0x15
 44a:	2e 8b       	std	Y+22, r18	; 0x16
 44c:	3f 8b       	std	Y+23, r19	; 0x17
 44e:	48 8f       	std	Y+24, r20	; 0x18
 450:	59 8f       	std	Y+25, r21	; 0x19
 452:	ea 88       	ldd	r14, Y+18	; 0x12
 454:	fb 88       	ldd	r15, Y+19	; 0x13
 456:	0c 89       	ldd	r16, Y+20	; 0x14
 458:	1d 89       	ldd	r17, Y+21	; 0x15
 45a:	4e 89       	ldd	r20, Y+22	; 0x16
 45c:	5f 89       	ldd	r21, Y+23	; 0x17
 45e:	e8 8d       	ldd	r30, Y+24	; 0x18
 460:	f9 8d       	ldd	r31, Y+25	; 0x19

	char buf2[17];
	sprintf(buf2, "C:%01d.%02d A:%01d.%02d",  (stats.curr/100), (stats.curr%100), (stats.avg/100), (stats.avg%100)); //Current and Avg
 462:	5f 01       	movw	r10, r30
 464:	b6 94       	lsr	r11
 466:	a7 94       	ror	r10
 468:	b6 94       	lsr	r11
 46a:	a7 94       	ror	r10
 46c:	95 01       	movw	r18, r10
 46e:	ab e7       	ldi	r26, 0x7B	; 123
 470:	b4 e1       	ldi	r27, 0x14	; 20
 472:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 476:	96 95       	lsr	r25
 478:	87 95       	ror	r24
 47a:	0f 2e       	mov	r0, r31
 47c:	f4 e6       	ldi	r31, 0x64	; 100
 47e:	df 2e       	mov	r13, r31
 480:	f0 2d       	mov	r31, r0
 482:	d8 9e       	mul	r13, r24
 484:	90 01       	movw	r18, r0
 486:	d9 9e       	mul	r13, r25
 488:	30 0d       	add	r19, r0
 48a:	11 24       	eor	r1, r1
 48c:	e2 1b       	sub	r30, r18
 48e:	f3 0b       	sbc	r31, r19
 490:	ff 93       	push	r31
 492:	ef 93       	push	r30
 494:	95 01       	movw	r18, r10
 496:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 49a:	96 95       	lsr	r25
 49c:	87 95       	ror	r24
 49e:	9f 93       	push	r25
 4a0:	8f 93       	push	r24
 4a2:	fa 01       	movw	r30, r20
 4a4:	f6 95       	lsr	r31
 4a6:	e7 95       	ror	r30
 4a8:	f6 95       	lsr	r31
 4aa:	e7 95       	ror	r30
 4ac:	9f 01       	movw	r18, r30
 4ae:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 4b2:	96 95       	lsr	r25
 4b4:	87 95       	ror	r24
 4b6:	d8 9e       	mul	r13, r24
 4b8:	90 01       	movw	r18, r0
 4ba:	d9 9e       	mul	r13, r25
 4bc:	30 0d       	add	r19, r0
 4be:	11 24       	eor	r1, r1
 4c0:	42 1b       	sub	r20, r18
 4c2:	53 0b       	sbc	r21, r19
 4c4:	5f 93       	push	r21
 4c6:	4f 93       	push	r20
 4c8:	9f 01       	movw	r18, r30
 4ca:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 4ce:	96 95       	lsr	r25
 4d0:	87 95       	ror	r24
 4d2:	9f 93       	push	r25
 4d4:	8f 93       	push	r24
 4d6:	8c e7       	ldi	r24, 0x7C	; 124
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	9f 93       	push	r25
 4dc:	8f 93       	push	r24
 4de:	ce 01       	movw	r24, r28
 4e0:	01 96       	adiw	r24, 0x01	; 1
 4e2:	5c 01       	movw	r10, r24
 4e4:	9f 93       	push	r25
 4e6:	8f 93       	push	r24
 4e8:	0e 94 96 04 	call	0x92c	; 0x92c <sprintf>
	pos_lcd(0, 0);
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	80 e0       	ldi	r24, 0x00	; 0
 4f0:	0e 94 33 01 	call	0x266	; 0x266 <pos_lcd>
	puts_lcd2(buf2);
 4f4:	c5 01       	movw	r24, r10
 4f6:	0e 94 47 01 	call	0x28e	; 0x28e <puts_lcd2>
	sprintf(buf2, "M:%01d.%02d m:%01d.%02d",  (stats.max/100), (stats.max%100), (stats.min/100), (stats.min%100)); // Max and Min
 4fa:	a7 01       	movw	r20, r14
 4fc:	56 95       	lsr	r21
 4fe:	47 95       	ror	r20
 500:	56 95       	lsr	r21
 502:	47 95       	ror	r20
 504:	9a 01       	movw	r18, r20
 506:	ab e7       	ldi	r26, 0x7B	; 123
 508:	b4 e1       	ldi	r27, 0x14	; 20
 50a:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 50e:	96 95       	lsr	r25
 510:	87 95       	ror	r24
 512:	d8 9e       	mul	r13, r24
 514:	90 01       	movw	r18, r0
 516:	d9 9e       	mul	r13, r25
 518:	30 0d       	add	r19, r0
 51a:	11 24       	eor	r1, r1
 51c:	e2 1a       	sub	r14, r18
 51e:	f3 0a       	sbc	r15, r19
 520:	ff 92       	push	r15
 522:	ef 92       	push	r14
 524:	9a 01       	movw	r18, r20
 526:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 52a:	96 95       	lsr	r25
 52c:	87 95       	ror	r24
 52e:	9f 93       	push	r25
 530:	8f 93       	push	r24
 532:	a8 01       	movw	r20, r16
 534:	56 95       	lsr	r21
 536:	47 95       	ror	r20
 538:	56 95       	lsr	r21
 53a:	47 95       	ror	r20
 53c:	9a 01       	movw	r18, r20
 53e:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 542:	96 95       	lsr	r25
 544:	87 95       	ror	r24
 546:	d8 9e       	mul	r13, r24
 548:	90 01       	movw	r18, r0
 54a:	d9 9e       	mul	r13, r25
 54c:	30 0d       	add	r19, r0
 54e:	11 24       	eor	r1, r1
 550:	02 1b       	sub	r16, r18
 552:	13 0b       	sbc	r17, r19
 554:	1f 93       	push	r17
 556:	0f 93       	push	r16
 558:	9a 01       	movw	r18, r20
 55a:	0e 94 87 04 	call	0x90e	; 0x90e <__umulhisi3>
 55e:	96 95       	lsr	r25
 560:	87 95       	ror	r24
 562:	9f 93       	push	r25
 564:	8f 93       	push	r24
 566:	84 e9       	ldi	r24, 0x94	; 148
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	9f 93       	push	r25
 56c:	8f 93       	push	r24
 56e:	bf 92       	push	r11
 570:	af 92       	push	r10
 572:	0e 94 96 04 	call	0x92c	; 0x92c <sprintf>
	pos_lcd(1, 0);
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 33 01 	call	0x266	; 0x266 <pos_lcd>
	puts_lcd2(buf2);
 57e:	c5 01       	movw	r24, r10
 580:	0e 94 47 01 	call	0x28e	; 0x28e <puts_lcd2>

}
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	f8 94       	cli
 588:	de bf       	out	0x3e, r29	; 62
 58a:	0f be       	out	0x3f, r0	; 63
 58c:	cd bf       	out	0x3d, r28	; 61
 58e:	6d 96       	adiw	r28, 0x1d	; 29
 590:	0f b6       	in	r0, 0x3f	; 63
 592:	f8 94       	cli
 594:	de bf       	out	0x3e, r29	; 62
 596:	0f be       	out	0x3f, r0	; 63
 598:	cd bf       	out	0x3d, r28	; 61
 59a:	df 91       	pop	r29
 59c:	cf 91       	pop	r28
 59e:	1f 91       	pop	r17
 5a0:	0f 91       	pop	r16
 5a2:	ff 90       	pop	r15
 5a4:	ef 90       	pop	r14
 5a6:	df 90       	pop	r13
 5a8:	bf 90       	pop	r11
 5aa:	af 90       	pop	r10
 5ac:	08 95       	ret

000005ae <__divsf3>:
 5ae:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__divsf3x>
 5b2:	0c 94 cc 03 	jmp	0x798	; 0x798 <__fp_round>
 5b6:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscB>
 5ba:	58 f0       	brcs	.+22     	; 0x5d2 <__divsf3+0x24>
 5bc:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscA>
 5c0:	40 f0       	brcs	.+16     	; 0x5d2 <__divsf3+0x24>
 5c2:	29 f4       	brne	.+10     	; 0x5ce <__divsf3+0x20>
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	29 f0       	breq	.+10     	; 0x5d2 <__divsf3+0x24>
 5c8:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 5cc:	51 11       	cpse	r21, r1
 5ce:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 5d2:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_nan>

000005d6 <__divsf3x>:
 5d6:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_split3>
 5da:	68 f3       	brcs	.-38     	; 0x5b6 <__divsf3+0x8>

000005dc <__divsf3_pse>:
 5dc:	99 23       	and	r25, r25
 5de:	b1 f3       	breq	.-20     	; 0x5cc <__divsf3+0x1e>
 5e0:	55 23       	and	r21, r21
 5e2:	91 f3       	breq	.-28     	; 0x5c8 <__divsf3+0x1a>
 5e4:	95 1b       	sub	r25, r21
 5e6:	55 0b       	sbc	r21, r21
 5e8:	bb 27       	eor	r27, r27
 5ea:	aa 27       	eor	r26, r26
 5ec:	62 17       	cp	r22, r18
 5ee:	73 07       	cpc	r23, r19
 5f0:	84 07       	cpc	r24, r20
 5f2:	38 f0       	brcs	.+14     	; 0x602 <__divsf3_pse+0x26>
 5f4:	9f 5f       	subi	r25, 0xFF	; 255
 5f6:	5f 4f       	sbci	r21, 0xFF	; 255
 5f8:	22 0f       	add	r18, r18
 5fa:	33 1f       	adc	r19, r19
 5fc:	44 1f       	adc	r20, r20
 5fe:	aa 1f       	adc	r26, r26
 600:	a9 f3       	breq	.-22     	; 0x5ec <__divsf3_pse+0x10>
 602:	35 d0       	rcall	.+106    	; 0x66e <__divsf3_pse+0x92>
 604:	0e 2e       	mov	r0, r30
 606:	3a f0       	brmi	.+14     	; 0x616 <__divsf3_pse+0x3a>
 608:	e0 e8       	ldi	r30, 0x80	; 128
 60a:	32 d0       	rcall	.+100    	; 0x670 <__divsf3_pse+0x94>
 60c:	91 50       	subi	r25, 0x01	; 1
 60e:	50 40       	sbci	r21, 0x00	; 0
 610:	e6 95       	lsr	r30
 612:	00 1c       	adc	r0, r0
 614:	ca f7       	brpl	.-14     	; 0x608 <__divsf3_pse+0x2c>
 616:	2b d0       	rcall	.+86     	; 0x66e <__divsf3_pse+0x92>
 618:	fe 2f       	mov	r31, r30
 61a:	29 d0       	rcall	.+82     	; 0x66e <__divsf3_pse+0x92>
 61c:	66 0f       	add	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	bb 1f       	adc	r27, r27
 624:	26 17       	cp	r18, r22
 626:	37 07       	cpc	r19, r23
 628:	48 07       	cpc	r20, r24
 62a:	ab 07       	cpc	r26, r27
 62c:	b0 e8       	ldi	r27, 0x80	; 128
 62e:	09 f0       	breq	.+2      	; 0x632 <__divsf3_pse+0x56>
 630:	bb 0b       	sbc	r27, r27
 632:	80 2d       	mov	r24, r0
 634:	bf 01       	movw	r22, r30
 636:	ff 27       	eor	r31, r31
 638:	93 58       	subi	r25, 0x83	; 131
 63a:	5f 4f       	sbci	r21, 0xFF	; 255
 63c:	3a f0       	brmi	.+14     	; 0x64c <__divsf3_pse+0x70>
 63e:	9e 3f       	cpi	r25, 0xFE	; 254
 640:	51 05       	cpc	r21, r1
 642:	78 f0       	brcs	.+30     	; 0x662 <__divsf3_pse+0x86>
 644:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 648:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 64c:	5f 3f       	cpi	r21, 0xFF	; 255
 64e:	e4 f3       	brlt	.-8      	; 0x648 <__divsf3_pse+0x6c>
 650:	98 3e       	cpi	r25, 0xE8	; 232
 652:	d4 f3       	brlt	.-12     	; 0x648 <__divsf3_pse+0x6c>
 654:	86 95       	lsr	r24
 656:	77 95       	ror	r23
 658:	67 95       	ror	r22
 65a:	b7 95       	ror	r27
 65c:	f7 95       	ror	r31
 65e:	9f 5f       	subi	r25, 0xFF	; 255
 660:	c9 f7       	brne	.-14     	; 0x654 <__divsf3_pse+0x78>
 662:	88 0f       	add	r24, r24
 664:	91 1d       	adc	r25, r1
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret
 66e:	e1 e0       	ldi	r30, 0x01	; 1
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	bb 1f       	adc	r27, r27
 678:	62 17       	cp	r22, r18
 67a:	73 07       	cpc	r23, r19
 67c:	84 07       	cpc	r24, r20
 67e:	ba 07       	cpc	r27, r26
 680:	20 f0       	brcs	.+8      	; 0x68a <__divsf3_pse+0xae>
 682:	62 1b       	sub	r22, r18
 684:	73 0b       	sbc	r23, r19
 686:	84 0b       	sbc	r24, r20
 688:	ba 0b       	sbc	r27, r26
 68a:	ee 1f       	adc	r30, r30
 68c:	88 f7       	brcc	.-30     	; 0x670 <__divsf3_pse+0x94>
 68e:	e0 95       	com	r30
 690:	08 95       	ret

00000692 <__fixunssfsi>:
 692:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__fp_splitA>
 696:	88 f0       	brcs	.+34     	; 0x6ba <__fixunssfsi+0x28>
 698:	9f 57       	subi	r25, 0x7F	; 127
 69a:	98 f0       	brcs	.+38     	; 0x6c2 <__fixunssfsi+0x30>
 69c:	b9 2f       	mov	r27, r25
 69e:	99 27       	eor	r25, r25
 6a0:	b7 51       	subi	r27, 0x17	; 23
 6a2:	b0 f0       	brcs	.+44     	; 0x6d0 <__fixunssfsi+0x3e>
 6a4:	e1 f0       	breq	.+56     	; 0x6de <__fixunssfsi+0x4c>
 6a6:	66 0f       	add	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	88 1f       	adc	r24, r24
 6ac:	99 1f       	adc	r25, r25
 6ae:	1a f0       	brmi	.+6      	; 0x6b6 <__fixunssfsi+0x24>
 6b0:	ba 95       	dec	r27
 6b2:	c9 f7       	brne	.-14     	; 0x6a6 <__fixunssfsi+0x14>
 6b4:	14 c0       	rjmp	.+40     	; 0x6de <__fixunssfsi+0x4c>
 6b6:	b1 30       	cpi	r27, 0x01	; 1
 6b8:	91 f0       	breq	.+36     	; 0x6de <__fixunssfsi+0x4c>
 6ba:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fp_zero>
 6be:	b1 e0       	ldi	r27, 0x01	; 1
 6c0:	08 95       	ret
 6c2:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_zero>
 6c6:	67 2f       	mov	r22, r23
 6c8:	78 2f       	mov	r23, r24
 6ca:	88 27       	eor	r24, r24
 6cc:	b8 5f       	subi	r27, 0xF8	; 248
 6ce:	39 f0       	breq	.+14     	; 0x6de <__fixunssfsi+0x4c>
 6d0:	b9 3f       	cpi	r27, 0xF9	; 249
 6d2:	cc f3       	brlt	.-14     	; 0x6c6 <__fixunssfsi+0x34>
 6d4:	86 95       	lsr	r24
 6d6:	77 95       	ror	r23
 6d8:	67 95       	ror	r22
 6da:	b3 95       	inc	r27
 6dc:	d9 f7       	brne	.-10     	; 0x6d4 <__fixunssfsi+0x42>
 6de:	3e f4       	brtc	.+14     	; 0x6ee <__fixunssfsi+0x5c>
 6e0:	90 95       	com	r25
 6e2:	80 95       	com	r24
 6e4:	70 95       	com	r23
 6e6:	61 95       	neg	r22
 6e8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ea:	8f 4f       	sbci	r24, 0xFF	; 255
 6ec:	9f 4f       	sbci	r25, 0xFF	; 255
 6ee:	08 95       	ret

000006f0 <__floatunsisf>:
 6f0:	e8 94       	clt
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <__floatsisf+0x12>

000006f4 <__floatsisf>:
 6f4:	97 fb       	bst	r25, 7
 6f6:	3e f4       	brtc	.+14     	; 0x706 <__floatsisf+0x12>
 6f8:	90 95       	com	r25
 6fa:	80 95       	com	r24
 6fc:	70 95       	com	r23
 6fe:	61 95       	neg	r22
 700:	7f 4f       	sbci	r23, 0xFF	; 255
 702:	8f 4f       	sbci	r24, 0xFF	; 255
 704:	9f 4f       	sbci	r25, 0xFF	; 255
 706:	99 23       	and	r25, r25
 708:	a9 f0       	breq	.+42     	; 0x734 <__floatsisf+0x40>
 70a:	f9 2f       	mov	r31, r25
 70c:	96 e9       	ldi	r25, 0x96	; 150
 70e:	bb 27       	eor	r27, r27
 710:	93 95       	inc	r25
 712:	f6 95       	lsr	r31
 714:	87 95       	ror	r24
 716:	77 95       	ror	r23
 718:	67 95       	ror	r22
 71a:	b7 95       	ror	r27
 71c:	f1 11       	cpse	r31, r1
 71e:	f8 cf       	rjmp	.-16     	; 0x710 <__floatsisf+0x1c>
 720:	fa f4       	brpl	.+62     	; 0x760 <__floatsisf+0x6c>
 722:	bb 0f       	add	r27, r27
 724:	11 f4       	brne	.+4      	; 0x72a <__floatsisf+0x36>
 726:	60 ff       	sbrs	r22, 0
 728:	1b c0       	rjmp	.+54     	; 0x760 <__floatsisf+0x6c>
 72a:	6f 5f       	subi	r22, 0xFF	; 255
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	16 c0       	rjmp	.+44     	; 0x760 <__floatsisf+0x6c>
 734:	88 23       	and	r24, r24
 736:	11 f0       	breq	.+4      	; 0x73c <__floatsisf+0x48>
 738:	96 e9       	ldi	r25, 0x96	; 150
 73a:	11 c0       	rjmp	.+34     	; 0x75e <__floatsisf+0x6a>
 73c:	77 23       	and	r23, r23
 73e:	21 f0       	breq	.+8      	; 0x748 <__floatsisf+0x54>
 740:	9e e8       	ldi	r25, 0x8E	; 142
 742:	87 2f       	mov	r24, r23
 744:	76 2f       	mov	r23, r22
 746:	05 c0       	rjmp	.+10     	; 0x752 <__floatsisf+0x5e>
 748:	66 23       	and	r22, r22
 74a:	71 f0       	breq	.+28     	; 0x768 <__floatsisf+0x74>
 74c:	96 e8       	ldi	r25, 0x86	; 134
 74e:	86 2f       	mov	r24, r22
 750:	70 e0       	ldi	r23, 0x00	; 0
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	2a f0       	brmi	.+10     	; 0x760 <__floatsisf+0x6c>
 756:	9a 95       	dec	r25
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	da f7       	brpl	.-10     	; 0x756 <__floatsisf+0x62>
 760:	88 0f       	add	r24, r24
 762:	96 95       	lsr	r25
 764:	87 95       	ror	r24
 766:	97 f9       	bld	r25, 7
 768:	08 95       	ret

0000076a <__fp_inf>:
 76a:	97 f9       	bld	r25, 7
 76c:	9f 67       	ori	r25, 0x7F	; 127
 76e:	80 e8       	ldi	r24, 0x80	; 128
 770:	70 e0       	ldi	r23, 0x00	; 0
 772:	60 e0       	ldi	r22, 0x00	; 0
 774:	08 95       	ret

00000776 <__fp_nan>:
 776:	9f ef       	ldi	r25, 0xFF	; 255
 778:	80 ec       	ldi	r24, 0xC0	; 192
 77a:	08 95       	ret

0000077c <__fp_pscA>:
 77c:	00 24       	eor	r0, r0
 77e:	0a 94       	dec	r0
 780:	16 16       	cp	r1, r22
 782:	17 06       	cpc	r1, r23
 784:	18 06       	cpc	r1, r24
 786:	09 06       	cpc	r0, r25
 788:	08 95       	ret

0000078a <__fp_pscB>:
 78a:	00 24       	eor	r0, r0
 78c:	0a 94       	dec	r0
 78e:	12 16       	cp	r1, r18
 790:	13 06       	cpc	r1, r19
 792:	14 06       	cpc	r1, r20
 794:	05 06       	cpc	r0, r21
 796:	08 95       	ret

00000798 <__fp_round>:
 798:	09 2e       	mov	r0, r25
 79a:	03 94       	inc	r0
 79c:	00 0c       	add	r0, r0
 79e:	11 f4       	brne	.+4      	; 0x7a4 <__fp_round+0xc>
 7a0:	88 23       	and	r24, r24
 7a2:	52 f0       	brmi	.+20     	; 0x7b8 <__fp_round+0x20>
 7a4:	bb 0f       	add	r27, r27
 7a6:	40 f4       	brcc	.+16     	; 0x7b8 <__fp_round+0x20>
 7a8:	bf 2b       	or	r27, r31
 7aa:	11 f4       	brne	.+4      	; 0x7b0 <__fp_round+0x18>
 7ac:	60 ff       	sbrs	r22, 0
 7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <__fp_round+0x20>
 7b0:	6f 5f       	subi	r22, 0xFF	; 255
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255
 7b4:	8f 4f       	sbci	r24, 0xFF	; 255
 7b6:	9f 4f       	sbci	r25, 0xFF	; 255
 7b8:	08 95       	ret

000007ba <__fp_split3>:
 7ba:	57 fd       	sbrc	r21, 7
 7bc:	90 58       	subi	r25, 0x80	; 128
 7be:	44 0f       	add	r20, r20
 7c0:	55 1f       	adc	r21, r21
 7c2:	59 f0       	breq	.+22     	; 0x7da <__fp_splitA+0x10>
 7c4:	5f 3f       	cpi	r21, 0xFF	; 255
 7c6:	71 f0       	breq	.+28     	; 0x7e4 <__fp_splitA+0x1a>
 7c8:	47 95       	ror	r20

000007ca <__fp_splitA>:
 7ca:	88 0f       	add	r24, r24
 7cc:	97 fb       	bst	r25, 7
 7ce:	99 1f       	adc	r25, r25
 7d0:	61 f0       	breq	.+24     	; 0x7ea <__fp_splitA+0x20>
 7d2:	9f 3f       	cpi	r25, 0xFF	; 255
 7d4:	79 f0       	breq	.+30     	; 0x7f4 <__fp_splitA+0x2a>
 7d6:	87 95       	ror	r24
 7d8:	08 95       	ret
 7da:	12 16       	cp	r1, r18
 7dc:	13 06       	cpc	r1, r19
 7de:	14 06       	cpc	r1, r20
 7e0:	55 1f       	adc	r21, r21
 7e2:	f2 cf       	rjmp	.-28     	; 0x7c8 <__fp_split3+0xe>
 7e4:	46 95       	lsr	r20
 7e6:	f1 df       	rcall	.-30     	; 0x7ca <__fp_splitA>
 7e8:	08 c0       	rjmp	.+16     	; 0x7fa <__fp_splitA+0x30>
 7ea:	16 16       	cp	r1, r22
 7ec:	17 06       	cpc	r1, r23
 7ee:	18 06       	cpc	r1, r24
 7f0:	99 1f       	adc	r25, r25
 7f2:	f1 cf       	rjmp	.-30     	; 0x7d6 <__fp_splitA+0xc>
 7f4:	86 95       	lsr	r24
 7f6:	71 05       	cpc	r23, r1
 7f8:	61 05       	cpc	r22, r1
 7fa:	08 94       	sec
 7fc:	08 95       	ret

000007fe <__fp_zero>:
 7fe:	e8 94       	clt

00000800 <__fp_szero>:
 800:	bb 27       	eor	r27, r27
 802:	66 27       	eor	r22, r22
 804:	77 27       	eor	r23, r23
 806:	cb 01       	movw	r24, r22
 808:	97 f9       	bld	r25, 7
 80a:	08 95       	ret

0000080c <__mulsf3>:
 80c:	0e 94 19 04 	call	0x832	; 0x832 <__mulsf3x>
 810:	0c 94 cc 03 	jmp	0x798	; 0x798 <__fp_round>
 814:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscA>
 818:	38 f0       	brcs	.+14     	; 0x828 <__mulsf3+0x1c>
 81a:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscB>
 81e:	20 f0       	brcs	.+8      	; 0x828 <__mulsf3+0x1c>
 820:	95 23       	and	r25, r21
 822:	11 f0       	breq	.+4      	; 0x828 <__mulsf3+0x1c>
 824:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 828:	0c 94 bb 03 	jmp	0x776	; 0x776 <__fp_nan>
 82c:	11 24       	eor	r1, r1
 82e:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>

00000832 <__mulsf3x>:
 832:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__fp_split3>
 836:	70 f3       	brcs	.-36     	; 0x814 <__mulsf3+0x8>

00000838 <__mulsf3_pse>:
 838:	95 9f       	mul	r25, r21
 83a:	c1 f3       	breq	.-16     	; 0x82c <__mulsf3+0x20>
 83c:	95 0f       	add	r25, r21
 83e:	50 e0       	ldi	r21, 0x00	; 0
 840:	55 1f       	adc	r21, r21
 842:	62 9f       	mul	r22, r18
 844:	f0 01       	movw	r30, r0
 846:	72 9f       	mul	r23, r18
 848:	bb 27       	eor	r27, r27
 84a:	f0 0d       	add	r31, r0
 84c:	b1 1d       	adc	r27, r1
 84e:	63 9f       	mul	r22, r19
 850:	aa 27       	eor	r26, r26
 852:	f0 0d       	add	r31, r0
 854:	b1 1d       	adc	r27, r1
 856:	aa 1f       	adc	r26, r26
 858:	64 9f       	mul	r22, r20
 85a:	66 27       	eor	r22, r22
 85c:	b0 0d       	add	r27, r0
 85e:	a1 1d       	adc	r26, r1
 860:	66 1f       	adc	r22, r22
 862:	82 9f       	mul	r24, r18
 864:	22 27       	eor	r18, r18
 866:	b0 0d       	add	r27, r0
 868:	a1 1d       	adc	r26, r1
 86a:	62 1f       	adc	r22, r18
 86c:	73 9f       	mul	r23, r19
 86e:	b0 0d       	add	r27, r0
 870:	a1 1d       	adc	r26, r1
 872:	62 1f       	adc	r22, r18
 874:	83 9f       	mul	r24, r19
 876:	a0 0d       	add	r26, r0
 878:	61 1d       	adc	r22, r1
 87a:	22 1f       	adc	r18, r18
 87c:	74 9f       	mul	r23, r20
 87e:	33 27       	eor	r19, r19
 880:	a0 0d       	add	r26, r0
 882:	61 1d       	adc	r22, r1
 884:	23 1f       	adc	r18, r19
 886:	84 9f       	mul	r24, r20
 888:	60 0d       	add	r22, r0
 88a:	21 1d       	adc	r18, r1
 88c:	82 2f       	mov	r24, r18
 88e:	76 2f       	mov	r23, r22
 890:	6a 2f       	mov	r22, r26
 892:	11 24       	eor	r1, r1
 894:	9f 57       	subi	r25, 0x7F	; 127
 896:	50 40       	sbci	r21, 0x00	; 0
 898:	9a f0       	brmi	.+38     	; 0x8c0 <__stack+0x61>
 89a:	f1 f0       	breq	.+60     	; 0x8d8 <__stack+0x79>
 89c:	88 23       	and	r24, r24
 89e:	4a f0       	brmi	.+18     	; 0x8b2 <__stack+0x53>
 8a0:	ee 0f       	add	r30, r30
 8a2:	ff 1f       	adc	r31, r31
 8a4:	bb 1f       	adc	r27, r27
 8a6:	66 1f       	adc	r22, r22
 8a8:	77 1f       	adc	r23, r23
 8aa:	88 1f       	adc	r24, r24
 8ac:	91 50       	subi	r25, 0x01	; 1
 8ae:	50 40       	sbci	r21, 0x00	; 0
 8b0:	a9 f7       	brne	.-22     	; 0x89c <__stack+0x3d>
 8b2:	9e 3f       	cpi	r25, 0xFE	; 254
 8b4:	51 05       	cpc	r21, r1
 8b6:	80 f0       	brcs	.+32     	; 0x8d8 <__stack+0x79>
 8b8:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__fp_inf>
 8bc:	0c 94 00 04 	jmp	0x800	; 0x800 <__fp_szero>
 8c0:	5f 3f       	cpi	r21, 0xFF	; 255
 8c2:	e4 f3       	brlt	.-8      	; 0x8bc <__stack+0x5d>
 8c4:	98 3e       	cpi	r25, 0xE8	; 232
 8c6:	d4 f3       	brlt	.-12     	; 0x8bc <__stack+0x5d>
 8c8:	86 95       	lsr	r24
 8ca:	77 95       	ror	r23
 8cc:	67 95       	ror	r22
 8ce:	b7 95       	ror	r27
 8d0:	f7 95       	ror	r31
 8d2:	e7 95       	ror	r30
 8d4:	9f 5f       	subi	r25, 0xFF	; 255
 8d6:	c1 f7       	brne	.-16     	; 0x8c8 <__stack+0x69>
 8d8:	fe 2b       	or	r31, r30
 8da:	88 0f       	add	r24, r24
 8dc:	91 1d       	adc	r25, r1
 8de:	96 95       	lsr	r25
 8e0:	87 95       	ror	r24
 8e2:	97 f9       	bld	r25, 7
 8e4:	08 95       	ret

000008e6 <__udivmodhi4>:
 8e6:	aa 1b       	sub	r26, r26
 8e8:	bb 1b       	sub	r27, r27
 8ea:	51 e1       	ldi	r21, 0x11	; 17
 8ec:	07 c0       	rjmp	.+14     	; 0x8fc <__udivmodhi4_ep>

000008ee <__udivmodhi4_loop>:
 8ee:	aa 1f       	adc	r26, r26
 8f0:	bb 1f       	adc	r27, r27
 8f2:	a6 17       	cp	r26, r22
 8f4:	b7 07       	cpc	r27, r23
 8f6:	10 f0       	brcs	.+4      	; 0x8fc <__udivmodhi4_ep>
 8f8:	a6 1b       	sub	r26, r22
 8fa:	b7 0b       	sbc	r27, r23

000008fc <__udivmodhi4_ep>:
 8fc:	88 1f       	adc	r24, r24
 8fe:	99 1f       	adc	r25, r25
 900:	5a 95       	dec	r21
 902:	a9 f7       	brne	.-22     	; 0x8ee <__udivmodhi4_loop>
 904:	80 95       	com	r24
 906:	90 95       	com	r25
 908:	bc 01       	movw	r22, r24
 90a:	cd 01       	movw	r24, r26
 90c:	08 95       	ret

0000090e <__umulhisi3>:
 90e:	a2 9f       	mul	r26, r18
 910:	b0 01       	movw	r22, r0
 912:	b3 9f       	mul	r27, r19
 914:	c0 01       	movw	r24, r0
 916:	a3 9f       	mul	r26, r19
 918:	70 0d       	add	r23, r0
 91a:	81 1d       	adc	r24, r1
 91c:	11 24       	eor	r1, r1
 91e:	91 1d       	adc	r25, r1
 920:	b2 9f       	mul	r27, r18
 922:	70 0d       	add	r23, r0
 924:	81 1d       	adc	r24, r1
 926:	11 24       	eor	r1, r1
 928:	91 1d       	adc	r25, r1
 92a:	08 95       	ret

0000092c <sprintf>:
 92c:	ae e0       	ldi	r26, 0x0E	; 14
 92e:	b0 e0       	ldi	r27, 0x00	; 0
 930:	ec e9       	ldi	r30, 0x9C	; 156
 932:	f4 e0       	ldi	r31, 0x04	; 4
 934:	0c 94 57 07 	jmp	0xeae	; 0xeae <__prologue_saves__+0x1c>
 938:	0d 89       	ldd	r16, Y+21	; 0x15
 93a:	1e 89       	ldd	r17, Y+22	; 0x16
 93c:	86 e0       	ldi	r24, 0x06	; 6
 93e:	8c 83       	std	Y+4, r24	; 0x04
 940:	1a 83       	std	Y+2, r17	; 0x02
 942:	09 83       	std	Y+1, r16	; 0x01
 944:	8f ef       	ldi	r24, 0xFF	; 255
 946:	9f e7       	ldi	r25, 0x7F	; 127
 948:	9e 83       	std	Y+6, r25	; 0x06
 94a:	8d 83       	std	Y+5, r24	; 0x05
 94c:	ae 01       	movw	r20, r28
 94e:	47 5e       	subi	r20, 0xE7	; 231
 950:	5f 4f       	sbci	r21, 0xFF	; 255
 952:	6f 89       	ldd	r22, Y+23	; 0x17
 954:	78 8d       	ldd	r23, Y+24	; 0x18
 956:	ce 01       	movw	r24, r28
 958:	01 96       	adiw	r24, 0x01	; 1
 95a:	0e 94 b8 04 	call	0x970	; 0x970 <vfprintf>
 95e:	ef 81       	ldd	r30, Y+7	; 0x07
 960:	f8 85       	ldd	r31, Y+8	; 0x08
 962:	e0 0f       	add	r30, r16
 964:	f1 1f       	adc	r31, r17
 966:	10 82       	st	Z, r1
 968:	2e 96       	adiw	r28, 0x0e	; 14
 96a:	e4 e0       	ldi	r30, 0x04	; 4
 96c:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__epilogue_restores__+0x1c>

00000970 <vfprintf>:
 970:	ab e0       	ldi	r26, 0x0B	; 11
 972:	b0 e0       	ldi	r27, 0x00	; 0
 974:	ee eb       	ldi	r30, 0xBE	; 190
 976:	f4 e0       	ldi	r31, 0x04	; 4
 978:	0c 94 49 07 	jmp	0xe92	; 0xe92 <__prologue_saves__>
 97c:	6c 01       	movw	r12, r24
 97e:	7b 01       	movw	r14, r22
 980:	8a 01       	movw	r16, r20
 982:	fc 01       	movw	r30, r24
 984:	17 82       	std	Z+7, r1	; 0x07
 986:	16 82       	std	Z+6, r1	; 0x06
 988:	83 81       	ldd	r24, Z+3	; 0x03
 98a:	81 ff       	sbrs	r24, 1
 98c:	cc c1       	rjmp	.+920    	; 0xd26 <vfprintf+0x3b6>
 98e:	ce 01       	movw	r24, r28
 990:	01 96       	adiw	r24, 0x01	; 1
 992:	3c 01       	movw	r6, r24
 994:	f6 01       	movw	r30, r12
 996:	93 81       	ldd	r25, Z+3	; 0x03
 998:	f7 01       	movw	r30, r14
 99a:	93 fd       	sbrc	r25, 3
 99c:	85 91       	lpm	r24, Z+
 99e:	93 ff       	sbrs	r25, 3
 9a0:	81 91       	ld	r24, Z+
 9a2:	7f 01       	movw	r14, r30
 9a4:	88 23       	and	r24, r24
 9a6:	09 f4       	brne	.+2      	; 0x9aa <vfprintf+0x3a>
 9a8:	ba c1       	rjmp	.+884    	; 0xd1e <vfprintf+0x3ae>
 9aa:	85 32       	cpi	r24, 0x25	; 37
 9ac:	39 f4       	brne	.+14     	; 0x9bc <vfprintf+0x4c>
 9ae:	93 fd       	sbrc	r25, 3
 9b0:	85 91       	lpm	r24, Z+
 9b2:	93 ff       	sbrs	r25, 3
 9b4:	81 91       	ld	r24, Z+
 9b6:	7f 01       	movw	r14, r30
 9b8:	85 32       	cpi	r24, 0x25	; 37
 9ba:	29 f4       	brne	.+10     	; 0x9c6 <vfprintf+0x56>
 9bc:	b6 01       	movw	r22, r12
 9be:	90 e0       	ldi	r25, 0x00	; 0
 9c0:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 9c4:	e7 cf       	rjmp	.-50     	; 0x994 <vfprintf+0x24>
 9c6:	91 2c       	mov	r9, r1
 9c8:	21 2c       	mov	r2, r1
 9ca:	31 2c       	mov	r3, r1
 9cc:	ff e1       	ldi	r31, 0x1F	; 31
 9ce:	f3 15       	cp	r31, r3
 9d0:	d8 f0       	brcs	.+54     	; 0xa08 <vfprintf+0x98>
 9d2:	8b 32       	cpi	r24, 0x2B	; 43
 9d4:	79 f0       	breq	.+30     	; 0x9f4 <vfprintf+0x84>
 9d6:	38 f4       	brcc	.+14     	; 0x9e6 <vfprintf+0x76>
 9d8:	80 32       	cpi	r24, 0x20	; 32
 9da:	79 f0       	breq	.+30     	; 0x9fa <vfprintf+0x8a>
 9dc:	83 32       	cpi	r24, 0x23	; 35
 9de:	a1 f4       	brne	.+40     	; 0xa08 <vfprintf+0x98>
 9e0:	23 2d       	mov	r18, r3
 9e2:	20 61       	ori	r18, 0x10	; 16
 9e4:	1d c0       	rjmp	.+58     	; 0xa20 <vfprintf+0xb0>
 9e6:	8d 32       	cpi	r24, 0x2D	; 45
 9e8:	61 f0       	breq	.+24     	; 0xa02 <vfprintf+0x92>
 9ea:	80 33       	cpi	r24, 0x30	; 48
 9ec:	69 f4       	brne	.+26     	; 0xa08 <vfprintf+0x98>
 9ee:	23 2d       	mov	r18, r3
 9f0:	21 60       	ori	r18, 0x01	; 1
 9f2:	16 c0       	rjmp	.+44     	; 0xa20 <vfprintf+0xb0>
 9f4:	83 2d       	mov	r24, r3
 9f6:	82 60       	ori	r24, 0x02	; 2
 9f8:	38 2e       	mov	r3, r24
 9fa:	e3 2d       	mov	r30, r3
 9fc:	e4 60       	ori	r30, 0x04	; 4
 9fe:	3e 2e       	mov	r3, r30
 a00:	2a c0       	rjmp	.+84     	; 0xa56 <vfprintf+0xe6>
 a02:	f3 2d       	mov	r31, r3
 a04:	f8 60       	ori	r31, 0x08	; 8
 a06:	1d c0       	rjmp	.+58     	; 0xa42 <vfprintf+0xd2>
 a08:	37 fc       	sbrc	r3, 7
 a0a:	2d c0       	rjmp	.+90     	; 0xa66 <vfprintf+0xf6>
 a0c:	20 ed       	ldi	r18, 0xD0	; 208
 a0e:	28 0f       	add	r18, r24
 a10:	2a 30       	cpi	r18, 0x0A	; 10
 a12:	40 f0       	brcs	.+16     	; 0xa24 <vfprintf+0xb4>
 a14:	8e 32       	cpi	r24, 0x2E	; 46
 a16:	b9 f4       	brne	.+46     	; 0xa46 <vfprintf+0xd6>
 a18:	36 fc       	sbrc	r3, 6
 a1a:	81 c1       	rjmp	.+770    	; 0xd1e <vfprintf+0x3ae>
 a1c:	23 2d       	mov	r18, r3
 a1e:	20 64       	ori	r18, 0x40	; 64
 a20:	32 2e       	mov	r3, r18
 a22:	19 c0       	rjmp	.+50     	; 0xa56 <vfprintf+0xe6>
 a24:	36 fe       	sbrs	r3, 6
 a26:	06 c0       	rjmp	.+12     	; 0xa34 <vfprintf+0xc4>
 a28:	8a e0       	ldi	r24, 0x0A	; 10
 a2a:	98 9e       	mul	r9, r24
 a2c:	20 0d       	add	r18, r0
 a2e:	11 24       	eor	r1, r1
 a30:	92 2e       	mov	r9, r18
 a32:	11 c0       	rjmp	.+34     	; 0xa56 <vfprintf+0xe6>
 a34:	ea e0       	ldi	r30, 0x0A	; 10
 a36:	2e 9e       	mul	r2, r30
 a38:	20 0d       	add	r18, r0
 a3a:	11 24       	eor	r1, r1
 a3c:	22 2e       	mov	r2, r18
 a3e:	f3 2d       	mov	r31, r3
 a40:	f0 62       	ori	r31, 0x20	; 32
 a42:	3f 2e       	mov	r3, r31
 a44:	08 c0       	rjmp	.+16     	; 0xa56 <vfprintf+0xe6>
 a46:	8c 36       	cpi	r24, 0x6C	; 108
 a48:	21 f4       	brne	.+8      	; 0xa52 <vfprintf+0xe2>
 a4a:	83 2d       	mov	r24, r3
 a4c:	80 68       	ori	r24, 0x80	; 128
 a4e:	38 2e       	mov	r3, r24
 a50:	02 c0       	rjmp	.+4      	; 0xa56 <vfprintf+0xe6>
 a52:	88 36       	cpi	r24, 0x68	; 104
 a54:	41 f4       	brne	.+16     	; 0xa66 <vfprintf+0xf6>
 a56:	f7 01       	movw	r30, r14
 a58:	93 fd       	sbrc	r25, 3
 a5a:	85 91       	lpm	r24, Z+
 a5c:	93 ff       	sbrs	r25, 3
 a5e:	81 91       	ld	r24, Z+
 a60:	7f 01       	movw	r14, r30
 a62:	81 11       	cpse	r24, r1
 a64:	b3 cf       	rjmp	.-154    	; 0x9cc <vfprintf+0x5c>
 a66:	98 2f       	mov	r25, r24
 a68:	9f 7d       	andi	r25, 0xDF	; 223
 a6a:	95 54       	subi	r25, 0x45	; 69
 a6c:	93 30       	cpi	r25, 0x03	; 3
 a6e:	28 f4       	brcc	.+10     	; 0xa7a <vfprintf+0x10a>
 a70:	0c 5f       	subi	r16, 0xFC	; 252
 a72:	1f 4f       	sbci	r17, 0xFF	; 255
 a74:	9f e3       	ldi	r25, 0x3F	; 63
 a76:	99 83       	std	Y+1, r25	; 0x01
 a78:	0d c0       	rjmp	.+26     	; 0xa94 <vfprintf+0x124>
 a7a:	83 36       	cpi	r24, 0x63	; 99
 a7c:	31 f0       	breq	.+12     	; 0xa8a <vfprintf+0x11a>
 a7e:	83 37       	cpi	r24, 0x73	; 115
 a80:	71 f0       	breq	.+28     	; 0xa9e <vfprintf+0x12e>
 a82:	83 35       	cpi	r24, 0x53	; 83
 a84:	09 f0       	breq	.+2      	; 0xa88 <vfprintf+0x118>
 a86:	59 c0       	rjmp	.+178    	; 0xb3a <vfprintf+0x1ca>
 a88:	21 c0       	rjmp	.+66     	; 0xacc <vfprintf+0x15c>
 a8a:	f8 01       	movw	r30, r16
 a8c:	80 81       	ld	r24, Z
 a8e:	89 83       	std	Y+1, r24	; 0x01
 a90:	0e 5f       	subi	r16, 0xFE	; 254
 a92:	1f 4f       	sbci	r17, 0xFF	; 255
 a94:	88 24       	eor	r8, r8
 a96:	83 94       	inc	r8
 a98:	91 2c       	mov	r9, r1
 a9a:	53 01       	movw	r10, r6
 a9c:	13 c0       	rjmp	.+38     	; 0xac4 <vfprintf+0x154>
 a9e:	28 01       	movw	r4, r16
 aa0:	f2 e0       	ldi	r31, 0x02	; 2
 aa2:	4f 0e       	add	r4, r31
 aa4:	51 1c       	adc	r5, r1
 aa6:	f8 01       	movw	r30, r16
 aa8:	a0 80       	ld	r10, Z
 aaa:	b1 80       	ldd	r11, Z+1	; 0x01
 aac:	36 fe       	sbrs	r3, 6
 aae:	03 c0       	rjmp	.+6      	; 0xab6 <vfprintf+0x146>
 ab0:	69 2d       	mov	r22, r9
 ab2:	70 e0       	ldi	r23, 0x00	; 0
 ab4:	02 c0       	rjmp	.+4      	; 0xaba <vfprintf+0x14a>
 ab6:	6f ef       	ldi	r22, 0xFF	; 255
 ab8:	7f ef       	ldi	r23, 0xFF	; 255
 aba:	c5 01       	movw	r24, r10
 abc:	0e 94 a4 06 	call	0xd48	; 0xd48 <strnlen>
 ac0:	4c 01       	movw	r8, r24
 ac2:	82 01       	movw	r16, r4
 ac4:	f3 2d       	mov	r31, r3
 ac6:	ff 77       	andi	r31, 0x7F	; 127
 ac8:	3f 2e       	mov	r3, r31
 aca:	16 c0       	rjmp	.+44     	; 0xaf8 <vfprintf+0x188>
 acc:	28 01       	movw	r4, r16
 ace:	22 e0       	ldi	r18, 0x02	; 2
 ad0:	42 0e       	add	r4, r18
 ad2:	51 1c       	adc	r5, r1
 ad4:	f8 01       	movw	r30, r16
 ad6:	a0 80       	ld	r10, Z
 ad8:	b1 80       	ldd	r11, Z+1	; 0x01
 ada:	36 fe       	sbrs	r3, 6
 adc:	03 c0       	rjmp	.+6      	; 0xae4 <vfprintf+0x174>
 ade:	69 2d       	mov	r22, r9
 ae0:	70 e0       	ldi	r23, 0x00	; 0
 ae2:	02 c0       	rjmp	.+4      	; 0xae8 <vfprintf+0x178>
 ae4:	6f ef       	ldi	r22, 0xFF	; 255
 ae6:	7f ef       	ldi	r23, 0xFF	; 255
 ae8:	c5 01       	movw	r24, r10
 aea:	0e 94 99 06 	call	0xd32	; 0xd32 <strnlen_P>
 aee:	4c 01       	movw	r8, r24
 af0:	f3 2d       	mov	r31, r3
 af2:	f0 68       	ori	r31, 0x80	; 128
 af4:	3f 2e       	mov	r3, r31
 af6:	82 01       	movw	r16, r4
 af8:	33 fc       	sbrc	r3, 3
 afa:	1b c0       	rjmp	.+54     	; 0xb32 <vfprintf+0x1c2>
 afc:	82 2d       	mov	r24, r2
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	88 16       	cp	r8, r24
 b02:	99 06       	cpc	r9, r25
 b04:	b0 f4       	brcc	.+44     	; 0xb32 <vfprintf+0x1c2>
 b06:	b6 01       	movw	r22, r12
 b08:	80 e2       	ldi	r24, 0x20	; 32
 b0a:	90 e0       	ldi	r25, 0x00	; 0
 b0c:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 b10:	2a 94       	dec	r2
 b12:	f4 cf       	rjmp	.-24     	; 0xafc <vfprintf+0x18c>
 b14:	f5 01       	movw	r30, r10
 b16:	37 fc       	sbrc	r3, 7
 b18:	85 91       	lpm	r24, Z+
 b1a:	37 fe       	sbrs	r3, 7
 b1c:	81 91       	ld	r24, Z+
 b1e:	5f 01       	movw	r10, r30
 b20:	b6 01       	movw	r22, r12
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 b28:	21 10       	cpse	r2, r1
 b2a:	2a 94       	dec	r2
 b2c:	21 e0       	ldi	r18, 0x01	; 1
 b2e:	82 1a       	sub	r8, r18
 b30:	91 08       	sbc	r9, r1
 b32:	81 14       	cp	r8, r1
 b34:	91 04       	cpc	r9, r1
 b36:	71 f7       	brne	.-36     	; 0xb14 <vfprintf+0x1a4>
 b38:	e8 c0       	rjmp	.+464    	; 0xd0a <vfprintf+0x39a>
 b3a:	84 36       	cpi	r24, 0x64	; 100
 b3c:	11 f0       	breq	.+4      	; 0xb42 <vfprintf+0x1d2>
 b3e:	89 36       	cpi	r24, 0x69	; 105
 b40:	41 f5       	brne	.+80     	; 0xb92 <vfprintf+0x222>
 b42:	f8 01       	movw	r30, r16
 b44:	37 fe       	sbrs	r3, 7
 b46:	07 c0       	rjmp	.+14     	; 0xb56 <vfprintf+0x1e6>
 b48:	60 81       	ld	r22, Z
 b4a:	71 81       	ldd	r23, Z+1	; 0x01
 b4c:	82 81       	ldd	r24, Z+2	; 0x02
 b4e:	93 81       	ldd	r25, Z+3	; 0x03
 b50:	0c 5f       	subi	r16, 0xFC	; 252
 b52:	1f 4f       	sbci	r17, 0xFF	; 255
 b54:	08 c0       	rjmp	.+16     	; 0xb66 <vfprintf+0x1f6>
 b56:	60 81       	ld	r22, Z
 b58:	71 81       	ldd	r23, Z+1	; 0x01
 b5a:	07 2e       	mov	r0, r23
 b5c:	00 0c       	add	r0, r0
 b5e:	88 0b       	sbc	r24, r24
 b60:	99 0b       	sbc	r25, r25
 b62:	0e 5f       	subi	r16, 0xFE	; 254
 b64:	1f 4f       	sbci	r17, 0xFF	; 255
 b66:	f3 2d       	mov	r31, r3
 b68:	ff 76       	andi	r31, 0x6F	; 111
 b6a:	3f 2e       	mov	r3, r31
 b6c:	97 ff       	sbrs	r25, 7
 b6e:	09 c0       	rjmp	.+18     	; 0xb82 <vfprintf+0x212>
 b70:	90 95       	com	r25
 b72:	80 95       	com	r24
 b74:	70 95       	com	r23
 b76:	61 95       	neg	r22
 b78:	7f 4f       	sbci	r23, 0xFF	; 255
 b7a:	8f 4f       	sbci	r24, 0xFF	; 255
 b7c:	9f 4f       	sbci	r25, 0xFF	; 255
 b7e:	f0 68       	ori	r31, 0x80	; 128
 b80:	3f 2e       	mov	r3, r31
 b82:	2a e0       	ldi	r18, 0x0A	; 10
 b84:	30 e0       	ldi	r19, 0x00	; 0
 b86:	a3 01       	movw	r20, r6
 b88:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__ultoa_invert>
 b8c:	88 2e       	mov	r8, r24
 b8e:	86 18       	sub	r8, r6
 b90:	45 c0       	rjmp	.+138    	; 0xc1c <vfprintf+0x2ac>
 b92:	85 37       	cpi	r24, 0x75	; 117
 b94:	31 f4       	brne	.+12     	; 0xba2 <vfprintf+0x232>
 b96:	23 2d       	mov	r18, r3
 b98:	2f 7e       	andi	r18, 0xEF	; 239
 b9a:	b2 2e       	mov	r11, r18
 b9c:	2a e0       	ldi	r18, 0x0A	; 10
 b9e:	30 e0       	ldi	r19, 0x00	; 0
 ba0:	25 c0       	rjmp	.+74     	; 0xbec <vfprintf+0x27c>
 ba2:	93 2d       	mov	r25, r3
 ba4:	99 7f       	andi	r25, 0xF9	; 249
 ba6:	b9 2e       	mov	r11, r25
 ba8:	8f 36       	cpi	r24, 0x6F	; 111
 baa:	c1 f0       	breq	.+48     	; 0xbdc <vfprintf+0x26c>
 bac:	18 f4       	brcc	.+6      	; 0xbb4 <vfprintf+0x244>
 bae:	88 35       	cpi	r24, 0x58	; 88
 bb0:	79 f0       	breq	.+30     	; 0xbd0 <vfprintf+0x260>
 bb2:	b5 c0       	rjmp	.+362    	; 0xd1e <vfprintf+0x3ae>
 bb4:	80 37       	cpi	r24, 0x70	; 112
 bb6:	19 f0       	breq	.+6      	; 0xbbe <vfprintf+0x24e>
 bb8:	88 37       	cpi	r24, 0x78	; 120
 bba:	21 f0       	breq	.+8      	; 0xbc4 <vfprintf+0x254>
 bbc:	b0 c0       	rjmp	.+352    	; 0xd1e <vfprintf+0x3ae>
 bbe:	e9 2f       	mov	r30, r25
 bc0:	e0 61       	ori	r30, 0x10	; 16
 bc2:	be 2e       	mov	r11, r30
 bc4:	b4 fe       	sbrs	r11, 4
 bc6:	0d c0       	rjmp	.+26     	; 0xbe2 <vfprintf+0x272>
 bc8:	fb 2d       	mov	r31, r11
 bca:	f4 60       	ori	r31, 0x04	; 4
 bcc:	bf 2e       	mov	r11, r31
 bce:	09 c0       	rjmp	.+18     	; 0xbe2 <vfprintf+0x272>
 bd0:	34 fe       	sbrs	r3, 4
 bd2:	0a c0       	rjmp	.+20     	; 0xbe8 <vfprintf+0x278>
 bd4:	29 2f       	mov	r18, r25
 bd6:	26 60       	ori	r18, 0x06	; 6
 bd8:	b2 2e       	mov	r11, r18
 bda:	06 c0       	rjmp	.+12     	; 0xbe8 <vfprintf+0x278>
 bdc:	28 e0       	ldi	r18, 0x08	; 8
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	05 c0       	rjmp	.+10     	; 0xbec <vfprintf+0x27c>
 be2:	20 e1       	ldi	r18, 0x10	; 16
 be4:	30 e0       	ldi	r19, 0x00	; 0
 be6:	02 c0       	rjmp	.+4      	; 0xbec <vfprintf+0x27c>
 be8:	20 e1       	ldi	r18, 0x10	; 16
 bea:	32 e0       	ldi	r19, 0x02	; 2
 bec:	f8 01       	movw	r30, r16
 bee:	b7 fe       	sbrs	r11, 7
 bf0:	07 c0       	rjmp	.+14     	; 0xc00 <vfprintf+0x290>
 bf2:	60 81       	ld	r22, Z
 bf4:	71 81       	ldd	r23, Z+1	; 0x01
 bf6:	82 81       	ldd	r24, Z+2	; 0x02
 bf8:	93 81       	ldd	r25, Z+3	; 0x03
 bfa:	0c 5f       	subi	r16, 0xFC	; 252
 bfc:	1f 4f       	sbci	r17, 0xFF	; 255
 bfe:	06 c0       	rjmp	.+12     	; 0xc0c <vfprintf+0x29c>
 c00:	60 81       	ld	r22, Z
 c02:	71 81       	ldd	r23, Z+1	; 0x01
 c04:	80 e0       	ldi	r24, 0x00	; 0
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	0e 5f       	subi	r16, 0xFE	; 254
 c0a:	1f 4f       	sbci	r17, 0xFF	; 255
 c0c:	a3 01       	movw	r20, r6
 c0e:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <__ultoa_invert>
 c12:	88 2e       	mov	r8, r24
 c14:	86 18       	sub	r8, r6
 c16:	fb 2d       	mov	r31, r11
 c18:	ff 77       	andi	r31, 0x7F	; 127
 c1a:	3f 2e       	mov	r3, r31
 c1c:	36 fe       	sbrs	r3, 6
 c1e:	0d c0       	rjmp	.+26     	; 0xc3a <vfprintf+0x2ca>
 c20:	23 2d       	mov	r18, r3
 c22:	2e 7f       	andi	r18, 0xFE	; 254
 c24:	a2 2e       	mov	r10, r18
 c26:	89 14       	cp	r8, r9
 c28:	58 f4       	brcc	.+22     	; 0xc40 <vfprintf+0x2d0>
 c2a:	34 fe       	sbrs	r3, 4
 c2c:	0b c0       	rjmp	.+22     	; 0xc44 <vfprintf+0x2d4>
 c2e:	32 fc       	sbrc	r3, 2
 c30:	09 c0       	rjmp	.+18     	; 0xc44 <vfprintf+0x2d4>
 c32:	83 2d       	mov	r24, r3
 c34:	8e 7e       	andi	r24, 0xEE	; 238
 c36:	a8 2e       	mov	r10, r24
 c38:	05 c0       	rjmp	.+10     	; 0xc44 <vfprintf+0x2d4>
 c3a:	b8 2c       	mov	r11, r8
 c3c:	a3 2c       	mov	r10, r3
 c3e:	03 c0       	rjmp	.+6      	; 0xc46 <vfprintf+0x2d6>
 c40:	b8 2c       	mov	r11, r8
 c42:	01 c0       	rjmp	.+2      	; 0xc46 <vfprintf+0x2d6>
 c44:	b9 2c       	mov	r11, r9
 c46:	a4 fe       	sbrs	r10, 4
 c48:	0f c0       	rjmp	.+30     	; 0xc68 <vfprintf+0x2f8>
 c4a:	fe 01       	movw	r30, r28
 c4c:	e8 0d       	add	r30, r8
 c4e:	f1 1d       	adc	r31, r1
 c50:	80 81       	ld	r24, Z
 c52:	80 33       	cpi	r24, 0x30	; 48
 c54:	21 f4       	brne	.+8      	; 0xc5e <vfprintf+0x2ee>
 c56:	9a 2d       	mov	r25, r10
 c58:	99 7e       	andi	r25, 0xE9	; 233
 c5a:	a9 2e       	mov	r10, r25
 c5c:	09 c0       	rjmp	.+18     	; 0xc70 <vfprintf+0x300>
 c5e:	a2 fe       	sbrs	r10, 2
 c60:	06 c0       	rjmp	.+12     	; 0xc6e <vfprintf+0x2fe>
 c62:	b3 94       	inc	r11
 c64:	b3 94       	inc	r11
 c66:	04 c0       	rjmp	.+8      	; 0xc70 <vfprintf+0x300>
 c68:	8a 2d       	mov	r24, r10
 c6a:	86 78       	andi	r24, 0x86	; 134
 c6c:	09 f0       	breq	.+2      	; 0xc70 <vfprintf+0x300>
 c6e:	b3 94       	inc	r11
 c70:	a3 fc       	sbrc	r10, 3
 c72:	11 c0       	rjmp	.+34     	; 0xc96 <vfprintf+0x326>
 c74:	a0 fe       	sbrs	r10, 0
 c76:	06 c0       	rjmp	.+12     	; 0xc84 <vfprintf+0x314>
 c78:	b2 14       	cp	r11, r2
 c7a:	88 f4       	brcc	.+34     	; 0xc9e <vfprintf+0x32e>
 c7c:	28 0c       	add	r2, r8
 c7e:	92 2c       	mov	r9, r2
 c80:	9b 18       	sub	r9, r11
 c82:	0e c0       	rjmp	.+28     	; 0xca0 <vfprintf+0x330>
 c84:	b2 14       	cp	r11, r2
 c86:	60 f4       	brcc	.+24     	; 0xca0 <vfprintf+0x330>
 c88:	b6 01       	movw	r22, r12
 c8a:	80 e2       	ldi	r24, 0x20	; 32
 c8c:	90 e0       	ldi	r25, 0x00	; 0
 c8e:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 c92:	b3 94       	inc	r11
 c94:	f7 cf       	rjmp	.-18     	; 0xc84 <vfprintf+0x314>
 c96:	b2 14       	cp	r11, r2
 c98:	18 f4       	brcc	.+6      	; 0xca0 <vfprintf+0x330>
 c9a:	2b 18       	sub	r2, r11
 c9c:	02 c0       	rjmp	.+4      	; 0xca2 <vfprintf+0x332>
 c9e:	98 2c       	mov	r9, r8
 ca0:	21 2c       	mov	r2, r1
 ca2:	a4 fe       	sbrs	r10, 4
 ca4:	10 c0       	rjmp	.+32     	; 0xcc6 <vfprintf+0x356>
 ca6:	b6 01       	movw	r22, r12
 ca8:	80 e3       	ldi	r24, 0x30	; 48
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 cb0:	a2 fe       	sbrs	r10, 2
 cb2:	17 c0       	rjmp	.+46     	; 0xce2 <vfprintf+0x372>
 cb4:	a1 fc       	sbrc	r10, 1
 cb6:	03 c0       	rjmp	.+6      	; 0xcbe <vfprintf+0x34e>
 cb8:	88 e7       	ldi	r24, 0x78	; 120
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	02 c0       	rjmp	.+4      	; 0xcc2 <vfprintf+0x352>
 cbe:	88 e5       	ldi	r24, 0x58	; 88
 cc0:	90 e0       	ldi	r25, 0x00	; 0
 cc2:	b6 01       	movw	r22, r12
 cc4:	0c c0       	rjmp	.+24     	; 0xcde <vfprintf+0x36e>
 cc6:	8a 2d       	mov	r24, r10
 cc8:	86 78       	andi	r24, 0x86	; 134
 cca:	59 f0       	breq	.+22     	; 0xce2 <vfprintf+0x372>
 ccc:	a1 fe       	sbrs	r10, 1
 cce:	02 c0       	rjmp	.+4      	; 0xcd4 <vfprintf+0x364>
 cd0:	8b e2       	ldi	r24, 0x2B	; 43
 cd2:	01 c0       	rjmp	.+2      	; 0xcd6 <vfprintf+0x366>
 cd4:	80 e2       	ldi	r24, 0x20	; 32
 cd6:	a7 fc       	sbrc	r10, 7
 cd8:	8d e2       	ldi	r24, 0x2D	; 45
 cda:	b6 01       	movw	r22, r12
 cdc:	90 e0       	ldi	r25, 0x00	; 0
 cde:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 ce2:	89 14       	cp	r8, r9
 ce4:	38 f4       	brcc	.+14     	; 0xcf4 <vfprintf+0x384>
 ce6:	b6 01       	movw	r22, r12
 ce8:	80 e3       	ldi	r24, 0x30	; 48
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 cf0:	9a 94       	dec	r9
 cf2:	f7 cf       	rjmp	.-18     	; 0xce2 <vfprintf+0x372>
 cf4:	8a 94       	dec	r8
 cf6:	f3 01       	movw	r30, r6
 cf8:	e8 0d       	add	r30, r8
 cfa:	f1 1d       	adc	r31, r1
 cfc:	80 81       	ld	r24, Z
 cfe:	b6 01       	movw	r22, r12
 d00:	90 e0       	ldi	r25, 0x00	; 0
 d02:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 d06:	81 10       	cpse	r8, r1
 d08:	f5 cf       	rjmp	.-22     	; 0xcf4 <vfprintf+0x384>
 d0a:	22 20       	and	r2, r2
 d0c:	09 f4       	brne	.+2      	; 0xd10 <vfprintf+0x3a0>
 d0e:	42 ce       	rjmp	.-892    	; 0x994 <vfprintf+0x24>
 d10:	b6 01       	movw	r22, r12
 d12:	80 e2       	ldi	r24, 0x20	; 32
 d14:	90 e0       	ldi	r25, 0x00	; 0
 d16:	0e 94 af 06 	call	0xd5e	; 0xd5e <fputc>
 d1a:	2a 94       	dec	r2
 d1c:	f6 cf       	rjmp	.-20     	; 0xd0a <vfprintf+0x39a>
 d1e:	f6 01       	movw	r30, r12
 d20:	86 81       	ldd	r24, Z+6	; 0x06
 d22:	97 81       	ldd	r25, Z+7	; 0x07
 d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0x3ba>
 d26:	8f ef       	ldi	r24, 0xFF	; 255
 d28:	9f ef       	ldi	r25, 0xFF	; 255
 d2a:	2b 96       	adiw	r28, 0x0b	; 11
 d2c:	e2 e1       	ldi	r30, 0x12	; 18
 d2e:	0c 94 65 07 	jmp	0xeca	; 0xeca <__epilogue_restores__>

00000d32 <strnlen_P>:
 d32:	fc 01       	movw	r30, r24
 d34:	05 90       	lpm	r0, Z+
 d36:	61 50       	subi	r22, 0x01	; 1
 d38:	70 40       	sbci	r23, 0x00	; 0
 d3a:	01 10       	cpse	r0, r1
 d3c:	d8 f7       	brcc	.-10     	; 0xd34 <strnlen_P+0x2>
 d3e:	80 95       	com	r24
 d40:	90 95       	com	r25
 d42:	8e 0f       	add	r24, r30
 d44:	9f 1f       	adc	r25, r31
 d46:	08 95       	ret

00000d48 <strnlen>:
 d48:	fc 01       	movw	r30, r24
 d4a:	61 50       	subi	r22, 0x01	; 1
 d4c:	70 40       	sbci	r23, 0x00	; 0
 d4e:	01 90       	ld	r0, Z+
 d50:	01 10       	cpse	r0, r1
 d52:	d8 f7       	brcc	.-10     	; 0xd4a <strnlen+0x2>
 d54:	80 95       	com	r24
 d56:	90 95       	com	r25
 d58:	8e 0f       	add	r24, r30
 d5a:	9f 1f       	adc	r25, r31
 d5c:	08 95       	ret

00000d5e <fputc>:
 d5e:	0f 93       	push	r16
 d60:	1f 93       	push	r17
 d62:	cf 93       	push	r28
 d64:	df 93       	push	r29
 d66:	fb 01       	movw	r30, r22
 d68:	23 81       	ldd	r18, Z+3	; 0x03
 d6a:	21 fd       	sbrc	r18, 1
 d6c:	03 c0       	rjmp	.+6      	; 0xd74 <fputc+0x16>
 d6e:	8f ef       	ldi	r24, 0xFF	; 255
 d70:	9f ef       	ldi	r25, 0xFF	; 255
 d72:	2c c0       	rjmp	.+88     	; 0xdcc <fputc+0x6e>
 d74:	22 ff       	sbrs	r18, 2
 d76:	16 c0       	rjmp	.+44     	; 0xda4 <fputc+0x46>
 d78:	46 81       	ldd	r20, Z+6	; 0x06
 d7a:	57 81       	ldd	r21, Z+7	; 0x07
 d7c:	24 81       	ldd	r18, Z+4	; 0x04
 d7e:	35 81       	ldd	r19, Z+5	; 0x05
 d80:	42 17       	cp	r20, r18
 d82:	53 07       	cpc	r21, r19
 d84:	44 f4       	brge	.+16     	; 0xd96 <fputc+0x38>
 d86:	a0 81       	ld	r26, Z
 d88:	b1 81       	ldd	r27, Z+1	; 0x01
 d8a:	9d 01       	movw	r18, r26
 d8c:	2f 5f       	subi	r18, 0xFF	; 255
 d8e:	3f 4f       	sbci	r19, 0xFF	; 255
 d90:	31 83       	std	Z+1, r19	; 0x01
 d92:	20 83       	st	Z, r18
 d94:	8c 93       	st	X, r24
 d96:	26 81       	ldd	r18, Z+6	; 0x06
 d98:	37 81       	ldd	r19, Z+7	; 0x07
 d9a:	2f 5f       	subi	r18, 0xFF	; 255
 d9c:	3f 4f       	sbci	r19, 0xFF	; 255
 d9e:	37 83       	std	Z+7, r19	; 0x07
 da0:	26 83       	std	Z+6, r18	; 0x06
 da2:	14 c0       	rjmp	.+40     	; 0xdcc <fputc+0x6e>
 da4:	8b 01       	movw	r16, r22
 da6:	ec 01       	movw	r28, r24
 da8:	fb 01       	movw	r30, r22
 daa:	00 84       	ldd	r0, Z+8	; 0x08
 dac:	f1 85       	ldd	r31, Z+9	; 0x09
 dae:	e0 2d       	mov	r30, r0
 db0:	09 95       	icall
 db2:	89 2b       	or	r24, r25
 db4:	e1 f6       	brne	.-72     	; 0xd6e <fputc+0x10>
 db6:	d8 01       	movw	r26, r16
 db8:	16 96       	adiw	r26, 0x06	; 6
 dba:	8d 91       	ld	r24, X+
 dbc:	9c 91       	ld	r25, X
 dbe:	17 97       	sbiw	r26, 0x07	; 7
 dc0:	01 96       	adiw	r24, 0x01	; 1
 dc2:	17 96       	adiw	r26, 0x07	; 7
 dc4:	9c 93       	st	X, r25
 dc6:	8e 93       	st	-X, r24
 dc8:	16 97       	sbiw	r26, 0x06	; 6
 dca:	ce 01       	movw	r24, r28
 dcc:	df 91       	pop	r29
 dce:	cf 91       	pop	r28
 dd0:	1f 91       	pop	r17
 dd2:	0f 91       	pop	r16
 dd4:	08 95       	ret

00000dd6 <__ultoa_invert>:
 dd6:	fa 01       	movw	r30, r20
 dd8:	aa 27       	eor	r26, r26
 dda:	28 30       	cpi	r18, 0x08	; 8
 ddc:	51 f1       	breq	.+84     	; 0xe32 <__ultoa_invert+0x5c>
 dde:	20 31       	cpi	r18, 0x10	; 16
 de0:	81 f1       	breq	.+96     	; 0xe42 <__ultoa_invert+0x6c>
 de2:	e8 94       	clt
 de4:	6f 93       	push	r22
 de6:	6e 7f       	andi	r22, 0xFE	; 254
 de8:	6e 5f       	subi	r22, 0xFE	; 254
 dea:	7f 4f       	sbci	r23, 0xFF	; 255
 dec:	8f 4f       	sbci	r24, 0xFF	; 255
 dee:	9f 4f       	sbci	r25, 0xFF	; 255
 df0:	af 4f       	sbci	r26, 0xFF	; 255
 df2:	b1 e0       	ldi	r27, 0x01	; 1
 df4:	3e d0       	rcall	.+124    	; 0xe72 <__ultoa_invert+0x9c>
 df6:	b4 e0       	ldi	r27, 0x04	; 4
 df8:	3c d0       	rcall	.+120    	; 0xe72 <__ultoa_invert+0x9c>
 dfa:	67 0f       	add	r22, r23
 dfc:	78 1f       	adc	r23, r24
 dfe:	89 1f       	adc	r24, r25
 e00:	9a 1f       	adc	r25, r26
 e02:	a1 1d       	adc	r26, r1
 e04:	68 0f       	add	r22, r24
 e06:	79 1f       	adc	r23, r25
 e08:	8a 1f       	adc	r24, r26
 e0a:	91 1d       	adc	r25, r1
 e0c:	a1 1d       	adc	r26, r1
 e0e:	6a 0f       	add	r22, r26
 e10:	71 1d       	adc	r23, r1
 e12:	81 1d       	adc	r24, r1
 e14:	91 1d       	adc	r25, r1
 e16:	a1 1d       	adc	r26, r1
 e18:	20 d0       	rcall	.+64     	; 0xe5a <__ultoa_invert+0x84>
 e1a:	09 f4       	brne	.+2      	; 0xe1e <__ultoa_invert+0x48>
 e1c:	68 94       	set
 e1e:	3f 91       	pop	r19
 e20:	2a e0       	ldi	r18, 0x0A	; 10
 e22:	26 9f       	mul	r18, r22
 e24:	11 24       	eor	r1, r1
 e26:	30 19       	sub	r19, r0
 e28:	30 5d       	subi	r19, 0xD0	; 208
 e2a:	31 93       	st	Z+, r19
 e2c:	de f6       	brtc	.-74     	; 0xde4 <__ultoa_invert+0xe>
 e2e:	cf 01       	movw	r24, r30
 e30:	08 95       	ret
 e32:	46 2f       	mov	r20, r22
 e34:	47 70       	andi	r20, 0x07	; 7
 e36:	40 5d       	subi	r20, 0xD0	; 208
 e38:	41 93       	st	Z+, r20
 e3a:	b3 e0       	ldi	r27, 0x03	; 3
 e3c:	0f d0       	rcall	.+30     	; 0xe5c <__ultoa_invert+0x86>
 e3e:	c9 f7       	brne	.-14     	; 0xe32 <__ultoa_invert+0x5c>
 e40:	f6 cf       	rjmp	.-20     	; 0xe2e <__ultoa_invert+0x58>
 e42:	46 2f       	mov	r20, r22
 e44:	4f 70       	andi	r20, 0x0F	; 15
 e46:	40 5d       	subi	r20, 0xD0	; 208
 e48:	4a 33       	cpi	r20, 0x3A	; 58
 e4a:	18 f0       	brcs	.+6      	; 0xe52 <__ultoa_invert+0x7c>
 e4c:	49 5d       	subi	r20, 0xD9	; 217
 e4e:	31 fd       	sbrc	r19, 1
 e50:	40 52       	subi	r20, 0x20	; 32
 e52:	41 93       	st	Z+, r20
 e54:	02 d0       	rcall	.+4      	; 0xe5a <__ultoa_invert+0x84>
 e56:	a9 f7       	brne	.-22     	; 0xe42 <__ultoa_invert+0x6c>
 e58:	ea cf       	rjmp	.-44     	; 0xe2e <__ultoa_invert+0x58>
 e5a:	b4 e0       	ldi	r27, 0x04	; 4
 e5c:	a6 95       	lsr	r26
 e5e:	97 95       	ror	r25
 e60:	87 95       	ror	r24
 e62:	77 95       	ror	r23
 e64:	67 95       	ror	r22
 e66:	ba 95       	dec	r27
 e68:	c9 f7       	brne	.-14     	; 0xe5c <__ultoa_invert+0x86>
 e6a:	00 97       	sbiw	r24, 0x00	; 0
 e6c:	61 05       	cpc	r22, r1
 e6e:	71 05       	cpc	r23, r1
 e70:	08 95       	ret
 e72:	9b 01       	movw	r18, r22
 e74:	ac 01       	movw	r20, r24
 e76:	0a 2e       	mov	r0, r26
 e78:	06 94       	lsr	r0
 e7a:	57 95       	ror	r21
 e7c:	47 95       	ror	r20
 e7e:	37 95       	ror	r19
 e80:	27 95       	ror	r18
 e82:	ba 95       	dec	r27
 e84:	c9 f7       	brne	.-14     	; 0xe78 <__ultoa_invert+0xa2>
 e86:	62 0f       	add	r22, r18
 e88:	73 1f       	adc	r23, r19
 e8a:	84 1f       	adc	r24, r20
 e8c:	95 1f       	adc	r25, r21
 e8e:	a0 1d       	adc	r26, r0
 e90:	08 95       	ret

00000e92 <__prologue_saves__>:
 e92:	2f 92       	push	r2
 e94:	3f 92       	push	r3
 e96:	4f 92       	push	r4
 e98:	5f 92       	push	r5
 e9a:	6f 92       	push	r6
 e9c:	7f 92       	push	r7
 e9e:	8f 92       	push	r8
 ea0:	9f 92       	push	r9
 ea2:	af 92       	push	r10
 ea4:	bf 92       	push	r11
 ea6:	cf 92       	push	r12
 ea8:	df 92       	push	r13
 eaa:	ef 92       	push	r14
 eac:	ff 92       	push	r15
 eae:	0f 93       	push	r16
 eb0:	1f 93       	push	r17
 eb2:	cf 93       	push	r28
 eb4:	df 93       	push	r29
 eb6:	cd b7       	in	r28, 0x3d	; 61
 eb8:	de b7       	in	r29, 0x3e	; 62
 eba:	ca 1b       	sub	r28, r26
 ebc:	db 0b       	sbc	r29, r27
 ebe:	0f b6       	in	r0, 0x3f	; 63
 ec0:	f8 94       	cli
 ec2:	de bf       	out	0x3e, r29	; 62
 ec4:	0f be       	out	0x3f, r0	; 63
 ec6:	cd bf       	out	0x3d, r28	; 61
 ec8:	09 94       	ijmp

00000eca <__epilogue_restores__>:
 eca:	2a 88       	ldd	r2, Y+18	; 0x12
 ecc:	39 88       	ldd	r3, Y+17	; 0x11
 ece:	48 88       	ldd	r4, Y+16	; 0x10
 ed0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ed2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ed4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ed6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ed8:	9b 84       	ldd	r9, Y+11	; 0x0b
 eda:	aa 84       	ldd	r10, Y+10	; 0x0a
 edc:	b9 84       	ldd	r11, Y+9	; 0x09
 ede:	c8 84       	ldd	r12, Y+8	; 0x08
 ee0:	df 80       	ldd	r13, Y+7	; 0x07
 ee2:	ee 80       	ldd	r14, Y+6	; 0x06
 ee4:	fd 80       	ldd	r15, Y+5	; 0x05
 ee6:	0c 81       	ldd	r16, Y+4	; 0x04
 ee8:	1b 81       	ldd	r17, Y+3	; 0x03
 eea:	aa 81       	ldd	r26, Y+2	; 0x02
 eec:	b9 81       	ldd	r27, Y+1	; 0x01
 eee:	ce 0f       	add	r28, r30
 ef0:	d1 1d       	adc	r29, r1
 ef2:	0f b6       	in	r0, 0x3f	; 63
 ef4:	f8 94       	cli
 ef6:	de bf       	out	0x3e, r29	; 62
 ef8:	0f be       	out	0x3f, r0	; 63
 efa:	cd bf       	out	0x3d, r28	; 61
 efc:	ed 01       	movw	r28, r26
 efe:	08 95       	ret

00000f00 <_exit>:
 f00:	f8 94       	cli

00000f02 <__stop_program>:
 f02:	ff cf       	rjmp	.-2      	; 0xf02 <__stop_program>
