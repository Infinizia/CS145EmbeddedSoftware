
Proj5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fe8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000062  00800060  00000fe8  0000107c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  008000c2  008000c2  000010de  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000113c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001178  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e12  00000000  00000000  000012d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b27  00000000  00000000  000030e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c9b  00000000  00000000  00003c09  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000444  00000000  00000000  000048a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cf  00000000  00000000  00004ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010e2  00000000  00000000  000051b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  00006299  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3c       	cpi	r26, 0xC2	; 194
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 ec       	ldi	r26, 0xC2	; 194
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 3d       	cpi	r26, 0xD5	; 213
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 97 02 	call	0x52e	; 0x52e <main>
  8a:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <wait_avr>:
  WDTCR = 15;
}

void
wait_avr(unsigned short msec)
{
  92:	9c 01       	movw	r18, r24
  //TCCR0 = 3;
  TCCR0 = 2;
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	83 bf       	out	0x33, r24	; 51
  while (msec--) {
    //TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.0001);
  98:	83 ef       	ldi	r24, 0xF3	; 243
void
wait_avr(unsigned short msec)
{
  //TCCR0 = 3;
  TCCR0 = 2;
  while (msec--) {
  9a:	08 c0       	rjmp	.+16     	; 0xac <wait_avr+0x1a>
    //TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.0001);
  9c:	82 bf       	out	0x32, r24	; 50
    SET_BIT(TIFR, TOV0);
  9e:	98 b7       	in	r25, 0x38	; 56
  a0:	91 60       	ori	r25, 0x01	; 1
  a2:	98 bf       	out	0x38, r25	; 56
    WDR();
  a4:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
  a6:	08 b6       	in	r0, 0x38	; 56
  a8:	00 fe       	sbrs	r0, 0
  aa:	fd cf       	rjmp	.-6      	; 0xa6 <wait_avr+0x14>
void
wait_avr(unsigned short msec)
{
  //TCCR0 = 3;
  TCCR0 = 2;
  while (msec--) {
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	31 09       	sbc	r19, r1
  b0:	a8 f7       	brcc	.-22     	; 0x9c <wait_avr+0xa>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.0001);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
  b2:	13 be       	out	0x33, r1	; 51
  b4:	08 95       	ret

000000b6 <wait_avr2>:
}
void
wait_avr2(unsigned short msec)
{
  b6:	9c 01       	movw	r18, r24
	TCCR0 = 3;
  b8:	83 e0       	ldi	r24, 0x03	; 3
  ba:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  bc:	83 e8       	ldi	r24, 0x83	; 131
}
void
wait_avr2(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  be:	08 c0       	rjmp	.+16     	; 0xd0 <wait_avr2+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  c0:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
  c2:	98 b7       	in	r25, 0x38	; 56
  c4:	91 60       	ori	r25, 0x01	; 1
  c6:	98 bf       	out	0x38, r25	; 56
		WDR();
  c8:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
  ca:	08 b6       	in	r0, 0x38	; 56
  cc:	00 fe       	sbrs	r0, 0
  ce:	fd cf       	rjmp	.-6      	; 0xca <wait_avr2+0x14>
}
void
wait_avr2(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	31 09       	sbc	r19, r1
  d4:	a8 f7       	brcc	.-22     	; 0xc0 <wait_avr2+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
  d6:	13 be       	out	0x33, r1	; 51
  d8:	08 95       	ret

000000da <is_pressed>:
			if (is_pressed(r,c))
			return r * 4 + c + 1;
		}
	}
	return 0;
}
  da:	14 ba       	out	0x14, r1	; 20
  dc:	15 ba       	out	0x15, r1	; 21
  de:	95 b3       	in	r25, 0x15	; 21
  e0:	6c 5f       	subi	r22, 0xFC	; 252
  e2:	7f 4f       	sbci	r23, 0xFF	; 255
  e4:	21 e0       	ldi	r18, 0x01	; 1
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	a9 01       	movw	r20, r18
  ea:	06 2e       	mov	r0, r22
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <is_pressed+0x18>
  ee:	44 0f       	add	r20, r20
  f0:	55 1f       	adc	r21, r21
  f2:	0a 94       	dec	r0
  f4:	e2 f7       	brpl	.-8      	; 0xee <is_pressed+0x14>
  f6:	49 2b       	or	r20, r25
  f8:	45 bb       	out	0x15, r20	; 21
  fa:	94 b3       	in	r25, 0x14	; 20
  fc:	02 c0       	rjmp	.+4      	; 0x102 <is_pressed+0x28>
  fe:	22 0f       	add	r18, r18
 100:	33 1f       	adc	r19, r19
 102:	8a 95       	dec	r24
 104:	e2 f7       	brpl	.-8      	; 0xfe <is_pressed+0x24>
 106:	92 2b       	or	r25, r18
 108:	94 bb       	out	0x14, r25	; 20
 10a:	85 b3       	in	r24, 0x15	; 21
 10c:	20 95       	com	r18
 10e:	28 23       	and	r18, r24
 110:	25 bb       	out	0x15, r18	; 21
 112:	23 b3       	in	r18, 0x13	; 19
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <is_pressed+0x42>
 118:	35 95       	asr	r19
 11a:	27 95       	ror	r18
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <is_pressed+0x3e>
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	20 ff       	sbrs	r18, 0
 126:	02 c0       	rjmp	.+4      	; 0x12c <is_pressed+0x52>
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	08 95       	ret

0000012e <get_key_value>:
unsigned int get_key_value()
{
 12e:	af 92       	push	r10
 130:	bf 92       	push	r11
 132:	cf 92       	push	r12
 134:	df 92       	push	r13
 136:	ef 92       	push	r14
 138:	ff 92       	push	r15
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	c0 e0       	ldi	r28, 0x00	; 0
 144:	d0 e0       	ldi	r29, 0x00	; 0
	unsigned char r;
	unsigned char c;
	// If A to D pressed
	for(r = 0; r < 4; ++r){
		if(is_pressed(r,3))
 146:	63 e0       	ldi	r22, 0x03	; 3
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	ce 01       	movw	r24, r28
 14c:	0e 94 6d 00 	call	0xda	; 0xda <is_pressed>
 150:	89 2b       	or	r24, r25
 152:	21 f0       	breq	.+8      	; 0x15c <get_key_value+0x2e>
		{
			return 65+r;
 154:	ce 01       	movw	r24, r28
 156:	8f 5b       	subi	r24, 0xBF	; 191
 158:	9f 4f       	sbci	r25, 0xFF	; 255
 15a:	4d c0       	rjmp	.+154    	; 0x1f6 <get_key_value+0xc8>
 15c:	21 96       	adiw	r28, 0x01	; 1
unsigned int get_key_value()
{
	unsigned char r;
	unsigned char c;
	// If A to D pressed
	for(r = 0; r < 4; ++r){
 15e:	c4 30       	cpi	r28, 0x04	; 4
 160:	d1 05       	cpc	r29, r1
 162:	89 f7       	brne	.-30     	; 0x146 <get_key_value+0x18>
 164:	a1 2c       	mov	r10, r1
 166:	b1 2c       	mov	r11, r1
 168:	1e c0       	rjmp	.+60     	; 0x1a6 <get_key_value+0x78>
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
			if(is_pressed(r,c)){
 16a:	0e 2d       	mov	r16, r14
 16c:	1f 2d       	mov	r17, r15
 16e:	be 01       	movw	r22, r28
 170:	8e 2d       	mov	r24, r14
 172:	9f 2d       	mov	r25, r15
 174:	0e 94 6d 00 	call	0xda	; 0xda <is_pressed>
 178:	89 2b       	or	r24, r25
 17a:	51 f0       	breq	.+20     	; 0x190 <get_key_value+0x62>
				return ((r*3)+c+1)+48;
 17c:	c8 01       	movw	r24, r16
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	08 0f       	add	r16, r24
 184:	19 1f       	adc	r17, r25
 186:	0c 0f       	add	r16, r28
 188:	1d 1f       	adc	r17, r29
 18a:	c8 01       	movw	r24, r16
 18c:	c1 96       	adiw	r24, 0x31	; 49
 18e:	33 c0       	rjmp	.+102    	; 0x1f6 <get_key_value+0xc8>
 190:	21 96       	adiw	r28, 0x01	; 1
		}
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
 192:	c3 30       	cpi	r28, 0x03	; 3
 194:	d1 05       	cpc	r29, r1
 196:	49 f7       	brne	.-46     	; 0x16a <get_key_value+0x3c>
 198:	8f ef       	ldi	r24, 0xFF	; 255
 19a:	a8 1a       	sub	r10, r24
 19c:	b8 0a       	sbc	r11, r24
			return 65+r;
		}
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
 19e:	83 e0       	ldi	r24, 0x03	; 3
 1a0:	a8 16       	cp	r10, r24
 1a2:	b1 04       	cpc	r11, r1
 1a4:	29 f0       	breq	.+10     	; 0x1b0 <get_key_value+0x82>
		}
	}
	return 0;
}
unsigned int get_key_value()
{
 1a6:	c0 e0       	ldi	r28, 0x00	; 0
 1a8:	d0 e0       	ldi	r29, 0x00	; 0
	}
	
	// 1 to 9 Pressed
	for(r = 0; r < 3; ++r){
		for(c = 0; c < 3; ++c){
			if(is_pressed(r,c)){
 1aa:	ea 2c       	mov	r14, r10
 1ac:	fb 2c       	mov	r15, r11
 1ae:	dd cf       	rjmp	.-70     	; 0x16a <get_key_value+0x3c>
				return ((r*3)+c+1)+48;
			}
		}
	}
	//If zero pressed
	if(is_pressed(3,1)){
 1b0:	61 e0       	ldi	r22, 0x01	; 1
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	83 e0       	ldi	r24, 0x03	; 3
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	0e 94 6d 00 	call	0xda	; 0xda <is_pressed>
 1bc:	89 2b       	or	r24, r25
 1be:	99 f4       	brne	.+38     	; 0x1e6 <get_key_value+0xb8>
		return '0';
	}
	// If * pressed
	else if(is_pressed(3,0)){
 1c0:	60 e0       	ldi	r22, 0x00	; 0
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	83 e0       	ldi	r24, 0x03	; 3
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	0e 94 6d 00 	call	0xda	; 0xda <is_pressed>
 1cc:	89 2b       	or	r24, r25
 1ce:	71 f4       	brne	.+28     	; 0x1ec <get_key_value+0xbe>
		return 42;
	}
	// If # pressed
	else if(is_pressed(3,2)){
 1d0:	62 e0       	ldi	r22, 0x02	; 2
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	83 e0       	ldi	r24, 0x03	; 3
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 6d 00 	call	0xda	; 0xda <is_pressed>
 1dc:	89 2b       	or	r24, r25
 1de:	49 f4       	brne	.+18     	; 0x1f2 <get_key_value+0xc4>
		return 35;
	}
	//otherwise just return some random char for not pressed
	return 'Z';
 1e0:	8a e5       	ldi	r24, 0x5A	; 90
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	08 c0       	rjmp	.+16     	; 0x1f6 <get_key_value+0xc8>
			}
		}
	}
	//If zero pressed
	if(is_pressed(3,1)){
		return '0';
 1e6:	80 e3       	ldi	r24, 0x30	; 48
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	05 c0       	rjmp	.+10     	; 0x1f6 <get_key_value+0xc8>
	}
	// If * pressed
	else if(is_pressed(3,0)){
		return 42;
 1ec:	8a e2       	ldi	r24, 0x2A	; 42
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <get_key_value+0xc8>
	}
	// If # pressed
	else if(is_pressed(3,2)){
		return 35;
 1f2:	83 e2       	ldi	r24, 0x23	; 35
 1f4:	90 e0       	ldi	r25, 0x00	; 0
	}
	//otherwise just return some random char for not pressed
	return 'Z';
}
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	1f 91       	pop	r17
 1fc:	0f 91       	pop	r16
 1fe:	ff 90       	pop	r15
 200:	ef 90       	pop	r14
 202:	df 90       	pop	r13
 204:	cf 90       	pop	r12
 206:	bf 90       	pop	r11
 208:	af 90       	pop	r10
 20a:	08 95       	ret

0000020c <output>:
{
  char c;
  while ((c = pgm_read_byte(s++)) != 0) {
    write(c, 1);
  }
}
 20c:	66 23       	and	r22, r22
 20e:	11 f0       	breq	.+4      	; 0x214 <output+0x8>
 210:	c0 9a       	sbi	0x18, 0	; 24
 212:	01 c0       	rjmp	.+2      	; 0x216 <output+0xa>
 214:	c0 98       	cbi	0x18, 0	; 24
 216:	c1 98       	cbi	0x18, 1	; 24
 218:	82 bb       	out	0x12, r24	; 18
 21a:	8f ef       	ldi	r24, 0xFF	; 255
 21c:	81 bb       	out	0x11, r24	; 17
 21e:	c2 9a       	sbi	0x18, 2	; 24
 220:	00 00       	nop
 222:	00 00       	nop
 224:	00 00       	nop
 226:	c2 98       	cbi	0x18, 2	; 24
 228:	08 95       	ret

0000022a <write>:
 22a:	c0 98       	cbi	0x18, 0	; 24
 22c:	c1 9a       	sbi	0x18, 1	; 24
 22e:	11 ba       	out	0x11, r1	; 17
 230:	90 b3       	in	r25, 0x10	; 16
 232:	c2 9a       	sbi	0x18, 2	; 24
 234:	00 00       	nop
 236:	00 00       	nop
 238:	00 00       	nop
 23a:	11 ba       	out	0x11, r1	; 17
 23c:	90 b3       	in	r25, 0x10	; 16
 23e:	c2 98       	cbi	0x18, 2	; 24
 240:	99 23       	and	r25, r25
 242:	9c f3       	brlt	.-26     	; 0x22a <write>
 244:	0e 94 06 01 	call	0x20c	; 0x20c <output>
 248:	08 95       	ret

0000024a <ini_lcd>:
 24a:	b8 9a       	sbi	0x17, 0	; 23
 24c:	b9 9a       	sbi	0x17, 1	; 23
 24e:	ba 9a       	sbi	0x17, 2	; 23
 250:	80 e1       	ldi	r24, 0x10	; 16
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	0e 94 49 00 	call	0x92	; 0x92 <wait_avr>
 258:	60 e0       	ldi	r22, 0x00	; 0
 25a:	80 e3       	ldi	r24, 0x30	; 48
 25c:	0e 94 06 01 	call	0x20c	; 0x20c <output>
 260:	85 e0       	ldi	r24, 0x05	; 5
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 49 00 	call	0x92	; 0x92 <wait_avr>
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	80 e3       	ldi	r24, 0x30	; 48
 26c:	0e 94 06 01 	call	0x20c	; 0x20c <output>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	0e 94 49 00 	call	0x92	; 0x92 <wait_avr>
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	8c e3       	ldi	r24, 0x3C	; 60
 27c:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	8c e0       	ldi	r24, 0x0C	; 12
 284:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	86 e0       	ldi	r24, 0x06	; 6
 28c:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	81 e0       	ldi	r24, 0x01	; 1
 294:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 298:	08 95       	ret

0000029a <clr_lcd>:
 29a:	60 e0       	ldi	r22, 0x00	; 0
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 2a2:	08 95       	ret

000002a4 <pos_lcd>:
 2a4:	cf 93       	push	r28
 2a6:	c6 2f       	mov	r28, r22
 2a8:	98 e2       	ldi	r25, 0x28	; 40
 2aa:	89 9f       	mul	r24, r25
 2ac:	c0 0d       	add	r28, r0
 2ae:	11 24       	eor	r1, r1
 2b0:	60 e0       	ldi	r22, 0x00	; 0
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 2b8:	cc 23       	and	r28, r28
 2ba:	31 f0       	breq	.+12     	; 0x2c8 <pos_lcd+0x24>
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	84 e1       	ldi	r24, 0x14	; 20
 2c0:	0e 94 15 01 	call	0x22a	; 0x22a <write>
 2c4:	c1 50       	subi	r28, 0x01	; 1
 2c6:	d1 f7       	brne	.-12     	; 0x2bc <pos_lcd+0x18>
 2c8:	cf 91       	pop	r28
 2ca:	08 95       	ret

000002cc <puts_lcd2>:

void
puts_lcd2(const char *s)
{
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
  char c;
  while ((c = *(s++)) != 0) {
 2d0:	ec 01       	movw	r28, r24
 2d2:	21 96       	adiw	r28, 0x01	; 1
 2d4:	fc 01       	movw	r30, r24
 2d6:	80 81       	ld	r24, Z
 2d8:	88 23       	and	r24, r24
 2da:	31 f0       	breq	.+12     	; 0x2e8 <puts_lcd2+0x1c>
    write(c, 1);
 2dc:	61 e0       	ldi	r22, 0x01	; 1
 2de:	0e 94 15 01 	call	0x22a	; 0x22a <write>

void
puts_lcd2(const char *s)
{
  char c;
  while ((c = *(s++)) != 0) {
 2e2:	89 91       	ld	r24, Y+
 2e4:	81 11       	cpse	r24, r1
 2e6:	fa cf       	rjmp	.-12     	; 0x2dc <puts_lcd2+0x10>
    write(c, 1);
  }
}
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <test_key>:
		test_key(8);
	}
	return key;
}
void test_key(int key)
{
 2ee:	0f 93       	push	r16
 2f0:	1f 93       	push	r17
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	cd b7       	in	r28, 0x3d	; 61
 2f8:	de b7       	in	r29, 0x3e	; 62
 2fa:	61 97       	sbiw	r28, 0x11	; 17
 2fc:	0f b6       	in	r0, 0x3f	; 63
 2fe:	f8 94       	cli
 300:	de bf       	out	0x3e, r29	; 62
 302:	0f be       	out	0x3f, r0	; 63
 304:	cd bf       	out	0x3d, r28	; 61
	char buf2[17];
	sprintf(buf2, "%i",  key);
 306:	9f 93       	push	r25
 308:	8f 93       	push	r24
 30a:	86 ea       	ldi	r24, 0xA6	; 166
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	9f 93       	push	r25
 310:	8f 93       	push	r24
 312:	8e 01       	movw	r16, r28
 314:	0f 5f       	subi	r16, 0xFF	; 255
 316:	1f 4f       	sbci	r17, 0xFF	; 255
 318:	1f 93       	push	r17
 31a:	0f 93       	push	r16
 31c:	0e 94 08 05 	call	0xa10	; 0xa10 <sprintf>
	pos_lcd(1, 0);
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	0e 94 52 01 	call	0x2a4	; 0x2a4 <pos_lcd>
	puts_lcd2(buf2);
 328:	c8 01       	movw	r24, r16
 32a:	0e 94 66 01 	call	0x2cc	; 0x2cc <puts_lcd2>
	wait_avr2(50);
 32e:	82 e3       	ldi	r24, 0x32	; 50
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	0e 94 5b 00 	call	0xb6	; 0xb6 <wait_avr2>
	//clr_lcd();
}
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	0f 90       	pop	r0
 33c:	0f 90       	pop	r0
 33e:	0f 90       	pop	r0
 340:	0f 90       	pop	r0
 342:	61 96       	adiw	r28, 0x11	; 17
 344:	0f b6       	in	r0, 0x3f	; 63
 346:	f8 94       	cli
 348:	de bf       	out	0x3e, r29	; 62
 34a:	0f be       	out	0x3f, r0	; 63
 34c:	cd bf       	out	0x3d, r28	; 61
 34e:	df 91       	pop	r29
 350:	cf 91       	pop	r28
 352:	1f 91       	pop	r17
 354:	0f 91       	pop	r16
 356:	08 95       	ret

00000358 <piano>:
	pos_lcd(1, 0);
	puts_lcd2(buf);
}
/*****************************************/
int piano()
{
 358:	cf 93       	push	r28
 35a:	df 93       	push	r29
	int key = get_key_value();
 35c:	0e 94 97 00 	call	0x12e	; 0x12e <get_key_value>
 360:	ec 01       	movw	r28, r24
	if (key == '1') // CDEFGABC
 362:	81 33       	cpi	r24, 0x31	; 49
 364:	91 05       	cpc	r25, r1
 366:	59 f4       	brne	.+22     	; 0x37e <piano+0x26>
	{
		play_note(C4, 1);
 368:	61 e0       	ldi	r22, 0x01	; 1
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	86 e0       	ldi	r24, 0x06	; 6
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(1);
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 37c:	1b c0       	rjmp	.+54     	; 0x3b4 <piano+0x5c>
	}
	if (key == '2')
 37e:	82 33       	cpi	r24, 0x32	; 50
 380:	91 05       	cpc	r25, r1
 382:	59 f4       	brne	.+22     	; 0x39a <piano+0x42>
	{
		play_note(D4, 1);
 384:	61 e0       	ldi	r22, 0x01	; 1
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	86 e2       	ldi	r24, 0x26	; 38
 38a:	91 e0       	ldi	r25, 0x01	; 1
 38c:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(2);
 390:	82 e0       	ldi	r24, 0x02	; 2
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 398:	1b c0       	rjmp	.+54     	; 0x3d0 <piano+0x78>
	}
	if (key == '3')
 39a:	c3 97       	sbiw	r24, 0x33	; 51
 39c:	59 f4       	brne	.+22     	; 0x3b4 <piano+0x5c>
	{
		play_note(E4, 1);
 39e:	61 e0       	ldi	r22, 0x01	; 1
 3a0:	70 e0       	ldi	r23, 0x00	; 0
 3a2:	8a e4       	ldi	r24, 0x4A	; 74
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(3);
 3aa:	83 e0       	ldi	r24, 0x03	; 3
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 3b2:	1c c0       	rjmp	.+56     	; 0x3ec <piano+0x94>
	}
	if (key == '4')
 3b4:	c4 33       	cpi	r28, 0x34	; 52
 3b6:	d1 05       	cpc	r29, r1
 3b8:	59 f4       	brne	.+22     	; 0x3d0 <piano+0x78>
	{
		play_note(F4, 1);
 3ba:	61 e0       	ldi	r22, 0x01	; 1
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	8d e5       	ldi	r24, 0x5D	; 93
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(4);
 3c6:	84 e0       	ldi	r24, 0x04	; 4
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 3ce:	1c c0       	rjmp	.+56     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	}
	if (key == '5')
 3d0:	c5 33       	cpi	r28, 0x35	; 53
 3d2:	d1 05       	cpc	r29, r1
 3d4:	59 f4       	brne	.+22     	; 0x3ec <piano+0x94>
	{
		play_note(G4, 1);
 3d6:	61 e0       	ldi	r22, 0x01	; 1
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	88 e8       	ldi	r24, 0x88	; 136
 3dc:	91 e0       	ldi	r25, 0x01	; 1
 3de:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(5);
 3e2:	85 e0       	ldi	r24, 0x05	; 5
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 3ea:	1c c0       	rjmp	.+56     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
	}
	if (key == '6')
 3ec:	c6 33       	cpi	r28, 0x36	; 54
 3ee:	d1 05       	cpc	r29, r1
 3f0:	59 f4       	brne	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	{
		play_note(A4, 1);
 3f2:	61 e0       	ldi	r22, 0x01	; 1
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	88 eb       	ldi	r24, 0xB8	; 184
 3f8:	91 e0       	ldi	r25, 0x01	; 1
 3fa:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(6);
 3fe:	86 e0       	ldi	r24, 0x06	; 6
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 406:	1b c0       	rjmp	.+54     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	}
	if (key == '7')
 408:	c7 33       	cpi	r28, 0x37	; 55
 40a:	d1 05       	cpc	r29, r1
 40c:	59 f4       	brne	.+22     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
	{
		play_note(B4, 1);
 40e:	61 e0       	ldi	r22, 0x01	; 1
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	8e ee       	ldi	r24, 0xEE	; 238
 414:	91 e0       	ldi	r25, 0x01	; 1
 416:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(7);
 41a:	87 e0       	ldi	r24, 0x07	; 7
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
 422:	0d c0       	rjmp	.+26     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	}
	if (key == '8')
 424:	c8 33       	cpi	r28, 0x38	; 56
 426:	d1 05       	cpc	r29, r1
 428:	51 f4       	brne	.+20     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	{
		play_note(C5, 1);
 42a:	61 e0       	ldi	r22, 0x01	; 1
 42c:	70 e0       	ldi	r23, 0x00	; 0
 42e:	8b e0       	ldi	r24, 0x0B	; 11
 430:	92 e0       	ldi	r25, 0x02	; 2
 432:	0e 94 cc 02 	call	0x598	; 0x598 <play_note>
		test_key(8);
 436:	88 e0       	ldi	r24, 0x08	; 8
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 77 01 	call	0x2ee	; 0x2ee <test_key>
	}
	return key;
}
 43e:	ce 01       	movw	r24, r28
 440:	df 91       	pop	r29
 442:	cf 91       	pop	r28
 444:	08 95       	ret

00000446 <compare_game_key>:
	puts_lcd2(buf2);
	wait_avr2(50);
	//clr_lcd();
}
bool compare_game_key(char gameSong[], int size)
{
 446:	0f 93       	push	r16
 448:	1f 93       	push	r17
 44a:	cf 93       	push	r28
 44c:	df 93       	push	r29
 44e:	8c 01       	movw	r16, r24
 450:	eb 01       	movw	r28, r22
	wait_avr2(10);
 452:	8a e0       	ldi	r24, 0x0A	; 10
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	0e 94 5b 00 	call	0xb6	; 0xb6 <wait_avr2>
	int key = piano();
 45a:	0e 94 ac 01 	call	0x358	; 0x358 <piano>
	if (num < size)
 45e:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <__data_end>
 462:	30 91 c3 00 	lds	r19, 0x00C3	; 0x8000c3 <__data_end+0x1>
 466:	2c 17       	cp	r18, r28
 468:	3d 07       	cpc	r19, r29
 46a:	0c f0       	brlt	.+2      	; 0x46e <compare_game_key+0x28>
 46c:	52 c0       	rjmp	.+164    	; 0x512 <compare_game_key+0xcc>
	{	
		//int key = piano();
		if( key == gameSong[num])
 46e:	f8 01       	movw	r30, r16
 470:	e2 0f       	add	r30, r18
 472:	f3 1f       	adc	r31, r19
 474:	40 81       	ld	r20, Z
 476:	50 e0       	ldi	r21, 0x00	; 0
 478:	84 17       	cp	r24, r20
 47a:	95 07       	cpc	r25, r21
 47c:	f9 f4       	brne	.+62     	; 0x4bc <compare_game_key+0x76>
		{
			num++;
 47e:	2f 5f       	subi	r18, 0xFF	; 255
 480:	3f 4f       	sbci	r19, 0xFF	; 255
 482:	30 93 c3 00 	sts	0x00C3, r19	; 0x8000c3 <__data_end+0x1>
 486:	20 93 c2 00 	sts	0x00C2, r18	; 0x8000c2 <__data_end>
			SET_BIT(PORTA,2);
 48a:	da 9a       	sbi	0x1b, 2	; 27
				sprintf(buf, "CORRECT!");
 48c:	89 e0       	ldi	r24, 0x09	; 9
 48e:	e9 ea       	ldi	r30, 0xA9	; 169
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	a4 ec       	ldi	r26, 0xC4	; 196
 494:	b0 e0       	ldi	r27, 0x00	; 0
 496:	01 90       	ld	r0, Z+
 498:	0d 92       	st	X+, r0
 49a:	8a 95       	dec	r24
 49c:	e1 f7       	brne	.-8      	; 0x496 <compare_game_key+0x50>
				pos_lcd(1, 0);
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <pos_lcd>
				puts_lcd2(buf);
 4a6:	84 ec       	ldi	r24, 0xC4	; 196
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	0e 94 66 01 	call	0x2cc	; 0x2cc <puts_lcd2>
			wait_avr2(50);
 4ae:	82 e3       	ldi	r24, 0x32	; 50
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	0e 94 5b 00 	call	0xb6	; 0xb6 <wait_avr2>
			clr_lcd();
 4b6:	0e 94 4d 01 	call	0x29a	; 0x29a <clr_lcd>
 4ba:	08 c0       	rjmp	.+16     	; 0x4cc <compare_game_key+0x86>

		}
		else if (key != 'Z')
 4bc:	8a 35       	cpi	r24, 0x5A	; 90
 4be:	91 05       	cpc	r25, r1
 4c0:	29 f0       	breq	.+10     	; 0x4cc <compare_game_key+0x86>
		{
			SET_BIT(PORTA,1);
 4c2:	d9 9a       	sbi	0x1b, 1	; 27
			wait_avr2(50);
 4c4:	82 e3       	ldi	r24, 0x32	; 50
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 5b 00 	call	0xb6	; 0xb6 <wait_avr2>
		}

		CLR_BIT(PORTA,1);
 4cc:	d9 98       	cbi	0x1b, 1	; 27
		CLR_BIT(PORTA,2);
 4ce:	da 98       	cbi	0x1b, 2	; 27

		sprintf(buf, "Press: %c", gameSong[num]);
 4d0:	e0 91 c2 00 	lds	r30, 0x00C2	; 0x8000c2 <__data_end>
 4d4:	f0 91 c3 00 	lds	r31, 0x00C3	; 0x8000c3 <__data_end+0x1>
 4d8:	e0 0f       	add	r30, r16
 4da:	f1 1f       	adc	r31, r17
 4dc:	80 81       	ld	r24, Z
 4de:	1f 92       	push	r1
 4e0:	8f 93       	push	r24
 4e2:	82 eb       	ldi	r24, 0xB2	; 178
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	9f 93       	push	r25
 4e8:	8f 93       	push	r24
 4ea:	84 ec       	ldi	r24, 0xC4	; 196
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	9f 93       	push	r25
 4f0:	8f 93       	push	r24
 4f2:	0e 94 08 05 	call	0xa10	; 0xa10 <sprintf>
		pos_lcd(0, 0);
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	0e 94 52 01 	call	0x2a4	; 0x2a4 <pos_lcd>
		puts_lcd2(buf);
 4fe:	84 ec       	ldi	r24, 0xC4	; 196
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 66 01 	call	0x2cc	; 0x2cc <puts_lcd2>
 506:	0f 90       	pop	r0
 508:	0f 90       	pop	r0
 50a:	0f 90       	pop	r0
 50c:	0f 90       	pop	r0
 50e:	0f 90       	pop	r0
 510:	0f 90       	pop	r0
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	20 91 c2 00 	lds	r18, 0x00C2	; 0x8000c2 <__data_end>
 518:	30 91 c3 00 	lds	r19, 0x00C3	; 0x8000c3 <__data_end+0x1>
 51c:	2c 17       	cp	r18, r28
 51e:	3d 07       	cpc	r19, r29
 520:	09 f0       	breq	.+2      	; 0x524 <compare_game_key+0xde>
 522:	80 e0       	ldi	r24, 0x00	; 0
		return true;
		

	return false;
	
}
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	08 95       	ret

0000052e <main>:

int main(void)
{
 52e:	cf 93       	push	r28
 530:	df 93       	push	r29
 532:	00 d0       	rcall	.+0      	; 0x534 <main+0x6>
 534:	00 d0       	rcall	.+0      	; 0x536 <main+0x8>
 536:	1f 92       	push	r1
 538:	cd b7       	in	r28, 0x3d	; 61
 53a:	de b7       	in	r29, 0x3e	; 62
	ini_lcd();
 53c:	0e 94 25 01 	call	0x24a	; 0x24a <ini_lcd>
	init_speaker();
 540:	0e 94 c9 02 	call	0x592	; 0x592 <init_speaker>

	SET_BIT(DDRA,1); // RED
 544:	d1 9a       	sbi	0x1a, 1	; 26
	SET_BIT(DDRA,2); // GREEN
 546:	d2 9a       	sbi	0x1a, 2	; 26
	//CLR_BIT(PORTA,2);			
	//SET_BIT(PORTA,2);			

	//happyBirthday(NORMAL);

	char testSong[5] = {
 548:	85 e0       	ldi	r24, 0x05	; 5
 54a:	e0 e6       	ldi	r30, 0x60	; 96
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	de 01       	movw	r26, r28
 550:	11 96       	adiw	r26, 0x01	; 1
 552:	01 90       	ld	r0, Z+
 554:	0d 92       	st	X+, r0
 556:	8a 95       	dec	r24
 558:	e1 f7       	brne	.-8      	; 0x552 <main+0x24>
	int index = 0;
	bool isDone = false;

	while (1)
	{
		isDone = compare_game_key(testSong, 5);
 55a:	65 e0       	ldi	r22, 0x05	; 5
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	ce 01       	movw	r24, r28
 560:	01 96       	adiw	r24, 0x01	; 1
 562:	0e 94 23 02 	call	0x446	; 0x446 <compare_game_key>
		if (isDone)
 566:	88 23       	and	r24, r24
 568:	c1 f3       	breq	.-16     	; 0x55a <main+0x2c>
		{	
			clr_lcd();
 56a:	0e 94 4d 01 	call	0x29a	; 0x29a <clr_lcd>
			sprintf(buf, "Done");
 56e:	85 e0       	ldi	r24, 0x05	; 5
 570:	ec eb       	ldi	r30, 0xBC	; 188
 572:	f0 e0       	ldi	r31, 0x00	; 0
 574:	a4 ec       	ldi	r26, 0xC4	; 196
 576:	b0 e0       	ldi	r27, 0x00	; 0
 578:	01 90       	ld	r0, Z+
 57a:	0d 92       	st	X+, r0
 57c:	8a 95       	dec	r24
 57e:	e1 f7       	brne	.-8      	; 0x578 <main+0x4a>
			pos_lcd(0, 0);
 580:	60 e0       	ldi	r22, 0x00	; 0
 582:	80 e0       	ldi	r24, 0x00	; 0
 584:	0e 94 52 01 	call	0x2a4	; 0x2a4 <pos_lcd>
			puts_lcd2(buf);
 588:	84 ec       	ldi	r24, 0xC4	; 196
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 66 01 	call	0x2cc	; 0x2cc <puts_lcd2>
 590:	e4 cf       	rjmp	.-56     	; 0x55a <main+0x2c>

00000592 <init_speaker>:
 #include "avr.h"


 void init_speaker()
 {
	 SET_BIT(DDRA,0);
 592:	d0 9a       	sbi	0x1a, 0	; 26
	 SET_BIT(PORTA,0);
 594:	d8 9a       	sbi	0x1b, 0	; 27
 596:	08 95       	ret

00000598 <play_note>:
 }

void play_note(int freq, int dur)
{
 598:	4f 92       	push	r4
 59a:	5f 92       	push	r5
 59c:	6f 92       	push	r6
 59e:	7f 92       	push	r7
 5a0:	8f 92       	push	r8
 5a2:	9f 92       	push	r9
 5a4:	af 92       	push	r10
 5a6:	bf 92       	push	r11
 5a8:	cf 92       	push	r12
 5aa:	df 92       	push	r13
 5ac:	ef 92       	push	r14
 5ae:	ff 92       	push	r15
 5b0:	cf 93       	push	r28
 5b2:	df 93       	push	r29
 5b4:	ec 01       	movw	r28, r24
 5b6:	7b 01       	movw	r14, r22
	double period = (1.0 / freq) * 10000; // 440HZ = 2.27 ms in 1 sec
	double t = period/2;
 5b8:	bc 01       	movw	r22, r24
 5ba:	99 0f       	add	r25, r25
 5bc:	88 0b       	sbc	r24, r24
 5be:	99 0b       	sbc	r25, r25
 5c0:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__floatsisf>
 5c4:	9b 01       	movw	r18, r22
 5c6:	ac 01       	movw	r20, r24
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	80 e8       	ldi	r24, 0x80	; 128
 5ce:	9f e3       	ldi	r25, 0x3F	; 63
 5d0:	0e 94 43 03 	call	0x686	; 0x686 <__divsf3>
 5d4:	20 e0       	ldi	r18, 0x00	; 0
 5d6:	30 e4       	ldi	r19, 0x40	; 64
 5d8:	4c e1       	ldi	r20, 0x1C	; 28
 5da:	56 e4       	ldi	r21, 0x46	; 70
 5dc:	0e 94 9b 04 	call	0x936	; 0x936 <__mulsf3>
 5e0:	20 e0       	ldi	r18, 0x00	; 0
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	40 e0       	ldi	r20, 0x00	; 0
 5e6:	5f e3       	ldi	r21, 0x3F	; 63
 5e8:	0e 94 9b 04 	call	0x936	; 0x936 <__mulsf3>
 5ec:	2b 01       	movw	r4, r22
 5ee:	3c 01       	movw	r6, r24
	double k = freq * dur * NORMAL;
 5f0:	ce 9d       	mul	r28, r14
 5f2:	b0 01       	movw	r22, r0
 5f4:	cf 9d       	mul	r28, r15
 5f6:	70 0d       	add	r23, r0
 5f8:	de 9d       	mul	r29, r14
 5fa:	70 0d       	add	r23, r0
 5fc:	11 24       	eor	r1, r1
 5fe:	07 2e       	mov	r0, r23
 600:	00 0c       	add	r0, r0
 602:	88 0b       	sbc	r24, r24
 604:	99 0b       	sbc	r25, r25
 606:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__floatsisf>
 60a:	20 e0       	ldi	r18, 0x00	; 0
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	40 e0       	ldi	r20, 0x00	; 0
 610:	5f e3       	ldi	r21, 0x3F	; 63
 612:	0e 94 9b 04 	call	0x936	; 0x936 <__mulsf3>
 616:	4b 01       	movw	r8, r22
 618:	5c 01       	movw	r10, r24
	for (int i = 0; i < k; ++i)
 61a:	20 e0       	ldi	r18, 0x00	; 0
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	a9 01       	movw	r20, r18
 620:	0e 94 96 04 	call	0x92c	; 0x92c <__gesf2>
 624:	18 16       	cp	r1, r24
 626:	04 f5       	brge	.+64     	; 0x668 <play_note+0xd0>
 628:	c0 e0       	ldi	r28, 0x00	; 0
 62a:	d0 e0       	ldi	r29, 0x00	; 0
	{
		SET_BIT(PORTA, 0);
 62c:	d8 9a       	sbi	0x1b, 0	; 27
		wait_avr(t);
 62e:	c3 01       	movw	r24, r6
 630:	b2 01       	movw	r22, r4
 632:	0e 94 b5 03 	call	0x76a	; 0x76a <__fixunssfsi>
 636:	6b 01       	movw	r12, r22
 638:	7c 01       	movw	r14, r24
 63a:	cb 01       	movw	r24, r22
 63c:	0e 94 49 00 	call	0x92	; 0x92 <wait_avr>
		CLR_BIT(PORTA, 0);
 640:	d8 98       	cbi	0x1b, 0	; 27
		wait_avr(t);
 642:	c6 01       	movw	r24, r12
 644:	0e 94 49 00 	call	0x92	; 0x92 <wait_avr>
void play_note(int freq, int dur)
{
	double period = (1.0 / freq) * 10000; // 440HZ = 2.27 ms in 1 sec
	double t = period/2;
	double k = freq * dur * NORMAL;
	for (int i = 0; i < k; ++i)
 648:	21 96       	adiw	r28, 0x01	; 1
 64a:	be 01       	movw	r22, r28
 64c:	0d 2e       	mov	r0, r29
 64e:	00 0c       	add	r0, r0
 650:	88 0b       	sbc	r24, r24
 652:	99 0b       	sbc	r25, r25
 654:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__floatsisf>
 658:	9b 01       	movw	r18, r22
 65a:	ac 01       	movw	r20, r24
 65c:	c5 01       	movw	r24, r10
 65e:	b4 01       	movw	r22, r8
 660:	0e 94 96 04 	call	0x92c	; 0x92c <__gesf2>
 664:	18 16       	cp	r1, r24
 666:	14 f3       	brlt	.-60     	; 0x62c <play_note+0x94>
		SET_BIT(PORTA, 0);
		wait_avr(t);
		CLR_BIT(PORTA, 0);
		wait_avr(t);
	}
}
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	ff 90       	pop	r15
 66e:	ef 90       	pop	r14
 670:	df 90       	pop	r13
 672:	cf 90       	pop	r12
 674:	bf 90       	pop	r11
 676:	af 90       	pop	r10
 678:	9f 90       	pop	r9
 67a:	8f 90       	pop	r8
 67c:	7f 90       	pop	r7
 67e:	6f 90       	pop	r6
 680:	5f 90       	pop	r5
 682:	4f 90       	pop	r4
 684:	08 95       	ret

00000686 <__divsf3>:
 686:	0e 94 57 03 	call	0x6ae	; 0x6ae <__divsf3x>
 68a:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__fp_round>
 68e:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fp_pscB>
 692:	58 f0       	brcs	.+22     	; 0x6aa <__divsf3+0x24>
 694:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_pscA>
 698:	40 f0       	brcs	.+16     	; 0x6aa <__divsf3+0x24>
 69a:	29 f4       	brne	.+10     	; 0x6a6 <__divsf3+0x20>
 69c:	5f 3f       	cpi	r21, 0xFF	; 255
 69e:	29 f0       	breq	.+10     	; 0x6aa <__divsf3+0x24>
 6a0:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_inf>
 6a4:	51 11       	cpse	r21, r1
 6a6:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_szero>
 6aa:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_nan>

000006ae <__divsf3x>:
 6ae:	0e 94 6d 04 	call	0x8da	; 0x8da <__fp_split3>
 6b2:	68 f3       	brcs	.-38     	; 0x68e <__divsf3+0x8>

000006b4 <__divsf3_pse>:
 6b4:	99 23       	and	r25, r25
 6b6:	b1 f3       	breq	.-20     	; 0x6a4 <__divsf3+0x1e>
 6b8:	55 23       	and	r21, r21
 6ba:	91 f3       	breq	.-28     	; 0x6a0 <__divsf3+0x1a>
 6bc:	95 1b       	sub	r25, r21
 6be:	55 0b       	sbc	r21, r21
 6c0:	bb 27       	eor	r27, r27
 6c2:	aa 27       	eor	r26, r26
 6c4:	62 17       	cp	r22, r18
 6c6:	73 07       	cpc	r23, r19
 6c8:	84 07       	cpc	r24, r20
 6ca:	38 f0       	brcs	.+14     	; 0x6da <__divsf3_pse+0x26>
 6cc:	9f 5f       	subi	r25, 0xFF	; 255
 6ce:	5f 4f       	sbci	r21, 0xFF	; 255
 6d0:	22 0f       	add	r18, r18
 6d2:	33 1f       	adc	r19, r19
 6d4:	44 1f       	adc	r20, r20
 6d6:	aa 1f       	adc	r26, r26
 6d8:	a9 f3       	breq	.-22     	; 0x6c4 <__divsf3_pse+0x10>
 6da:	35 d0       	rcall	.+106    	; 0x746 <__divsf3_pse+0x92>
 6dc:	0e 2e       	mov	r0, r30
 6de:	3a f0       	brmi	.+14     	; 0x6ee <__divsf3_pse+0x3a>
 6e0:	e0 e8       	ldi	r30, 0x80	; 128
 6e2:	32 d0       	rcall	.+100    	; 0x748 <__divsf3_pse+0x94>
 6e4:	91 50       	subi	r25, 0x01	; 1
 6e6:	50 40       	sbci	r21, 0x00	; 0
 6e8:	e6 95       	lsr	r30
 6ea:	00 1c       	adc	r0, r0
 6ec:	ca f7       	brpl	.-14     	; 0x6e0 <__divsf3_pse+0x2c>
 6ee:	2b d0       	rcall	.+86     	; 0x746 <__divsf3_pse+0x92>
 6f0:	fe 2f       	mov	r31, r30
 6f2:	29 d0       	rcall	.+82     	; 0x746 <__divsf3_pse+0x92>
 6f4:	66 0f       	add	r22, r22
 6f6:	77 1f       	adc	r23, r23
 6f8:	88 1f       	adc	r24, r24
 6fa:	bb 1f       	adc	r27, r27
 6fc:	26 17       	cp	r18, r22
 6fe:	37 07       	cpc	r19, r23
 700:	48 07       	cpc	r20, r24
 702:	ab 07       	cpc	r26, r27
 704:	b0 e8       	ldi	r27, 0x80	; 128
 706:	09 f0       	breq	.+2      	; 0x70a <__divsf3_pse+0x56>
 708:	bb 0b       	sbc	r27, r27
 70a:	80 2d       	mov	r24, r0
 70c:	bf 01       	movw	r22, r30
 70e:	ff 27       	eor	r31, r31
 710:	93 58       	subi	r25, 0x83	; 131
 712:	5f 4f       	sbci	r21, 0xFF	; 255
 714:	3a f0       	brmi	.+14     	; 0x724 <__divsf3_pse+0x70>
 716:	9e 3f       	cpi	r25, 0xFE	; 254
 718:	51 05       	cpc	r21, r1
 71a:	78 f0       	brcs	.+30     	; 0x73a <__divsf3_pse+0x86>
 71c:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_inf>
 720:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_szero>
 724:	5f 3f       	cpi	r21, 0xFF	; 255
 726:	e4 f3       	brlt	.-8      	; 0x720 <__divsf3_pse+0x6c>
 728:	98 3e       	cpi	r25, 0xE8	; 232
 72a:	d4 f3       	brlt	.-12     	; 0x720 <__divsf3_pse+0x6c>
 72c:	86 95       	lsr	r24
 72e:	77 95       	ror	r23
 730:	67 95       	ror	r22
 732:	b7 95       	ror	r27
 734:	f7 95       	ror	r31
 736:	9f 5f       	subi	r25, 0xFF	; 255
 738:	c9 f7       	brne	.-14     	; 0x72c <__divsf3_pse+0x78>
 73a:	88 0f       	add	r24, r24
 73c:	91 1d       	adc	r25, r1
 73e:	96 95       	lsr	r25
 740:	87 95       	ror	r24
 742:	97 f9       	bld	r25, 7
 744:	08 95       	ret
 746:	e1 e0       	ldi	r30, 0x01	; 1
 748:	66 0f       	add	r22, r22
 74a:	77 1f       	adc	r23, r23
 74c:	88 1f       	adc	r24, r24
 74e:	bb 1f       	adc	r27, r27
 750:	62 17       	cp	r22, r18
 752:	73 07       	cpc	r23, r19
 754:	84 07       	cpc	r24, r20
 756:	ba 07       	cpc	r27, r26
 758:	20 f0       	brcs	.+8      	; 0x762 <__divsf3_pse+0xae>
 75a:	62 1b       	sub	r22, r18
 75c:	73 0b       	sbc	r23, r19
 75e:	84 0b       	sbc	r24, r20
 760:	ba 0b       	sbc	r27, r26
 762:	ee 1f       	adc	r30, r30
 764:	88 f7       	brcc	.-30     	; 0x748 <__divsf3_pse+0x94>
 766:	e0 95       	com	r30
 768:	08 95       	ret

0000076a <__fixunssfsi>:
 76a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fp_splitA>
 76e:	88 f0       	brcs	.+34     	; 0x792 <__fixunssfsi+0x28>
 770:	9f 57       	subi	r25, 0x7F	; 127
 772:	98 f0       	brcs	.+38     	; 0x79a <__fixunssfsi+0x30>
 774:	b9 2f       	mov	r27, r25
 776:	99 27       	eor	r25, r25
 778:	b7 51       	subi	r27, 0x17	; 23
 77a:	b0 f0       	brcs	.+44     	; 0x7a8 <__fixunssfsi+0x3e>
 77c:	e1 f0       	breq	.+56     	; 0x7b6 <__fixunssfsi+0x4c>
 77e:	66 0f       	add	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	99 1f       	adc	r25, r25
 786:	1a f0       	brmi	.+6      	; 0x78e <__fixunssfsi+0x24>
 788:	ba 95       	dec	r27
 78a:	c9 f7       	brne	.-14     	; 0x77e <__fixunssfsi+0x14>
 78c:	14 c0       	rjmp	.+40     	; 0x7b6 <__fixunssfsi+0x4c>
 78e:	b1 30       	cpi	r27, 0x01	; 1
 790:	91 f0       	breq	.+36     	; 0x7b6 <__fixunssfsi+0x4c>
 792:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_zero>
 796:	b1 e0       	ldi	r27, 0x01	; 1
 798:	08 95       	ret
 79a:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__fp_zero>
 79e:	67 2f       	mov	r22, r23
 7a0:	78 2f       	mov	r23, r24
 7a2:	88 27       	eor	r24, r24
 7a4:	b8 5f       	subi	r27, 0xF8	; 248
 7a6:	39 f0       	breq	.+14     	; 0x7b6 <__fixunssfsi+0x4c>
 7a8:	b9 3f       	cpi	r27, 0xF9	; 249
 7aa:	cc f3       	brlt	.-14     	; 0x79e <__fixunssfsi+0x34>
 7ac:	86 95       	lsr	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	b3 95       	inc	r27
 7b4:	d9 f7       	brne	.-10     	; 0x7ac <__fixunssfsi+0x42>
 7b6:	3e f4       	brtc	.+14     	; 0x7c6 <__fixunssfsi+0x5c>
 7b8:	90 95       	com	r25
 7ba:	80 95       	com	r24
 7bc:	70 95       	com	r23
 7be:	61 95       	neg	r22
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	8f 4f       	sbci	r24, 0xFF	; 255
 7c4:	9f 4f       	sbci	r25, 0xFF	; 255
 7c6:	08 95       	ret

000007c8 <__floatunsisf>:
 7c8:	e8 94       	clt
 7ca:	09 c0       	rjmp	.+18     	; 0x7de <__floatsisf+0x12>

000007cc <__floatsisf>:
 7cc:	97 fb       	bst	r25, 7
 7ce:	3e f4       	brtc	.+14     	; 0x7de <__floatsisf+0x12>
 7d0:	90 95       	com	r25
 7d2:	80 95       	com	r24
 7d4:	70 95       	com	r23
 7d6:	61 95       	neg	r22
 7d8:	7f 4f       	sbci	r23, 0xFF	; 255
 7da:	8f 4f       	sbci	r24, 0xFF	; 255
 7dc:	9f 4f       	sbci	r25, 0xFF	; 255
 7de:	99 23       	and	r25, r25
 7e0:	a9 f0       	breq	.+42     	; 0x80c <__floatsisf+0x40>
 7e2:	f9 2f       	mov	r31, r25
 7e4:	96 e9       	ldi	r25, 0x96	; 150
 7e6:	bb 27       	eor	r27, r27
 7e8:	93 95       	inc	r25
 7ea:	f6 95       	lsr	r31
 7ec:	87 95       	ror	r24
 7ee:	77 95       	ror	r23
 7f0:	67 95       	ror	r22
 7f2:	b7 95       	ror	r27
 7f4:	f1 11       	cpse	r31, r1
 7f6:	f8 cf       	rjmp	.-16     	; 0x7e8 <__floatsisf+0x1c>
 7f8:	fa f4       	brpl	.+62     	; 0x838 <__floatsisf+0x6c>
 7fa:	bb 0f       	add	r27, r27
 7fc:	11 f4       	brne	.+4      	; 0x802 <__floatsisf+0x36>
 7fe:	60 ff       	sbrs	r22, 0
 800:	1b c0       	rjmp	.+54     	; 0x838 <__floatsisf+0x6c>
 802:	6f 5f       	subi	r22, 0xFF	; 255
 804:	7f 4f       	sbci	r23, 0xFF	; 255
 806:	8f 4f       	sbci	r24, 0xFF	; 255
 808:	9f 4f       	sbci	r25, 0xFF	; 255
 80a:	16 c0       	rjmp	.+44     	; 0x838 <__floatsisf+0x6c>
 80c:	88 23       	and	r24, r24
 80e:	11 f0       	breq	.+4      	; 0x814 <__floatsisf+0x48>
 810:	96 e9       	ldi	r25, 0x96	; 150
 812:	11 c0       	rjmp	.+34     	; 0x836 <__floatsisf+0x6a>
 814:	77 23       	and	r23, r23
 816:	21 f0       	breq	.+8      	; 0x820 <__floatsisf+0x54>
 818:	9e e8       	ldi	r25, 0x8E	; 142
 81a:	87 2f       	mov	r24, r23
 81c:	76 2f       	mov	r23, r22
 81e:	05 c0       	rjmp	.+10     	; 0x82a <__floatsisf+0x5e>
 820:	66 23       	and	r22, r22
 822:	71 f0       	breq	.+28     	; 0x840 <__floatsisf+0x74>
 824:	96 e8       	ldi	r25, 0x86	; 134
 826:	86 2f       	mov	r24, r22
 828:	70 e0       	ldi	r23, 0x00	; 0
 82a:	60 e0       	ldi	r22, 0x00	; 0
 82c:	2a f0       	brmi	.+10     	; 0x838 <__floatsisf+0x6c>
 82e:	9a 95       	dec	r25
 830:	66 0f       	add	r22, r22
 832:	77 1f       	adc	r23, r23
 834:	88 1f       	adc	r24, r24
 836:	da f7       	brpl	.-10     	; 0x82e <__floatsisf+0x62>
 838:	88 0f       	add	r24, r24
 83a:	96 95       	lsr	r25
 83c:	87 95       	ror	r24
 83e:	97 f9       	bld	r25, 7
 840:	08 95       	ret

00000842 <__fp_cmp>:
 842:	99 0f       	add	r25, r25
 844:	00 08       	sbc	r0, r0
 846:	55 0f       	add	r21, r21
 848:	aa 0b       	sbc	r26, r26
 84a:	e0 e8       	ldi	r30, 0x80	; 128
 84c:	fe ef       	ldi	r31, 0xFE	; 254
 84e:	16 16       	cp	r1, r22
 850:	17 06       	cpc	r1, r23
 852:	e8 07       	cpc	r30, r24
 854:	f9 07       	cpc	r31, r25
 856:	c0 f0       	brcs	.+48     	; 0x888 <__stack+0x29>
 858:	12 16       	cp	r1, r18
 85a:	13 06       	cpc	r1, r19
 85c:	e4 07       	cpc	r30, r20
 85e:	f5 07       	cpc	r31, r21
 860:	98 f0       	brcs	.+38     	; 0x888 <__stack+0x29>
 862:	62 1b       	sub	r22, r18
 864:	73 0b       	sbc	r23, r19
 866:	84 0b       	sbc	r24, r20
 868:	95 0b       	sbc	r25, r21
 86a:	39 f4       	brne	.+14     	; 0x87a <__stack+0x1b>
 86c:	0a 26       	eor	r0, r26
 86e:	61 f0       	breq	.+24     	; 0x888 <__stack+0x29>
 870:	23 2b       	or	r18, r19
 872:	24 2b       	or	r18, r20
 874:	25 2b       	or	r18, r21
 876:	21 f4       	brne	.+8      	; 0x880 <__stack+0x21>
 878:	08 95       	ret
 87a:	0a 26       	eor	r0, r26
 87c:	09 f4       	brne	.+2      	; 0x880 <__stack+0x21>
 87e:	a1 40       	sbci	r26, 0x01	; 1
 880:	a6 95       	lsr	r26
 882:	8f ef       	ldi	r24, 0xFF	; 255
 884:	81 1d       	adc	r24, r1
 886:	81 1d       	adc	r24, r1
 888:	08 95       	ret

0000088a <__fp_inf>:
 88a:	97 f9       	bld	r25, 7
 88c:	9f 67       	ori	r25, 0x7F	; 127
 88e:	80 e8       	ldi	r24, 0x80	; 128
 890:	70 e0       	ldi	r23, 0x00	; 0
 892:	60 e0       	ldi	r22, 0x00	; 0
 894:	08 95       	ret

00000896 <__fp_nan>:
 896:	9f ef       	ldi	r25, 0xFF	; 255
 898:	80 ec       	ldi	r24, 0xC0	; 192
 89a:	08 95       	ret

0000089c <__fp_pscA>:
 89c:	00 24       	eor	r0, r0
 89e:	0a 94       	dec	r0
 8a0:	16 16       	cp	r1, r22
 8a2:	17 06       	cpc	r1, r23
 8a4:	18 06       	cpc	r1, r24
 8a6:	09 06       	cpc	r0, r25
 8a8:	08 95       	ret

000008aa <__fp_pscB>:
 8aa:	00 24       	eor	r0, r0
 8ac:	0a 94       	dec	r0
 8ae:	12 16       	cp	r1, r18
 8b0:	13 06       	cpc	r1, r19
 8b2:	14 06       	cpc	r1, r20
 8b4:	05 06       	cpc	r0, r21
 8b6:	08 95       	ret

000008b8 <__fp_round>:
 8b8:	09 2e       	mov	r0, r25
 8ba:	03 94       	inc	r0
 8bc:	00 0c       	add	r0, r0
 8be:	11 f4       	brne	.+4      	; 0x8c4 <__fp_round+0xc>
 8c0:	88 23       	and	r24, r24
 8c2:	52 f0       	brmi	.+20     	; 0x8d8 <__fp_round+0x20>
 8c4:	bb 0f       	add	r27, r27
 8c6:	40 f4       	brcc	.+16     	; 0x8d8 <__fp_round+0x20>
 8c8:	bf 2b       	or	r27, r31
 8ca:	11 f4       	brne	.+4      	; 0x8d0 <__fp_round+0x18>
 8cc:	60 ff       	sbrs	r22, 0
 8ce:	04 c0       	rjmp	.+8      	; 0x8d8 <__fp_round+0x20>
 8d0:	6f 5f       	subi	r22, 0xFF	; 255
 8d2:	7f 4f       	sbci	r23, 0xFF	; 255
 8d4:	8f 4f       	sbci	r24, 0xFF	; 255
 8d6:	9f 4f       	sbci	r25, 0xFF	; 255
 8d8:	08 95       	ret

000008da <__fp_split3>:
 8da:	57 fd       	sbrc	r21, 7
 8dc:	90 58       	subi	r25, 0x80	; 128
 8de:	44 0f       	add	r20, r20
 8e0:	55 1f       	adc	r21, r21
 8e2:	59 f0       	breq	.+22     	; 0x8fa <__fp_splitA+0x10>
 8e4:	5f 3f       	cpi	r21, 0xFF	; 255
 8e6:	71 f0       	breq	.+28     	; 0x904 <__fp_splitA+0x1a>
 8e8:	47 95       	ror	r20

000008ea <__fp_splitA>:
 8ea:	88 0f       	add	r24, r24
 8ec:	97 fb       	bst	r25, 7
 8ee:	99 1f       	adc	r25, r25
 8f0:	61 f0       	breq	.+24     	; 0x90a <__fp_splitA+0x20>
 8f2:	9f 3f       	cpi	r25, 0xFF	; 255
 8f4:	79 f0       	breq	.+30     	; 0x914 <__fp_splitA+0x2a>
 8f6:	87 95       	ror	r24
 8f8:	08 95       	ret
 8fa:	12 16       	cp	r1, r18
 8fc:	13 06       	cpc	r1, r19
 8fe:	14 06       	cpc	r1, r20
 900:	55 1f       	adc	r21, r21
 902:	f2 cf       	rjmp	.-28     	; 0x8e8 <__fp_split3+0xe>
 904:	46 95       	lsr	r20
 906:	f1 df       	rcall	.-30     	; 0x8ea <__fp_splitA>
 908:	08 c0       	rjmp	.+16     	; 0x91a <__fp_splitA+0x30>
 90a:	16 16       	cp	r1, r22
 90c:	17 06       	cpc	r1, r23
 90e:	18 06       	cpc	r1, r24
 910:	99 1f       	adc	r25, r25
 912:	f1 cf       	rjmp	.-30     	; 0x8f6 <__fp_splitA+0xc>
 914:	86 95       	lsr	r24
 916:	71 05       	cpc	r23, r1
 918:	61 05       	cpc	r22, r1
 91a:	08 94       	sec
 91c:	08 95       	ret

0000091e <__fp_zero>:
 91e:	e8 94       	clt

00000920 <__fp_szero>:
 920:	bb 27       	eor	r27, r27
 922:	66 27       	eor	r22, r22
 924:	77 27       	eor	r23, r23
 926:	cb 01       	movw	r24, r22
 928:	97 f9       	bld	r25, 7
 92a:	08 95       	ret

0000092c <__gesf2>:
 92c:	0e 94 21 04 	call	0x842	; 0x842 <__fp_cmp>
 930:	08 f4       	brcc	.+2      	; 0x934 <__gesf2+0x8>
 932:	8f ef       	ldi	r24, 0xFF	; 255
 934:	08 95       	ret

00000936 <__mulsf3>:
 936:	0e 94 ae 04 	call	0x95c	; 0x95c <__mulsf3x>
 93a:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__fp_round>
 93e:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_pscA>
 942:	38 f0       	brcs	.+14     	; 0x952 <__mulsf3+0x1c>
 944:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fp_pscB>
 948:	20 f0       	brcs	.+8      	; 0x952 <__mulsf3+0x1c>
 94a:	95 23       	and	r25, r21
 94c:	11 f0       	breq	.+4      	; 0x952 <__mulsf3+0x1c>
 94e:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_inf>
 952:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_nan>
 956:	11 24       	eor	r1, r1
 958:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_szero>

0000095c <__mulsf3x>:
 95c:	0e 94 6d 04 	call	0x8da	; 0x8da <__fp_split3>
 960:	70 f3       	brcs	.-36     	; 0x93e <__mulsf3+0x8>

00000962 <__mulsf3_pse>:
 962:	95 9f       	mul	r25, r21
 964:	c1 f3       	breq	.-16     	; 0x956 <__mulsf3+0x20>
 966:	95 0f       	add	r25, r21
 968:	50 e0       	ldi	r21, 0x00	; 0
 96a:	55 1f       	adc	r21, r21
 96c:	62 9f       	mul	r22, r18
 96e:	f0 01       	movw	r30, r0
 970:	72 9f       	mul	r23, r18
 972:	bb 27       	eor	r27, r27
 974:	f0 0d       	add	r31, r0
 976:	b1 1d       	adc	r27, r1
 978:	63 9f       	mul	r22, r19
 97a:	aa 27       	eor	r26, r26
 97c:	f0 0d       	add	r31, r0
 97e:	b1 1d       	adc	r27, r1
 980:	aa 1f       	adc	r26, r26
 982:	64 9f       	mul	r22, r20
 984:	66 27       	eor	r22, r22
 986:	b0 0d       	add	r27, r0
 988:	a1 1d       	adc	r26, r1
 98a:	66 1f       	adc	r22, r22
 98c:	82 9f       	mul	r24, r18
 98e:	22 27       	eor	r18, r18
 990:	b0 0d       	add	r27, r0
 992:	a1 1d       	adc	r26, r1
 994:	62 1f       	adc	r22, r18
 996:	73 9f       	mul	r23, r19
 998:	b0 0d       	add	r27, r0
 99a:	a1 1d       	adc	r26, r1
 99c:	62 1f       	adc	r22, r18
 99e:	83 9f       	mul	r24, r19
 9a0:	a0 0d       	add	r26, r0
 9a2:	61 1d       	adc	r22, r1
 9a4:	22 1f       	adc	r18, r18
 9a6:	74 9f       	mul	r23, r20
 9a8:	33 27       	eor	r19, r19
 9aa:	a0 0d       	add	r26, r0
 9ac:	61 1d       	adc	r22, r1
 9ae:	23 1f       	adc	r18, r19
 9b0:	84 9f       	mul	r24, r20
 9b2:	60 0d       	add	r22, r0
 9b4:	21 1d       	adc	r18, r1
 9b6:	82 2f       	mov	r24, r18
 9b8:	76 2f       	mov	r23, r22
 9ba:	6a 2f       	mov	r22, r26
 9bc:	11 24       	eor	r1, r1
 9be:	9f 57       	subi	r25, 0x7F	; 127
 9c0:	50 40       	sbci	r21, 0x00	; 0
 9c2:	9a f0       	brmi	.+38     	; 0x9ea <__mulsf3_pse+0x88>
 9c4:	f1 f0       	breq	.+60     	; 0xa02 <__mulsf3_pse+0xa0>
 9c6:	88 23       	and	r24, r24
 9c8:	4a f0       	brmi	.+18     	; 0x9dc <__mulsf3_pse+0x7a>
 9ca:	ee 0f       	add	r30, r30
 9cc:	ff 1f       	adc	r31, r31
 9ce:	bb 1f       	adc	r27, r27
 9d0:	66 1f       	adc	r22, r22
 9d2:	77 1f       	adc	r23, r23
 9d4:	88 1f       	adc	r24, r24
 9d6:	91 50       	subi	r25, 0x01	; 1
 9d8:	50 40       	sbci	r21, 0x00	; 0
 9da:	a9 f7       	brne	.-22     	; 0x9c6 <__mulsf3_pse+0x64>
 9dc:	9e 3f       	cpi	r25, 0xFE	; 254
 9de:	51 05       	cpc	r21, r1
 9e0:	80 f0       	brcs	.+32     	; 0xa02 <__mulsf3_pse+0xa0>
 9e2:	0c 94 45 04 	jmp	0x88a	; 0x88a <__fp_inf>
 9e6:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_szero>
 9ea:	5f 3f       	cpi	r21, 0xFF	; 255
 9ec:	e4 f3       	brlt	.-8      	; 0x9e6 <__mulsf3_pse+0x84>
 9ee:	98 3e       	cpi	r25, 0xE8	; 232
 9f0:	d4 f3       	brlt	.-12     	; 0x9e6 <__mulsf3_pse+0x84>
 9f2:	86 95       	lsr	r24
 9f4:	77 95       	ror	r23
 9f6:	67 95       	ror	r22
 9f8:	b7 95       	ror	r27
 9fa:	f7 95       	ror	r31
 9fc:	e7 95       	ror	r30
 9fe:	9f 5f       	subi	r25, 0xFF	; 255
 a00:	c1 f7       	brne	.-16     	; 0x9f2 <__mulsf3_pse+0x90>
 a02:	fe 2b       	or	r31, r30
 a04:	88 0f       	add	r24, r24
 a06:	91 1d       	adc	r25, r1
 a08:	96 95       	lsr	r25
 a0a:	87 95       	ror	r24
 a0c:	97 f9       	bld	r25, 7
 a0e:	08 95       	ret

00000a10 <sprintf>:
 a10:	ae e0       	ldi	r26, 0x0E	; 14
 a12:	b0 e0       	ldi	r27, 0x00	; 0
 a14:	ee e0       	ldi	r30, 0x0E	; 14
 a16:	f5 e0       	ldi	r31, 0x05	; 5
 a18:	0c 94 c9 07 	jmp	0xf92	; 0xf92 <__prologue_saves__+0x1c>
 a1c:	0d 89       	ldd	r16, Y+21	; 0x15
 a1e:	1e 89       	ldd	r17, Y+22	; 0x16
 a20:	86 e0       	ldi	r24, 0x06	; 6
 a22:	8c 83       	std	Y+4, r24	; 0x04
 a24:	1a 83       	std	Y+2, r17	; 0x02
 a26:	09 83       	std	Y+1, r16	; 0x01
 a28:	8f ef       	ldi	r24, 0xFF	; 255
 a2a:	9f e7       	ldi	r25, 0x7F	; 127
 a2c:	9e 83       	std	Y+6, r25	; 0x06
 a2e:	8d 83       	std	Y+5, r24	; 0x05
 a30:	ae 01       	movw	r20, r28
 a32:	47 5e       	subi	r20, 0xE7	; 231
 a34:	5f 4f       	sbci	r21, 0xFF	; 255
 a36:	6f 89       	ldd	r22, Y+23	; 0x17
 a38:	78 8d       	ldd	r23, Y+24	; 0x18
 a3a:	ce 01       	movw	r24, r28
 a3c:	01 96       	adiw	r24, 0x01	; 1
 a3e:	0e 94 2a 05 	call	0xa54	; 0xa54 <vfprintf>
 a42:	ef 81       	ldd	r30, Y+7	; 0x07
 a44:	f8 85       	ldd	r31, Y+8	; 0x08
 a46:	e0 0f       	add	r30, r16
 a48:	f1 1f       	adc	r31, r17
 a4a:	10 82       	st	Z, r1
 a4c:	2e 96       	adiw	r28, 0x0e	; 14
 a4e:	e4 e0       	ldi	r30, 0x04	; 4
 a50:	0c 94 e5 07 	jmp	0xfca	; 0xfca <__epilogue_restores__+0x1c>

00000a54 <vfprintf>:
 a54:	ab e0       	ldi	r26, 0x0B	; 11
 a56:	b0 e0       	ldi	r27, 0x00	; 0
 a58:	e0 e3       	ldi	r30, 0x30	; 48
 a5a:	f5 e0       	ldi	r31, 0x05	; 5
 a5c:	0c 94 bb 07 	jmp	0xf76	; 0xf76 <__prologue_saves__>
 a60:	6c 01       	movw	r12, r24
 a62:	7b 01       	movw	r14, r22
 a64:	8a 01       	movw	r16, r20
 a66:	fc 01       	movw	r30, r24
 a68:	17 82       	std	Z+7, r1	; 0x07
 a6a:	16 82       	std	Z+6, r1	; 0x06
 a6c:	83 81       	ldd	r24, Z+3	; 0x03
 a6e:	81 ff       	sbrs	r24, 1
 a70:	cc c1       	rjmp	.+920    	; 0xe0a <vfprintf+0x3b6>
 a72:	ce 01       	movw	r24, r28
 a74:	01 96       	adiw	r24, 0x01	; 1
 a76:	3c 01       	movw	r6, r24
 a78:	f6 01       	movw	r30, r12
 a7a:	93 81       	ldd	r25, Z+3	; 0x03
 a7c:	f7 01       	movw	r30, r14
 a7e:	93 fd       	sbrc	r25, 3
 a80:	85 91       	lpm	r24, Z+
 a82:	93 ff       	sbrs	r25, 3
 a84:	81 91       	ld	r24, Z+
 a86:	7f 01       	movw	r14, r30
 a88:	88 23       	and	r24, r24
 a8a:	09 f4       	brne	.+2      	; 0xa8e <vfprintf+0x3a>
 a8c:	ba c1       	rjmp	.+884    	; 0xe02 <vfprintf+0x3ae>
 a8e:	85 32       	cpi	r24, 0x25	; 37
 a90:	39 f4       	brne	.+14     	; 0xaa0 <vfprintf+0x4c>
 a92:	93 fd       	sbrc	r25, 3
 a94:	85 91       	lpm	r24, Z+
 a96:	93 ff       	sbrs	r25, 3
 a98:	81 91       	ld	r24, Z+
 a9a:	7f 01       	movw	r14, r30
 a9c:	85 32       	cpi	r24, 0x25	; 37
 a9e:	29 f4       	brne	.+10     	; 0xaaa <vfprintf+0x56>
 aa0:	b6 01       	movw	r22, r12
 aa2:	90 e0       	ldi	r25, 0x00	; 0
 aa4:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 aa8:	e7 cf       	rjmp	.-50     	; 0xa78 <vfprintf+0x24>
 aaa:	91 2c       	mov	r9, r1
 aac:	21 2c       	mov	r2, r1
 aae:	31 2c       	mov	r3, r1
 ab0:	ff e1       	ldi	r31, 0x1F	; 31
 ab2:	f3 15       	cp	r31, r3
 ab4:	d8 f0       	brcs	.+54     	; 0xaec <vfprintf+0x98>
 ab6:	8b 32       	cpi	r24, 0x2B	; 43
 ab8:	79 f0       	breq	.+30     	; 0xad8 <vfprintf+0x84>
 aba:	38 f4       	brcc	.+14     	; 0xaca <vfprintf+0x76>
 abc:	80 32       	cpi	r24, 0x20	; 32
 abe:	79 f0       	breq	.+30     	; 0xade <vfprintf+0x8a>
 ac0:	83 32       	cpi	r24, 0x23	; 35
 ac2:	a1 f4       	brne	.+40     	; 0xaec <vfprintf+0x98>
 ac4:	23 2d       	mov	r18, r3
 ac6:	20 61       	ori	r18, 0x10	; 16
 ac8:	1d c0       	rjmp	.+58     	; 0xb04 <vfprintf+0xb0>
 aca:	8d 32       	cpi	r24, 0x2D	; 45
 acc:	61 f0       	breq	.+24     	; 0xae6 <vfprintf+0x92>
 ace:	80 33       	cpi	r24, 0x30	; 48
 ad0:	69 f4       	brne	.+26     	; 0xaec <vfprintf+0x98>
 ad2:	23 2d       	mov	r18, r3
 ad4:	21 60       	ori	r18, 0x01	; 1
 ad6:	16 c0       	rjmp	.+44     	; 0xb04 <vfprintf+0xb0>
 ad8:	83 2d       	mov	r24, r3
 ada:	82 60       	ori	r24, 0x02	; 2
 adc:	38 2e       	mov	r3, r24
 ade:	e3 2d       	mov	r30, r3
 ae0:	e4 60       	ori	r30, 0x04	; 4
 ae2:	3e 2e       	mov	r3, r30
 ae4:	2a c0       	rjmp	.+84     	; 0xb3a <vfprintf+0xe6>
 ae6:	f3 2d       	mov	r31, r3
 ae8:	f8 60       	ori	r31, 0x08	; 8
 aea:	1d c0       	rjmp	.+58     	; 0xb26 <vfprintf+0xd2>
 aec:	37 fc       	sbrc	r3, 7
 aee:	2d c0       	rjmp	.+90     	; 0xb4a <vfprintf+0xf6>
 af0:	20 ed       	ldi	r18, 0xD0	; 208
 af2:	28 0f       	add	r18, r24
 af4:	2a 30       	cpi	r18, 0x0A	; 10
 af6:	40 f0       	brcs	.+16     	; 0xb08 <vfprintf+0xb4>
 af8:	8e 32       	cpi	r24, 0x2E	; 46
 afa:	b9 f4       	brne	.+46     	; 0xb2a <vfprintf+0xd6>
 afc:	36 fc       	sbrc	r3, 6
 afe:	81 c1       	rjmp	.+770    	; 0xe02 <vfprintf+0x3ae>
 b00:	23 2d       	mov	r18, r3
 b02:	20 64       	ori	r18, 0x40	; 64
 b04:	32 2e       	mov	r3, r18
 b06:	19 c0       	rjmp	.+50     	; 0xb3a <vfprintf+0xe6>
 b08:	36 fe       	sbrs	r3, 6
 b0a:	06 c0       	rjmp	.+12     	; 0xb18 <vfprintf+0xc4>
 b0c:	8a e0       	ldi	r24, 0x0A	; 10
 b0e:	98 9e       	mul	r9, r24
 b10:	20 0d       	add	r18, r0
 b12:	11 24       	eor	r1, r1
 b14:	92 2e       	mov	r9, r18
 b16:	11 c0       	rjmp	.+34     	; 0xb3a <vfprintf+0xe6>
 b18:	ea e0       	ldi	r30, 0x0A	; 10
 b1a:	2e 9e       	mul	r2, r30
 b1c:	20 0d       	add	r18, r0
 b1e:	11 24       	eor	r1, r1
 b20:	22 2e       	mov	r2, r18
 b22:	f3 2d       	mov	r31, r3
 b24:	f0 62       	ori	r31, 0x20	; 32
 b26:	3f 2e       	mov	r3, r31
 b28:	08 c0       	rjmp	.+16     	; 0xb3a <vfprintf+0xe6>
 b2a:	8c 36       	cpi	r24, 0x6C	; 108
 b2c:	21 f4       	brne	.+8      	; 0xb36 <vfprintf+0xe2>
 b2e:	83 2d       	mov	r24, r3
 b30:	80 68       	ori	r24, 0x80	; 128
 b32:	38 2e       	mov	r3, r24
 b34:	02 c0       	rjmp	.+4      	; 0xb3a <vfprintf+0xe6>
 b36:	88 36       	cpi	r24, 0x68	; 104
 b38:	41 f4       	brne	.+16     	; 0xb4a <vfprintf+0xf6>
 b3a:	f7 01       	movw	r30, r14
 b3c:	93 fd       	sbrc	r25, 3
 b3e:	85 91       	lpm	r24, Z+
 b40:	93 ff       	sbrs	r25, 3
 b42:	81 91       	ld	r24, Z+
 b44:	7f 01       	movw	r14, r30
 b46:	81 11       	cpse	r24, r1
 b48:	b3 cf       	rjmp	.-154    	; 0xab0 <vfprintf+0x5c>
 b4a:	98 2f       	mov	r25, r24
 b4c:	9f 7d       	andi	r25, 0xDF	; 223
 b4e:	95 54       	subi	r25, 0x45	; 69
 b50:	93 30       	cpi	r25, 0x03	; 3
 b52:	28 f4       	brcc	.+10     	; 0xb5e <vfprintf+0x10a>
 b54:	0c 5f       	subi	r16, 0xFC	; 252
 b56:	1f 4f       	sbci	r17, 0xFF	; 255
 b58:	9f e3       	ldi	r25, 0x3F	; 63
 b5a:	99 83       	std	Y+1, r25	; 0x01
 b5c:	0d c0       	rjmp	.+26     	; 0xb78 <vfprintf+0x124>
 b5e:	83 36       	cpi	r24, 0x63	; 99
 b60:	31 f0       	breq	.+12     	; 0xb6e <vfprintf+0x11a>
 b62:	83 37       	cpi	r24, 0x73	; 115
 b64:	71 f0       	breq	.+28     	; 0xb82 <vfprintf+0x12e>
 b66:	83 35       	cpi	r24, 0x53	; 83
 b68:	09 f0       	breq	.+2      	; 0xb6c <vfprintf+0x118>
 b6a:	59 c0       	rjmp	.+178    	; 0xc1e <vfprintf+0x1ca>
 b6c:	21 c0       	rjmp	.+66     	; 0xbb0 <vfprintf+0x15c>
 b6e:	f8 01       	movw	r30, r16
 b70:	80 81       	ld	r24, Z
 b72:	89 83       	std	Y+1, r24	; 0x01
 b74:	0e 5f       	subi	r16, 0xFE	; 254
 b76:	1f 4f       	sbci	r17, 0xFF	; 255
 b78:	88 24       	eor	r8, r8
 b7a:	83 94       	inc	r8
 b7c:	91 2c       	mov	r9, r1
 b7e:	53 01       	movw	r10, r6
 b80:	13 c0       	rjmp	.+38     	; 0xba8 <vfprintf+0x154>
 b82:	28 01       	movw	r4, r16
 b84:	f2 e0       	ldi	r31, 0x02	; 2
 b86:	4f 0e       	add	r4, r31
 b88:	51 1c       	adc	r5, r1
 b8a:	f8 01       	movw	r30, r16
 b8c:	a0 80       	ld	r10, Z
 b8e:	b1 80       	ldd	r11, Z+1	; 0x01
 b90:	36 fe       	sbrs	r3, 6
 b92:	03 c0       	rjmp	.+6      	; 0xb9a <vfprintf+0x146>
 b94:	69 2d       	mov	r22, r9
 b96:	70 e0       	ldi	r23, 0x00	; 0
 b98:	02 c0       	rjmp	.+4      	; 0xb9e <vfprintf+0x14a>
 b9a:	6f ef       	ldi	r22, 0xFF	; 255
 b9c:	7f ef       	ldi	r23, 0xFF	; 255
 b9e:	c5 01       	movw	r24, r10
 ba0:	0e 94 16 07 	call	0xe2c	; 0xe2c <strnlen>
 ba4:	4c 01       	movw	r8, r24
 ba6:	82 01       	movw	r16, r4
 ba8:	f3 2d       	mov	r31, r3
 baa:	ff 77       	andi	r31, 0x7F	; 127
 bac:	3f 2e       	mov	r3, r31
 bae:	16 c0       	rjmp	.+44     	; 0xbdc <vfprintf+0x188>
 bb0:	28 01       	movw	r4, r16
 bb2:	22 e0       	ldi	r18, 0x02	; 2
 bb4:	42 0e       	add	r4, r18
 bb6:	51 1c       	adc	r5, r1
 bb8:	f8 01       	movw	r30, r16
 bba:	a0 80       	ld	r10, Z
 bbc:	b1 80       	ldd	r11, Z+1	; 0x01
 bbe:	36 fe       	sbrs	r3, 6
 bc0:	03 c0       	rjmp	.+6      	; 0xbc8 <vfprintf+0x174>
 bc2:	69 2d       	mov	r22, r9
 bc4:	70 e0       	ldi	r23, 0x00	; 0
 bc6:	02 c0       	rjmp	.+4      	; 0xbcc <vfprintf+0x178>
 bc8:	6f ef       	ldi	r22, 0xFF	; 255
 bca:	7f ef       	ldi	r23, 0xFF	; 255
 bcc:	c5 01       	movw	r24, r10
 bce:	0e 94 0b 07 	call	0xe16	; 0xe16 <strnlen_P>
 bd2:	4c 01       	movw	r8, r24
 bd4:	f3 2d       	mov	r31, r3
 bd6:	f0 68       	ori	r31, 0x80	; 128
 bd8:	3f 2e       	mov	r3, r31
 bda:	82 01       	movw	r16, r4
 bdc:	33 fc       	sbrc	r3, 3
 bde:	1b c0       	rjmp	.+54     	; 0xc16 <vfprintf+0x1c2>
 be0:	82 2d       	mov	r24, r2
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	88 16       	cp	r8, r24
 be6:	99 06       	cpc	r9, r25
 be8:	b0 f4       	brcc	.+44     	; 0xc16 <vfprintf+0x1c2>
 bea:	b6 01       	movw	r22, r12
 bec:	80 e2       	ldi	r24, 0x20	; 32
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 bf4:	2a 94       	dec	r2
 bf6:	f4 cf       	rjmp	.-24     	; 0xbe0 <vfprintf+0x18c>
 bf8:	f5 01       	movw	r30, r10
 bfa:	37 fc       	sbrc	r3, 7
 bfc:	85 91       	lpm	r24, Z+
 bfe:	37 fe       	sbrs	r3, 7
 c00:	81 91       	ld	r24, Z+
 c02:	5f 01       	movw	r10, r30
 c04:	b6 01       	movw	r22, r12
 c06:	90 e0       	ldi	r25, 0x00	; 0
 c08:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 c0c:	21 10       	cpse	r2, r1
 c0e:	2a 94       	dec	r2
 c10:	21 e0       	ldi	r18, 0x01	; 1
 c12:	82 1a       	sub	r8, r18
 c14:	91 08       	sbc	r9, r1
 c16:	81 14       	cp	r8, r1
 c18:	91 04       	cpc	r9, r1
 c1a:	71 f7       	brne	.-36     	; 0xbf8 <vfprintf+0x1a4>
 c1c:	e8 c0       	rjmp	.+464    	; 0xdee <vfprintf+0x39a>
 c1e:	84 36       	cpi	r24, 0x64	; 100
 c20:	11 f0       	breq	.+4      	; 0xc26 <vfprintf+0x1d2>
 c22:	89 36       	cpi	r24, 0x69	; 105
 c24:	41 f5       	brne	.+80     	; 0xc76 <vfprintf+0x222>
 c26:	f8 01       	movw	r30, r16
 c28:	37 fe       	sbrs	r3, 7
 c2a:	07 c0       	rjmp	.+14     	; 0xc3a <vfprintf+0x1e6>
 c2c:	60 81       	ld	r22, Z
 c2e:	71 81       	ldd	r23, Z+1	; 0x01
 c30:	82 81       	ldd	r24, Z+2	; 0x02
 c32:	93 81       	ldd	r25, Z+3	; 0x03
 c34:	0c 5f       	subi	r16, 0xFC	; 252
 c36:	1f 4f       	sbci	r17, 0xFF	; 255
 c38:	08 c0       	rjmp	.+16     	; 0xc4a <vfprintf+0x1f6>
 c3a:	60 81       	ld	r22, Z
 c3c:	71 81       	ldd	r23, Z+1	; 0x01
 c3e:	07 2e       	mov	r0, r23
 c40:	00 0c       	add	r0, r0
 c42:	88 0b       	sbc	r24, r24
 c44:	99 0b       	sbc	r25, r25
 c46:	0e 5f       	subi	r16, 0xFE	; 254
 c48:	1f 4f       	sbci	r17, 0xFF	; 255
 c4a:	f3 2d       	mov	r31, r3
 c4c:	ff 76       	andi	r31, 0x6F	; 111
 c4e:	3f 2e       	mov	r3, r31
 c50:	97 ff       	sbrs	r25, 7
 c52:	09 c0       	rjmp	.+18     	; 0xc66 <vfprintf+0x212>
 c54:	90 95       	com	r25
 c56:	80 95       	com	r24
 c58:	70 95       	com	r23
 c5a:	61 95       	neg	r22
 c5c:	7f 4f       	sbci	r23, 0xFF	; 255
 c5e:	8f 4f       	sbci	r24, 0xFF	; 255
 c60:	9f 4f       	sbci	r25, 0xFF	; 255
 c62:	f0 68       	ori	r31, 0x80	; 128
 c64:	3f 2e       	mov	r3, r31
 c66:	2a e0       	ldi	r18, 0x0A	; 10
 c68:	30 e0       	ldi	r19, 0x00	; 0
 c6a:	a3 01       	movw	r20, r6
 c6c:	0e 94 5d 07 	call	0xeba	; 0xeba <__ultoa_invert>
 c70:	88 2e       	mov	r8, r24
 c72:	86 18       	sub	r8, r6
 c74:	45 c0       	rjmp	.+138    	; 0xd00 <vfprintf+0x2ac>
 c76:	85 37       	cpi	r24, 0x75	; 117
 c78:	31 f4       	brne	.+12     	; 0xc86 <vfprintf+0x232>
 c7a:	23 2d       	mov	r18, r3
 c7c:	2f 7e       	andi	r18, 0xEF	; 239
 c7e:	b2 2e       	mov	r11, r18
 c80:	2a e0       	ldi	r18, 0x0A	; 10
 c82:	30 e0       	ldi	r19, 0x00	; 0
 c84:	25 c0       	rjmp	.+74     	; 0xcd0 <vfprintf+0x27c>
 c86:	93 2d       	mov	r25, r3
 c88:	99 7f       	andi	r25, 0xF9	; 249
 c8a:	b9 2e       	mov	r11, r25
 c8c:	8f 36       	cpi	r24, 0x6F	; 111
 c8e:	c1 f0       	breq	.+48     	; 0xcc0 <vfprintf+0x26c>
 c90:	18 f4       	brcc	.+6      	; 0xc98 <vfprintf+0x244>
 c92:	88 35       	cpi	r24, 0x58	; 88
 c94:	79 f0       	breq	.+30     	; 0xcb4 <vfprintf+0x260>
 c96:	b5 c0       	rjmp	.+362    	; 0xe02 <vfprintf+0x3ae>
 c98:	80 37       	cpi	r24, 0x70	; 112
 c9a:	19 f0       	breq	.+6      	; 0xca2 <vfprintf+0x24e>
 c9c:	88 37       	cpi	r24, 0x78	; 120
 c9e:	21 f0       	breq	.+8      	; 0xca8 <vfprintf+0x254>
 ca0:	b0 c0       	rjmp	.+352    	; 0xe02 <vfprintf+0x3ae>
 ca2:	e9 2f       	mov	r30, r25
 ca4:	e0 61       	ori	r30, 0x10	; 16
 ca6:	be 2e       	mov	r11, r30
 ca8:	b4 fe       	sbrs	r11, 4
 caa:	0d c0       	rjmp	.+26     	; 0xcc6 <vfprintf+0x272>
 cac:	fb 2d       	mov	r31, r11
 cae:	f4 60       	ori	r31, 0x04	; 4
 cb0:	bf 2e       	mov	r11, r31
 cb2:	09 c0       	rjmp	.+18     	; 0xcc6 <vfprintf+0x272>
 cb4:	34 fe       	sbrs	r3, 4
 cb6:	0a c0       	rjmp	.+20     	; 0xccc <vfprintf+0x278>
 cb8:	29 2f       	mov	r18, r25
 cba:	26 60       	ori	r18, 0x06	; 6
 cbc:	b2 2e       	mov	r11, r18
 cbe:	06 c0       	rjmp	.+12     	; 0xccc <vfprintf+0x278>
 cc0:	28 e0       	ldi	r18, 0x08	; 8
 cc2:	30 e0       	ldi	r19, 0x00	; 0
 cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <vfprintf+0x27c>
 cc6:	20 e1       	ldi	r18, 0x10	; 16
 cc8:	30 e0       	ldi	r19, 0x00	; 0
 cca:	02 c0       	rjmp	.+4      	; 0xcd0 <vfprintf+0x27c>
 ccc:	20 e1       	ldi	r18, 0x10	; 16
 cce:	32 e0       	ldi	r19, 0x02	; 2
 cd0:	f8 01       	movw	r30, r16
 cd2:	b7 fe       	sbrs	r11, 7
 cd4:	07 c0       	rjmp	.+14     	; 0xce4 <vfprintf+0x290>
 cd6:	60 81       	ld	r22, Z
 cd8:	71 81       	ldd	r23, Z+1	; 0x01
 cda:	82 81       	ldd	r24, Z+2	; 0x02
 cdc:	93 81       	ldd	r25, Z+3	; 0x03
 cde:	0c 5f       	subi	r16, 0xFC	; 252
 ce0:	1f 4f       	sbci	r17, 0xFF	; 255
 ce2:	06 c0       	rjmp	.+12     	; 0xcf0 <vfprintf+0x29c>
 ce4:	60 81       	ld	r22, Z
 ce6:	71 81       	ldd	r23, Z+1	; 0x01
 ce8:	80 e0       	ldi	r24, 0x00	; 0
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	0e 5f       	subi	r16, 0xFE	; 254
 cee:	1f 4f       	sbci	r17, 0xFF	; 255
 cf0:	a3 01       	movw	r20, r6
 cf2:	0e 94 5d 07 	call	0xeba	; 0xeba <__ultoa_invert>
 cf6:	88 2e       	mov	r8, r24
 cf8:	86 18       	sub	r8, r6
 cfa:	fb 2d       	mov	r31, r11
 cfc:	ff 77       	andi	r31, 0x7F	; 127
 cfe:	3f 2e       	mov	r3, r31
 d00:	36 fe       	sbrs	r3, 6
 d02:	0d c0       	rjmp	.+26     	; 0xd1e <vfprintf+0x2ca>
 d04:	23 2d       	mov	r18, r3
 d06:	2e 7f       	andi	r18, 0xFE	; 254
 d08:	a2 2e       	mov	r10, r18
 d0a:	89 14       	cp	r8, r9
 d0c:	58 f4       	brcc	.+22     	; 0xd24 <vfprintf+0x2d0>
 d0e:	34 fe       	sbrs	r3, 4
 d10:	0b c0       	rjmp	.+22     	; 0xd28 <vfprintf+0x2d4>
 d12:	32 fc       	sbrc	r3, 2
 d14:	09 c0       	rjmp	.+18     	; 0xd28 <vfprintf+0x2d4>
 d16:	83 2d       	mov	r24, r3
 d18:	8e 7e       	andi	r24, 0xEE	; 238
 d1a:	a8 2e       	mov	r10, r24
 d1c:	05 c0       	rjmp	.+10     	; 0xd28 <vfprintf+0x2d4>
 d1e:	b8 2c       	mov	r11, r8
 d20:	a3 2c       	mov	r10, r3
 d22:	03 c0       	rjmp	.+6      	; 0xd2a <vfprintf+0x2d6>
 d24:	b8 2c       	mov	r11, r8
 d26:	01 c0       	rjmp	.+2      	; 0xd2a <vfprintf+0x2d6>
 d28:	b9 2c       	mov	r11, r9
 d2a:	a4 fe       	sbrs	r10, 4
 d2c:	0f c0       	rjmp	.+30     	; 0xd4c <vfprintf+0x2f8>
 d2e:	fe 01       	movw	r30, r28
 d30:	e8 0d       	add	r30, r8
 d32:	f1 1d       	adc	r31, r1
 d34:	80 81       	ld	r24, Z
 d36:	80 33       	cpi	r24, 0x30	; 48
 d38:	21 f4       	brne	.+8      	; 0xd42 <vfprintf+0x2ee>
 d3a:	9a 2d       	mov	r25, r10
 d3c:	99 7e       	andi	r25, 0xE9	; 233
 d3e:	a9 2e       	mov	r10, r25
 d40:	09 c0       	rjmp	.+18     	; 0xd54 <vfprintf+0x300>
 d42:	a2 fe       	sbrs	r10, 2
 d44:	06 c0       	rjmp	.+12     	; 0xd52 <vfprintf+0x2fe>
 d46:	b3 94       	inc	r11
 d48:	b3 94       	inc	r11
 d4a:	04 c0       	rjmp	.+8      	; 0xd54 <vfprintf+0x300>
 d4c:	8a 2d       	mov	r24, r10
 d4e:	86 78       	andi	r24, 0x86	; 134
 d50:	09 f0       	breq	.+2      	; 0xd54 <vfprintf+0x300>
 d52:	b3 94       	inc	r11
 d54:	a3 fc       	sbrc	r10, 3
 d56:	11 c0       	rjmp	.+34     	; 0xd7a <vfprintf+0x326>
 d58:	a0 fe       	sbrs	r10, 0
 d5a:	06 c0       	rjmp	.+12     	; 0xd68 <vfprintf+0x314>
 d5c:	b2 14       	cp	r11, r2
 d5e:	88 f4       	brcc	.+34     	; 0xd82 <vfprintf+0x32e>
 d60:	28 0c       	add	r2, r8
 d62:	92 2c       	mov	r9, r2
 d64:	9b 18       	sub	r9, r11
 d66:	0e c0       	rjmp	.+28     	; 0xd84 <vfprintf+0x330>
 d68:	b2 14       	cp	r11, r2
 d6a:	60 f4       	brcc	.+24     	; 0xd84 <vfprintf+0x330>
 d6c:	b6 01       	movw	r22, r12
 d6e:	80 e2       	ldi	r24, 0x20	; 32
 d70:	90 e0       	ldi	r25, 0x00	; 0
 d72:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 d76:	b3 94       	inc	r11
 d78:	f7 cf       	rjmp	.-18     	; 0xd68 <vfprintf+0x314>
 d7a:	b2 14       	cp	r11, r2
 d7c:	18 f4       	brcc	.+6      	; 0xd84 <vfprintf+0x330>
 d7e:	2b 18       	sub	r2, r11
 d80:	02 c0       	rjmp	.+4      	; 0xd86 <vfprintf+0x332>
 d82:	98 2c       	mov	r9, r8
 d84:	21 2c       	mov	r2, r1
 d86:	a4 fe       	sbrs	r10, 4
 d88:	10 c0       	rjmp	.+32     	; 0xdaa <vfprintf+0x356>
 d8a:	b6 01       	movw	r22, r12
 d8c:	80 e3       	ldi	r24, 0x30	; 48
 d8e:	90 e0       	ldi	r25, 0x00	; 0
 d90:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 d94:	a2 fe       	sbrs	r10, 2
 d96:	17 c0       	rjmp	.+46     	; 0xdc6 <vfprintf+0x372>
 d98:	a1 fc       	sbrc	r10, 1
 d9a:	03 c0       	rjmp	.+6      	; 0xda2 <vfprintf+0x34e>
 d9c:	88 e7       	ldi	r24, 0x78	; 120
 d9e:	90 e0       	ldi	r25, 0x00	; 0
 da0:	02 c0       	rjmp	.+4      	; 0xda6 <vfprintf+0x352>
 da2:	88 e5       	ldi	r24, 0x58	; 88
 da4:	90 e0       	ldi	r25, 0x00	; 0
 da6:	b6 01       	movw	r22, r12
 da8:	0c c0       	rjmp	.+24     	; 0xdc2 <vfprintf+0x36e>
 daa:	8a 2d       	mov	r24, r10
 dac:	86 78       	andi	r24, 0x86	; 134
 dae:	59 f0       	breq	.+22     	; 0xdc6 <vfprintf+0x372>
 db0:	a1 fe       	sbrs	r10, 1
 db2:	02 c0       	rjmp	.+4      	; 0xdb8 <vfprintf+0x364>
 db4:	8b e2       	ldi	r24, 0x2B	; 43
 db6:	01 c0       	rjmp	.+2      	; 0xdba <vfprintf+0x366>
 db8:	80 e2       	ldi	r24, 0x20	; 32
 dba:	a7 fc       	sbrc	r10, 7
 dbc:	8d e2       	ldi	r24, 0x2D	; 45
 dbe:	b6 01       	movw	r22, r12
 dc0:	90 e0       	ldi	r25, 0x00	; 0
 dc2:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 dc6:	89 14       	cp	r8, r9
 dc8:	38 f4       	brcc	.+14     	; 0xdd8 <vfprintf+0x384>
 dca:	b6 01       	movw	r22, r12
 dcc:	80 e3       	ldi	r24, 0x30	; 48
 dce:	90 e0       	ldi	r25, 0x00	; 0
 dd0:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 dd4:	9a 94       	dec	r9
 dd6:	f7 cf       	rjmp	.-18     	; 0xdc6 <vfprintf+0x372>
 dd8:	8a 94       	dec	r8
 dda:	f3 01       	movw	r30, r6
 ddc:	e8 0d       	add	r30, r8
 dde:	f1 1d       	adc	r31, r1
 de0:	80 81       	ld	r24, Z
 de2:	b6 01       	movw	r22, r12
 de4:	90 e0       	ldi	r25, 0x00	; 0
 de6:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 dea:	81 10       	cpse	r8, r1
 dec:	f5 cf       	rjmp	.-22     	; 0xdd8 <vfprintf+0x384>
 dee:	22 20       	and	r2, r2
 df0:	09 f4       	brne	.+2      	; 0xdf4 <vfprintf+0x3a0>
 df2:	42 ce       	rjmp	.-892    	; 0xa78 <vfprintf+0x24>
 df4:	b6 01       	movw	r22, r12
 df6:	80 e2       	ldi	r24, 0x20	; 32
 df8:	90 e0       	ldi	r25, 0x00	; 0
 dfa:	0e 94 21 07 	call	0xe42	; 0xe42 <fputc>
 dfe:	2a 94       	dec	r2
 e00:	f6 cf       	rjmp	.-20     	; 0xdee <vfprintf+0x39a>
 e02:	f6 01       	movw	r30, r12
 e04:	86 81       	ldd	r24, Z+6	; 0x06
 e06:	97 81       	ldd	r25, Z+7	; 0x07
 e08:	02 c0       	rjmp	.+4      	; 0xe0e <vfprintf+0x3ba>
 e0a:	8f ef       	ldi	r24, 0xFF	; 255
 e0c:	9f ef       	ldi	r25, 0xFF	; 255
 e0e:	2b 96       	adiw	r28, 0x0b	; 11
 e10:	e2 e1       	ldi	r30, 0x12	; 18
 e12:	0c 94 d7 07 	jmp	0xfae	; 0xfae <__epilogue_restores__>

00000e16 <strnlen_P>:
 e16:	fc 01       	movw	r30, r24
 e18:	05 90       	lpm	r0, Z+
 e1a:	61 50       	subi	r22, 0x01	; 1
 e1c:	70 40       	sbci	r23, 0x00	; 0
 e1e:	01 10       	cpse	r0, r1
 e20:	d8 f7       	brcc	.-10     	; 0xe18 <strnlen_P+0x2>
 e22:	80 95       	com	r24
 e24:	90 95       	com	r25
 e26:	8e 0f       	add	r24, r30
 e28:	9f 1f       	adc	r25, r31
 e2a:	08 95       	ret

00000e2c <strnlen>:
 e2c:	fc 01       	movw	r30, r24
 e2e:	61 50       	subi	r22, 0x01	; 1
 e30:	70 40       	sbci	r23, 0x00	; 0
 e32:	01 90       	ld	r0, Z+
 e34:	01 10       	cpse	r0, r1
 e36:	d8 f7       	brcc	.-10     	; 0xe2e <strnlen+0x2>
 e38:	80 95       	com	r24
 e3a:	90 95       	com	r25
 e3c:	8e 0f       	add	r24, r30
 e3e:	9f 1f       	adc	r25, r31
 e40:	08 95       	ret

00000e42 <fputc>:
 e42:	0f 93       	push	r16
 e44:	1f 93       	push	r17
 e46:	cf 93       	push	r28
 e48:	df 93       	push	r29
 e4a:	fb 01       	movw	r30, r22
 e4c:	23 81       	ldd	r18, Z+3	; 0x03
 e4e:	21 fd       	sbrc	r18, 1
 e50:	03 c0       	rjmp	.+6      	; 0xe58 <fputc+0x16>
 e52:	8f ef       	ldi	r24, 0xFF	; 255
 e54:	9f ef       	ldi	r25, 0xFF	; 255
 e56:	2c c0       	rjmp	.+88     	; 0xeb0 <fputc+0x6e>
 e58:	22 ff       	sbrs	r18, 2
 e5a:	16 c0       	rjmp	.+44     	; 0xe88 <fputc+0x46>
 e5c:	46 81       	ldd	r20, Z+6	; 0x06
 e5e:	57 81       	ldd	r21, Z+7	; 0x07
 e60:	24 81       	ldd	r18, Z+4	; 0x04
 e62:	35 81       	ldd	r19, Z+5	; 0x05
 e64:	42 17       	cp	r20, r18
 e66:	53 07       	cpc	r21, r19
 e68:	44 f4       	brge	.+16     	; 0xe7a <fputc+0x38>
 e6a:	a0 81       	ld	r26, Z
 e6c:	b1 81       	ldd	r27, Z+1	; 0x01
 e6e:	9d 01       	movw	r18, r26
 e70:	2f 5f       	subi	r18, 0xFF	; 255
 e72:	3f 4f       	sbci	r19, 0xFF	; 255
 e74:	31 83       	std	Z+1, r19	; 0x01
 e76:	20 83       	st	Z, r18
 e78:	8c 93       	st	X, r24
 e7a:	26 81       	ldd	r18, Z+6	; 0x06
 e7c:	37 81       	ldd	r19, Z+7	; 0x07
 e7e:	2f 5f       	subi	r18, 0xFF	; 255
 e80:	3f 4f       	sbci	r19, 0xFF	; 255
 e82:	37 83       	std	Z+7, r19	; 0x07
 e84:	26 83       	std	Z+6, r18	; 0x06
 e86:	14 c0       	rjmp	.+40     	; 0xeb0 <fputc+0x6e>
 e88:	8b 01       	movw	r16, r22
 e8a:	ec 01       	movw	r28, r24
 e8c:	fb 01       	movw	r30, r22
 e8e:	00 84       	ldd	r0, Z+8	; 0x08
 e90:	f1 85       	ldd	r31, Z+9	; 0x09
 e92:	e0 2d       	mov	r30, r0
 e94:	09 95       	icall
 e96:	89 2b       	or	r24, r25
 e98:	e1 f6       	brne	.-72     	; 0xe52 <fputc+0x10>
 e9a:	d8 01       	movw	r26, r16
 e9c:	16 96       	adiw	r26, 0x06	; 6
 e9e:	8d 91       	ld	r24, X+
 ea0:	9c 91       	ld	r25, X
 ea2:	17 97       	sbiw	r26, 0x07	; 7
 ea4:	01 96       	adiw	r24, 0x01	; 1
 ea6:	17 96       	adiw	r26, 0x07	; 7
 ea8:	9c 93       	st	X, r25
 eaa:	8e 93       	st	-X, r24
 eac:	16 97       	sbiw	r26, 0x06	; 6
 eae:	ce 01       	movw	r24, r28
 eb0:	df 91       	pop	r29
 eb2:	cf 91       	pop	r28
 eb4:	1f 91       	pop	r17
 eb6:	0f 91       	pop	r16
 eb8:	08 95       	ret

00000eba <__ultoa_invert>:
 eba:	fa 01       	movw	r30, r20
 ebc:	aa 27       	eor	r26, r26
 ebe:	28 30       	cpi	r18, 0x08	; 8
 ec0:	51 f1       	breq	.+84     	; 0xf16 <__ultoa_invert+0x5c>
 ec2:	20 31       	cpi	r18, 0x10	; 16
 ec4:	81 f1       	breq	.+96     	; 0xf26 <__ultoa_invert+0x6c>
 ec6:	e8 94       	clt
 ec8:	6f 93       	push	r22
 eca:	6e 7f       	andi	r22, 0xFE	; 254
 ecc:	6e 5f       	subi	r22, 0xFE	; 254
 ece:	7f 4f       	sbci	r23, 0xFF	; 255
 ed0:	8f 4f       	sbci	r24, 0xFF	; 255
 ed2:	9f 4f       	sbci	r25, 0xFF	; 255
 ed4:	af 4f       	sbci	r26, 0xFF	; 255
 ed6:	b1 e0       	ldi	r27, 0x01	; 1
 ed8:	3e d0       	rcall	.+124    	; 0xf56 <__ultoa_invert+0x9c>
 eda:	b4 e0       	ldi	r27, 0x04	; 4
 edc:	3c d0       	rcall	.+120    	; 0xf56 <__ultoa_invert+0x9c>
 ede:	67 0f       	add	r22, r23
 ee0:	78 1f       	adc	r23, r24
 ee2:	89 1f       	adc	r24, r25
 ee4:	9a 1f       	adc	r25, r26
 ee6:	a1 1d       	adc	r26, r1
 ee8:	68 0f       	add	r22, r24
 eea:	79 1f       	adc	r23, r25
 eec:	8a 1f       	adc	r24, r26
 eee:	91 1d       	adc	r25, r1
 ef0:	a1 1d       	adc	r26, r1
 ef2:	6a 0f       	add	r22, r26
 ef4:	71 1d       	adc	r23, r1
 ef6:	81 1d       	adc	r24, r1
 ef8:	91 1d       	adc	r25, r1
 efa:	a1 1d       	adc	r26, r1
 efc:	20 d0       	rcall	.+64     	; 0xf3e <__ultoa_invert+0x84>
 efe:	09 f4       	brne	.+2      	; 0xf02 <__ultoa_invert+0x48>
 f00:	68 94       	set
 f02:	3f 91       	pop	r19
 f04:	2a e0       	ldi	r18, 0x0A	; 10
 f06:	26 9f       	mul	r18, r22
 f08:	11 24       	eor	r1, r1
 f0a:	30 19       	sub	r19, r0
 f0c:	30 5d       	subi	r19, 0xD0	; 208
 f0e:	31 93       	st	Z+, r19
 f10:	de f6       	brtc	.-74     	; 0xec8 <__ultoa_invert+0xe>
 f12:	cf 01       	movw	r24, r30
 f14:	08 95       	ret
 f16:	46 2f       	mov	r20, r22
 f18:	47 70       	andi	r20, 0x07	; 7
 f1a:	40 5d       	subi	r20, 0xD0	; 208
 f1c:	41 93       	st	Z+, r20
 f1e:	b3 e0       	ldi	r27, 0x03	; 3
 f20:	0f d0       	rcall	.+30     	; 0xf40 <__ultoa_invert+0x86>
 f22:	c9 f7       	brne	.-14     	; 0xf16 <__ultoa_invert+0x5c>
 f24:	f6 cf       	rjmp	.-20     	; 0xf12 <__ultoa_invert+0x58>
 f26:	46 2f       	mov	r20, r22
 f28:	4f 70       	andi	r20, 0x0F	; 15
 f2a:	40 5d       	subi	r20, 0xD0	; 208
 f2c:	4a 33       	cpi	r20, 0x3A	; 58
 f2e:	18 f0       	brcs	.+6      	; 0xf36 <__ultoa_invert+0x7c>
 f30:	49 5d       	subi	r20, 0xD9	; 217
 f32:	31 fd       	sbrc	r19, 1
 f34:	40 52       	subi	r20, 0x20	; 32
 f36:	41 93       	st	Z+, r20
 f38:	02 d0       	rcall	.+4      	; 0xf3e <__ultoa_invert+0x84>
 f3a:	a9 f7       	brne	.-22     	; 0xf26 <__ultoa_invert+0x6c>
 f3c:	ea cf       	rjmp	.-44     	; 0xf12 <__ultoa_invert+0x58>
 f3e:	b4 e0       	ldi	r27, 0x04	; 4
 f40:	a6 95       	lsr	r26
 f42:	97 95       	ror	r25
 f44:	87 95       	ror	r24
 f46:	77 95       	ror	r23
 f48:	67 95       	ror	r22
 f4a:	ba 95       	dec	r27
 f4c:	c9 f7       	brne	.-14     	; 0xf40 <__ultoa_invert+0x86>
 f4e:	00 97       	sbiw	r24, 0x00	; 0
 f50:	61 05       	cpc	r22, r1
 f52:	71 05       	cpc	r23, r1
 f54:	08 95       	ret
 f56:	9b 01       	movw	r18, r22
 f58:	ac 01       	movw	r20, r24
 f5a:	0a 2e       	mov	r0, r26
 f5c:	06 94       	lsr	r0
 f5e:	57 95       	ror	r21
 f60:	47 95       	ror	r20
 f62:	37 95       	ror	r19
 f64:	27 95       	ror	r18
 f66:	ba 95       	dec	r27
 f68:	c9 f7       	brne	.-14     	; 0xf5c <__ultoa_invert+0xa2>
 f6a:	62 0f       	add	r22, r18
 f6c:	73 1f       	adc	r23, r19
 f6e:	84 1f       	adc	r24, r20
 f70:	95 1f       	adc	r25, r21
 f72:	a0 1d       	adc	r26, r0
 f74:	08 95       	ret

00000f76 <__prologue_saves__>:
 f76:	2f 92       	push	r2
 f78:	3f 92       	push	r3
 f7a:	4f 92       	push	r4
 f7c:	5f 92       	push	r5
 f7e:	6f 92       	push	r6
 f80:	7f 92       	push	r7
 f82:	8f 92       	push	r8
 f84:	9f 92       	push	r9
 f86:	af 92       	push	r10
 f88:	bf 92       	push	r11
 f8a:	cf 92       	push	r12
 f8c:	df 92       	push	r13
 f8e:	ef 92       	push	r14
 f90:	ff 92       	push	r15
 f92:	0f 93       	push	r16
 f94:	1f 93       	push	r17
 f96:	cf 93       	push	r28
 f98:	df 93       	push	r29
 f9a:	cd b7       	in	r28, 0x3d	; 61
 f9c:	de b7       	in	r29, 0x3e	; 62
 f9e:	ca 1b       	sub	r28, r26
 fa0:	db 0b       	sbc	r29, r27
 fa2:	0f b6       	in	r0, 0x3f	; 63
 fa4:	f8 94       	cli
 fa6:	de bf       	out	0x3e, r29	; 62
 fa8:	0f be       	out	0x3f, r0	; 63
 faa:	cd bf       	out	0x3d, r28	; 61
 fac:	09 94       	ijmp

00000fae <__epilogue_restores__>:
 fae:	2a 88       	ldd	r2, Y+18	; 0x12
 fb0:	39 88       	ldd	r3, Y+17	; 0x11
 fb2:	48 88       	ldd	r4, Y+16	; 0x10
 fb4:	5f 84       	ldd	r5, Y+15	; 0x0f
 fb6:	6e 84       	ldd	r6, Y+14	; 0x0e
 fb8:	7d 84       	ldd	r7, Y+13	; 0x0d
 fba:	8c 84       	ldd	r8, Y+12	; 0x0c
 fbc:	9b 84       	ldd	r9, Y+11	; 0x0b
 fbe:	aa 84       	ldd	r10, Y+10	; 0x0a
 fc0:	b9 84       	ldd	r11, Y+9	; 0x09
 fc2:	c8 84       	ldd	r12, Y+8	; 0x08
 fc4:	df 80       	ldd	r13, Y+7	; 0x07
 fc6:	ee 80       	ldd	r14, Y+6	; 0x06
 fc8:	fd 80       	ldd	r15, Y+5	; 0x05
 fca:	0c 81       	ldd	r16, Y+4	; 0x04
 fcc:	1b 81       	ldd	r17, Y+3	; 0x03
 fce:	aa 81       	ldd	r26, Y+2	; 0x02
 fd0:	b9 81       	ldd	r27, Y+1	; 0x01
 fd2:	ce 0f       	add	r28, r30
 fd4:	d1 1d       	adc	r29, r1
 fd6:	0f b6       	in	r0, 0x3f	; 63
 fd8:	f8 94       	cli
 fda:	de bf       	out	0x3e, r29	; 62
 fdc:	0f be       	out	0x3f, r0	; 63
 fde:	cd bf       	out	0x3d, r28	; 61
 fe0:	ed 01       	movw	r28, r26
 fe2:	08 95       	ret

00000fe4 <_exit>:
 fe4:	f8 94       	cli

00000fe6 <__stop_program>:
 fe6:	ff cf       	rjmp	.-2      	; 0xfe6 <__stop_program>
